[
  {
    "url": "https://www.python.org/Algorithms",
    "title": "Welcome to Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. We couldn’t find what you were looking for. This error has been reported and we will look into it shortly. For now, Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/Natural_language_processing",
    "title": "Welcome to Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. We couldn’t find what you were looking for. This error has been reported and we will look into it shortly. For now, Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/WebReact",
    "title": "ð¤·ð½ââï¸ Page not found | Page not found | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Go back to the home page Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.bbc.com/newsSoftware_engineering",
    "title": "BBC - 404: Not Found",
    "content": "404\n              \n                Not Found Check the page address or search for it below. BBC Homepage Copyright © BBC.\n              \n              The BBC is not responsible for the content of external sites.\n              \n                Read about our approach to external\n                linking."
  },
  {
    "url": "https://www.bbc.com/newsLinux",
    "title": "BBC - 404: Not Found",
    "content": "404\n              \n                Not Found Check the page address or search for it below. BBC Homepage Copyright © BBC.\n              \n              The BBC is not responsible for the content of external sites.\n              \n                Read about our approach to external\n                linking."
  },
  {
    "url": "https://www.python.org/Flask",
    "title": "Welcome to Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. We couldn’t find what you were looking for. This error has been reported and we will look into it shortly. For now, Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://towardsdatascience.com/JavaScript",
    "title": "JavaScript for Data Analysis | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. With the web opening new frontiers in collaboration, the web's native language of JavaScript is the best choice for thinking with data. On the demise of cameras in favor of camera-equipped mobile phones, Chase Jarvis once quipped, \"The best camera is the one that’s with you.\" In other words, portability and convenience outweigh technical differences in resolution, color, bokeh, etc. If you want to take a picture, a camera in your hand is better than a camera left at home. I think of this when asked about JavaScript versus Python, R, or Julia for data analysis. Those other languages are all great. They have powerful features such as operator overloading and multidimensional arrays, robust open-source libraries for math and visualization, and active communities. It’s easy to argue why any of them might be better suited than JavaScript for data analysis. Yet in my view, the language differences are beside the point. In part this is because JavaScript – the language, the web platform, and the open-source ecosystem – grows more capable every year. A tremendous amount of work goes into JavaScript by browser vendors, standards groups, researchers, and a vast population of global contributors. When we say JavaScript is fast, it isn’t by luck; it’s because people made it fast. We all benefit from this consolidated effort. And because JavaScript is the language of the web, it runs everywhere. Like the camera phone in your pocket, nearly everyone has a browser that runs JavaScript – the very browser you’re using to read this article. JavaScript enables interactive visualizations, explorable explanations, live analyses, model simulations, computational art, games, quizzes, you name it… When someone shares an analysis implemented in JavaScript, you’re not just seeing a static snapshot of their work; you’re running it live in your browser. You can go beyond passive reading by querying data, tweaking assumptions, and asking questions. JavaScript is the richest medium we’ve ever had for communication, but thanks to the open nature of the web it’s also something more: a medium amenable to inspection and tinkering, for learning and collaboration. Browser developer tools allow you to view, step into, and even modify, running code. The web got me hooked on programming. I first learned JavaScript through View Source: if a web page did something cool, I’d view its source and tinker with it to understand how it worked and to see if I could repurpose it to make something interesting. The immediacy and accessibility of JavaScript – and the endless possibilities – made it intoxicating. What has motivated me to keep building software over the last twenty-odd years is the idea that when you build something on the web, you’re teaching others how to build something too. We’re all swimming in this primordial soup of ideas, giving and receiving creative inspiration. Collaboration and communication are why the web exists. The web is how we work. It’s how we learn. It’s how we share ideas. It’s the web what makes JavaScript great for data analysis (and much else besides). On the web, we can edit and run code together in realtime, share exploratory views of data to answer questions, and explain concepts, with little friction. We can do almost anything we can imagine. So I admire the many powerful features and libraries available in other languages, but JavaScript is my first choice for its portability and convenience. It’s the easiest way to share live code anyone can edit. Of course, there’s still much to do. JavaScript may not have been conceived as a language for data analysis, but the language can be extended to better support it. I’m optimistic. JavaScript has improved dramatically over the last ten years, adding async/await, arrow functions, promises, iterators, generators, and more. Thanks to ES modules and services like Skypack, we may finally see easier library interoperability between Node.js and browsers (or at least fewer headaches with bundlers, transpilers, and loaders). With WebGPU, WebAssembly, and other standards under development, JavaScript’s future is bright. (See Ben Schmidt’s JavaScript and the next decade of data programming for more.) We also need new libraries and abstractions that let us spend more time thinking with data and less wrestling with the intricacies of programming. Open-source efforts such as Apache Arrow, Arquero, tidy.js, Observable Plot (which I contribute to), and Vega-Lite are helping. As the author of D3.js, another open-source JavaScript library for visualization, I’ve heard from folks who were inspired to learn visualization by the work others shared openly on the web. Some of these folks even made it a career. I’m hopeful that with better tools – and specifically tools that embrace collaboration on the web – even more folks can unlock the power of thinking with data, together. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. This article explores the relationship between a movie’s dialogue and its genre, leveraging domain-driven data… How to build a modern, scalable data platform to power your analytics and data science… How to make graphs using Matplotlib, Pandas and Seaborn Create Visualizations at the Level of Leading Newspapers To what extent are countries adopting data policies and systems for the public good? From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable… From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://www.bbc.com/newsGitHub",
    "title": "BBC - 404: Not Found",
    "content": "404\n              \n                Not Found Check the page address or search for it below. BBC Homepage Copyright © BBC.\n              \n              The BBC is not responsible for the content of external sites.\n              \n                Read about our approach to external\n                linking."
  },
  {
    "url": "https://www.bbc.com/newsDjango",
    "title": "BBC - 404: Not Found",
    "content": "404\n              \n                Not Found Check the page address or search for it below. BBC Homepage Copyright © BBC.\n              \n              The BBC is not responsible for the content of external sites.\n              \n                Read about our approach to external\n                linking."
  },
  {
    "url": "https://en.wikipedia.org/wiki/Deep_learning",
    "title": "Deep learning - Wikipedia",
    "content": "In machine learning, deep learning focuses on utilizing multilayered neural networks to perform tasks such as classification, regression, and representation learning. The field takes inspiration from biological neuroscience and is centered around stacking artificial neurons into layers and \"training\" them to process data. The adjective \"deep\" refers to the use of multiple layers (ranging from three to several hundred or thousands) in the network. Methods used can be supervised, semi-supervised or unsupervised.[2] Some common deep learning network architectures include fully connected networks, deep belief networks, recurrent neural networks, convolutional neural networks, generative adversarial networks, transformers, and neural radiance fields. These architectures have been applied to fields including computer vision, speech recognition, natural language processing, machine translation, bioinformatics, drug design, medical image analysis, climate science, material inspection and board game programs, where they have produced results comparable to and in some cases surpassing human expert performance.[3][4][5] Early forms of neural networks were inspired by information processing and distributed communication nodes in biological systems, particularly the human brain. However, current neural networks do not intend to model the brain function of organisms, and are generally seen as low-quality models for that purpose.[6] Most modern deep learning models are based on multi-layered neural networks such as convolutional neural networks and transformers, although they can also include propositional formulas or latent variables organized layer-wise in deep generative models such as the nodes in deep belief networks and deep Boltzmann machines.[7] Fundamentally, deep learning refers to a class of machine learning algorithms in which a hierarchy of layers is used to transform input data into a progressively more abstract and composite representation. For example, in an image recognition model, the raw input may be an image (represented as a tensor of pixels). The first representational layer may attempt to identify basic shapes such as lines and circles, the second layer may compose and encode arrangements of edges, the third layer may encode a nose and eyes, and the fourth layer may recognize that the image contains a face. Importantly, a deep learning process can learn which features to optimally place at which level on its own. Prior to deep learning, machine learning techniques often involved hand-crafted feature engineering to transform the data into a more suitable representation for a classification algorithm to operate on. In the deep learning approach, features are not hand-crafted and the model discovers useful feature representations from the data automatically. This does not eliminate the need for hand-tuning; for example, varying numbers of layers and layer sizes can provide different degrees of abstraction.[8][2] The word \"deep\" in \"deep learning\" refers to the number of layers through which the data is transformed. More precisely, deep learning systems have a substantial credit assignment path (CAP) depth. The CAP is the chain of transformations from input to output. CAPs describe potentially causal connections between input and output. For a feedforward neural network, the depth of the CAPs is that of the network and is the number of hidden layers plus one (as the output layer is also parameterized). For recurrent neural networks, in which a signal may propagate through a layer more than once, the CAP depth is potentially unlimited.[9] No universally agreed-upon threshold of depth divides shallow learning from deep learning, but most researchers agree that deep learning involves CAP depth higher than two. CAP of depth two has been shown to be a universal approximator in the sense that it can emulate any function.[10] Beyond that, more layers do not add to the function approximator ability of the network. Deep models (CAP > two) are able to extract better features than shallow models and hence, extra layers help in learning the features effectively. Deep learning architectures can be constructed with a greedy layer-by-layer method.[11] Deep learning helps to disentangle these abstractions and pick out which features improve performance.[8] Deep learning algorithms can be applied to unsupervised learning tasks. This is an important benefit because unlabeled data is more abundant than the labeled data. Examples of deep structures that can be trained in an unsupervised manner are deep belief networks.[8][12] The term deep learning was introduced to the machine learning community by Rina Dechter in 1986,[13] and to artificial neural networks by Igor Aizenberg and colleagues in 2000, in the context of Boolean threshold neurons.[14][15] Although the history of its appearance is apparently more complicated.[16] Deep neural networks are generally interpreted in terms of the universal approximation theorem[17][18][19][20][21] or probabilistic inference.[22][23][8][9][24] The classic universal approximation theorem concerns the capacity of feedforward neural networks with a single hidden layer of finite size to approximate continuous functions.[17][18][19][20] In 1989, the first proof was published by George Cybenko for sigmoid activation functions[17] and was generalised to feed-forward multi-layer architectures in 1991 by Kurt Hornik.[18] Recent work also showed that universal approximation also holds for non-bounded activation functions such as Kunihiko Fukushima's rectified linear unit.[25][26] The universal approximation theorem for deep neural networks concerns the capacity of networks with bounded width but the depth is allowed to grow. Lu et al.[21] proved that if the width of a deep neural network with ReLU activation is strictly larger than the input dimension, then the network can approximate any Lebesgue integrable function; if the width is smaller or equal to the input dimension, then a deep neural network is not a universal approximator. The probabilistic interpretation[24] derives from the field of machine learning. It features inference,[23][7][8][9][12][24] as well as the optimization concepts of training and testing, related to fitting and generalization, respectively. More specifically, the probabilistic interpretation considers the activation nonlinearity as a cumulative distribution function.[24] The probabilistic interpretation led to the introduction of dropout as regularizer in neural networks. The probabilistic interpretation was introduced by researchers including Hopfield, Widrow and Narendra and popularized in surveys such as the one by Bishop.[27] There are two types of artificial neural network (ANN): feedforward neural network (FNN) or multilayer perceptron (MLP) and recurrent neural networks (RNN). RNNs have cycles in their connectivity structure, FNNs don't. In the 1920s, Wilhelm Lenz and Ernst Ising created the Ising model[28][29] which is essentially a non-learning RNN architecture consisting of neuron-like threshold elements. In 1972, Shun'ichi Amari made this architecture adaptive.[30][31] His learning RNN was republished by John Hopfield in 1982.[32] Other early recurrent neural networks were published by Kaoru Nakano in 1971.[33][34] Already in 1948, Alan Turing produced work on \"Intelligent Machinery\"  that was not published in his lifetime,[35] containing \"ideas related to artificial evolution and learning RNNs\".[31] Frank Rosenblatt (1958)[36] proposed the perceptron, an MLP with 3 layers: an input layer, a hidden layer with randomized weights that did not learn, and an output layer. He later published a 1962 book that also introduced variants and computer experiments, including a version with four-layer perceptrons \"with adaptive preterminal networks\" where the last two layers have learned weights (here he credits H. D. Block and B. W. Knight).[37]: section 16  The book cites an earlier network by R. D. Joseph (1960)[38] \"functionally equivalent to a variation of\" this four-layer system (the book mentions Joseph over 30 times). Should Joseph therefore be considered the originator of proper adaptive multilayer perceptrons with learning hidden units? Unfortunately, the learning algorithm was not a functional one, and fell into oblivion. The first working deep learning algorithm was the Group method of data handling, a method to train arbitrarily deep neural networks, published by Alexey Ivakhnenko and Lapa in 1965. They regarded it as a form of polynomial regression,[39] or a generalization of Rosenblatt's perceptron to handle more complex, nonlinear, and hierarchical relationships.[40] A 1971 paper described a deep network with eight layers trained by this method,[41] which is based on layer by layer training through regression analysis. Superfluous hidden units are pruned using a separate validation set. Since the activation functions of the nodes are Kolmogorov-Gabor polynomials, these were also the first deep networks with multiplicative units or \"gates\".[31] The first deep learning multilayer perceptron trained by stochastic gradient descent[42] was published in 1967 by Shun'ichi Amari.[43] In computer experiments conducted by Amari's student Saito, a five layer MLP with two modifiable layers learned  internal representations to classify non-linearily separable pattern classes.[31] Subsequent developments in hardware and hyperparameter tunings have made end-to-end stochastic gradient descent the currently dominant training technique. In 1969, Kunihiko Fukushima introduced the ReLU (rectified linear unit) activation function.[25][31] The rectifier has become the most popular activation function for deep learning.[44] Deep learning architectures for convolutional neural networks (CNNs) with convolutional layers and downsampling layers began with the Neocognitron introduced by Kunihiko Fukushima in 1979, though not trained by backpropagation.[45][46] Backpropagation is an efficient application of the chain rule derived by Gottfried Wilhelm Leibniz in 1673[47] to networks of differentiable nodes. The terminology \"back-propagating errors\" was actually introduced in 1962 by Rosenblatt,[37] but he did not know how to implement this, although Henry J. Kelley had a continuous precursor of backpropagation in 1960 in the context of control theory.[48] The modern form of backpropagation was first published in Seppo Linnainmaa's master thesis (1970).[49][50][31] G.M. Ostrovski et al. republished it in 1971.[51][52] Paul Werbos applied backpropagation to neural networks in 1982[53] (his 1974 PhD thesis, reprinted in a 1994 book,[54] did not yet describe the algorithm[52]). In 1986, David E. Rumelhart et al. popularised backpropagation but did not cite the original work.[55][56] The time delay neural network (TDNN) was introduced in 1987 by Alex Waibel to apply CNN to phoneme recognition. It used convolutions, weight sharing, and backpropagation.[57][58]  In 1988, Wei Zhang applied a backpropagation-trained CNN to alphabet recognition.[59] \nIn 1989, Yann LeCun et al. created a CNN called LeNet for recognizing handwritten ZIP codes on mail. Training required 3 days.[60] In 1990, Wei Zhang implemented a CNN on optical computing hardware.[61] In 1991, a CNN was applied to medical image object segmentation[62] and breast cancer detection in mammograms.[63] LeNet-5 (1998), a 7-level CNN by Yann LeCun et al., that classifies digits, was applied by several banks to recognize hand-written numbers on checks  digitized in 32x32 pixel images.[64] Recurrent neural networks (RNN)[28][30] were further developed in the 1980s. Recurrence is used for sequence processing, and when a recurrent network is unrolled, it mathematically resembles a deep feedforward layer. Consequently, they have similar properties and issues, and their developments had mutual influences. In RNN, two early influential works were the Jordan network (1986)[65] and the Elman network (1990),[66] which applied RNN to study problems in cognitive psychology. In the 1980s, backpropagation did not work well for deep learning with long credit assignment paths. To overcome this problem, in 1991, Jürgen Schmidhuber proposed a hierarchy of RNNs pre-trained one level at a time by self-supervised learning where each RNN tries to predict its own next input, which is the next unexpected input of the RNN below.[67][68] This \"neural history compressor\" uses predictive coding  to learn internal representations at multiple self-organizing time scales. This can substantially facilitate downstream deep learning. The RNN hierarchy can be collapsed into a single RNN, by  distilling a higher level chunker network into a lower level automatizer network.[67][68][31] In 1993, a neural history compressor solved a \"Very Deep Learning\" task that required more than 1000 subsequent layers in an RNN unfolded in time.[69] The \"P\" in ChatGPT refers to such pre-training. Sepp Hochreiter's diploma thesis (1991)[70] implemented the neural history compressor,[67] and identified and analyzed the vanishing gradient problem.[70][71]  Hochreiter proposed recurrent residual connections to solve the vanishing gradient problem. This led to the long short-term memory (LSTM), published in 1995.[72] LSTM can learn \"very deep learning\" tasks[9] with long credit assignment paths that require memories of events that happened thousands of discrete time steps before. That LSTM was not yet the modern architecture, which required a \"forget gate\", introduced in 1999,[73] which became the standard RNN architecture. In 1991, Jürgen Schmidhuber also published adversarial neural networks that contest with each other in the form of a zero-sum game, where one network's gain is the other network's loss.[74][75] The first network is a generative model that models a probability distribution over output patterns. The second network learns by gradient descent to predict the reactions of the environment to these patterns. This was called \"artificial curiosity\". In 2014, this principle was used in generative adversarial networks (GANs).[76] During 1985–1995, inspired by statistical mechanics, several architectures and methods were developed by Terry Sejnowski, Peter Dayan, Geoffrey Hinton, etc., including the Boltzmann machine,[77] restricted Boltzmann machine,[78] Helmholtz machine,[79] and the wake-sleep algorithm.[80] These were designed for unsupervised learning of deep generative models. However, those were more computationally expensive compared to backpropagation. Boltzmann machine learning algorithm, published in 1985, was briefly popular before being eclipsed by the backpropagation algorithm in 1986. (p. 112 [81]). A 1988 network became state of the art in protein structure prediction, an early application of deep learning to bioinformatics.[82] Both shallow and deep learning (e.g., recurrent nets) of ANNs for speech recognition have been explored for many years.[83][84][85] These methods never outperformed non-uniform internal-handcrafting Gaussian mixture model/Hidden Markov model (GMM-HMM) technology based on generative models of speech trained discriminatively.[86] Key difficulties have been analyzed, including gradient diminishing[70] and weak temporal correlation structure in neural predictive models.[87][88] Additional difficulties were the lack of training data and limited computing power. Most speech recognition researchers moved away from neural nets to pursue generative modeling. An exception was at SRI International in the late 1990s. Funded by the US government's NSA and DARPA, SRI researched in speech and speaker recognition. The speaker recognition team led by Larry Heck reported significant success with deep neural networks in speech processing in the 1998 NIST Speaker Recognition benchmark.[89][90] It was deployed in the Nuance Verifier, representing the first major industrial application of deep learning.[91] The principle of elevating \"raw\" features over hand-crafted optimization was first explored successfully in the architecture of deep autoencoder on the \"raw\" spectrogram or linear filter-bank features in the late 1990s,[90] showing its superiority over the Mel-Cepstral features that contain stages of fixed transformation from spectrograms. The raw features of speech, waveforms, later produced excellent larger-scale results.[92] Neural networks entered a lull, and simpler models that use task-specific handcrafted features such as Gabor filters and support vector machines (SVMs) became the preferred choices in the 1990s and 2000s, because of artificial neural networks' computational cost and a lack of understanding of how the brain wires its biological networks.[citation needed] In 2003, LSTM became competitive with traditional speech recognizers on certain tasks.[93] In 2006, Alex Graves, Santiago Fernández, Faustino Gomez, and Schmidhuber combined it with connectionist temporal classification (CTC)[94] in stacks of LSTMs.[95] In 2009, it became the first RNN to win a pattern recognition contest, in connected handwriting recognition.[96][9] In 2006, publications by Geoff Hinton, Ruslan Salakhutdinov, Osindero and Teh[97][98] deep belief networks were developed for generative modeling. They are trained by training one restricted Boltzmann machine, then freezing it and training another one on top of the first one, and so on, then optionally fine-tuned using supervised backpropagation.[99] They could model high-dimensional probability distributions, such as the distribution of MNIST images, but convergence was slow.[100][101][102] The impact of deep learning in industry began in the early 2000s, when CNNs already processed an estimated 10% to 20% of all the checks written in the US, according to Yann LeCun.[103] Industrial applications of deep learning to large-scale speech recognition started around 2010. The 2009 NIPS Workshop on Deep Learning for Speech Recognition was motivated by the limitations of deep generative models of speech, and the possibility that given more capable hardware and large-scale data sets that deep neural nets might become practical. It was believed that pre-training DNNs using generative models of deep belief nets (DBN) would overcome the main difficulties of neural nets. However, it was discovered that replacing pre-training with large amounts of training data for straightforward backpropagation when using DNNs with large, context-dependent output layers produced error rates dramatically lower than then-state-of-the-art Gaussian mixture model (GMM)/Hidden Markov Model (HMM) and also than more-advanced generative model-based systems.[104] The nature of the recognition errors produced by the two types of systems was characteristically different,[105] offering technical insights into how to integrate deep learning into the existing highly efficient, run-time speech decoding system deployed by all major speech recognition systems.[23][106][107] Analysis around 2009–2010, contrasting the GMM (and other generative speech models) vs. DNN models, stimulated early industrial investment in deep learning for speech recognition.[105]  That analysis was done with comparable performance (less than 1.5% in error rate) between discriminative DNNs and generative models.[104][105][108]\nIn 2010, researchers extended deep learning from TIMIT to large vocabulary speech recognition, by adopting large output layers of the DNN based on context-dependent HMM states constructed by decision trees.[109][110][111][106] The deep learning revolution started around CNN- and GPU-based computer vision. Although CNNs trained by backpropagation had been around for decades and GPU implementations of NNs for years,[112] including CNNs,[113] faster implementations of CNNs on GPUs were needed to progress on computer vision. Later, as deep learning becomes widespread, specialized hardware and algorithm optimizations were developed specifically for deep learning.[114] A key advance for the deep learning revolution was hardware advances, especially GPU. Some early work dated back to 2004.[112][113] In 2009, Raina, Madhavan, and Andrew Ng reported a 100M deep belief network trained on 30 Nvidia GeForce GTX 280 GPUs, an early demonstration of GPU-based deep learning. They reported up to 70 times faster training.[115] In 2011, a CNN named DanNet[116][117] by Dan Ciresan, Ueli Meier, Jonathan Masci, Luca Maria Gambardella, and Jürgen Schmidhuber achieved for the first time superhuman performance in a visual pattern recognition contest, outperforming traditional methods by a factor of 3.[9] It then won more contests.[118][119] They also showed how max-pooling CNNs on GPU improved performance significantly.[3] In 2012, Andrew Ng and Jeff Dean created an FNN that learned to recognize higher-level concepts, such as cats, only from watching unlabeled images taken from YouTube videos.[120] In October 2012, AlexNet by Alex Krizhevsky, Ilya Sutskever, and Geoffrey Hinton[4] won the large-scale ImageNet competition by a significant margin over shallow machine learning methods. Further incremental improvements included the VGG-16 network by Karen Simonyan and Andrew Zisserman[121] and Google's Inceptionv3.[122] The success in image classification was then extended to the more challenging task of generating descriptions (captions) for images, often as a combination of CNNs and LSTMs.[123][124][125] In 2014, the state of the art was training “very deep neural network” with 20 to 30 layers.[126] Stacking too many layers led to a steep reduction in training accuracy,[127] known as the \"degradation\" problem.[128] In 2015, two techniques were developed to train very deep networks: the Highway Network was published in May 2015, and the residual neural network (ResNet)[129] in Dec 2015. ResNet behaves like an open-gated Highway Net. Around the same time, deep learning started impacting the field of art. Early examples included Google DeepDream (2015), and neural style transfer (2015),[130] both of which were based on pretrained image classification neural networks, such as VGG-19. Generative adversarial network (GAN) by (Ian Goodfellow et al., 2014)[131] (based on  Jürgen Schmidhuber's principle of artificial curiosity[74][76])\nbecame state of the art in generative modeling during 2014-2018 period. Excellent image quality is achieved by Nvidia's StyleGAN (2018)[132] based on the Progressive GAN by Tero Karras et al.[133] Here the GAN generator is grown from small to large scale in a pyramidal fashion. Image generation by GAN reached popular success, and provoked discussions concerning deepfakes.[134] Diffusion models (2015)[135] eclipsed GANs in generative modeling since then, with systems such as DALL·E 2 (2022) and Stable Diffusion (2022). In 2015, Google's speech recognition improved by 49% by an LSTM-based model, which they made available through Google Voice Search on smartphone.[136][137] Deep learning is part of state-of-the-art systems in various disciplines, particularly computer vision and automatic speech recognition (ASR). Results on commonly used evaluation sets such as TIMIT (ASR) and MNIST (image classification), as well as a range of large-vocabulary speech recognition tasks have steadily improved.[104][138] Convolutional neural networks were superseded for ASR by LSTM.[137][139][140][141] but are more successful in computer vision. Yoshua Bengio, Geoffrey Hinton and Yann LeCun were awarded the 2018 Turing Award for \"conceptual and engineering breakthroughs that have made deep neural networks a critical component of computing\".[142] Artificial neural networks (ANNs) or connectionist systems are computing systems inspired by the biological neural networks that constitute animal brains. Such systems learn (progressively improve their ability) to do tasks by considering examples, generally without task-specific programming. For example, in image recognition, they might learn to identify images that contain cats by analyzing example images that have been manually labeled as \"cat\" or \"no cat\" and using the analytic results to identify cats in other images. They have found most use in applications difficult to express with a traditional computer algorithm using rule-based programming. An ANN is based on a collection of connected units called artificial neurons, (analogous to biological neurons in a biological brain). Each connection (synapse) between neurons can transmit a signal to another neuron. The receiving (postsynaptic) neuron can process the signal(s) and then signal downstream neurons connected to it. Neurons may have state, generally represented by real numbers, typically between 0 and 1. Neurons and synapses may also have a weight that varies as learning proceeds, which can increase or decrease the strength of the signal that it sends downstream. Typically, neurons are organized in layers. Different layers may perform different kinds of transformations on their inputs. Signals travel from the first (input), to the last (output) layer, possibly after traversing the layers multiple times. The original goal of the neural network approach was to solve problems in the same way that a human brain would. Over time, attention focused on matching specific mental abilities, leading to deviations from biology such as backpropagation, or passing information in the reverse direction and adjusting the network to reflect that information. Neural networks have been used on a variety of tasks, including computer vision, speech recognition, machine translation, social network filtering, playing board and video games and medical diagnosis. As of 2017, neural networks typically have a few thousand to a few million units and millions of connections. Despite this number being several order of magnitude less than the number of neurons on a human brain, these networks can perform many tasks at a level beyond that of humans (e.g., recognizing faces, or playing \"Go\"[144]). A deep neural network (DNN) is an artificial neural network with multiple layers between the input and output layers.[7][9] There are different types of neural networks but they always consist of the same components: neurons, synapses, weights, biases, and functions.[145] These components as a whole function in a way that mimics functions of the human brain, and can be trained like any other ML algorithm.[citation needed] For example, a DNN that is trained to recognize dog breeds will go over the given image and calculate the probability that the dog in the image is a certain breed. The user can review the results and select which probabilities the network should display (above a certain threshold, etc.) and return the proposed label. Each mathematical manipulation as such is considered a layer, [146] and complex DNN have many layers, hence the name \"deep\" networks. DNNs can model complex non-linear relationships. DNN architectures generate compositional models where the object is expressed as a layered composition of primitives.[147] The extra layers enable composition of features from lower layers, potentially modeling complex data with fewer units than a similarly performing shallow network.[7] For instance, it was proved that sparse multivariate polynomials are exponentially easier to approximate with DNNs than with shallow networks.[148] Deep architectures include many variants of a few basic approaches. Each architecture has found success in specific domains. It is not always possible to compare the performance of multiple architectures, unless they have been evaluated on the same data sets.[146] DNNs are typically feedforward networks in which data flows from the input layer to the output layer without looping back. At first, the DNN creates a map of virtual neurons and assigns random numerical values, or \"weights\", to connections between them. The weights and inputs are multiplied and return an output between 0 and 1. If the network did not accurately recognize a particular pattern, an algorithm would adjust the weights.[149] That way the algorithm can make certain parameters more influential, until it determines the correct mathematical manipulation to fully process the data. Recurrent neural networks, in which data can flow in any direction, are used for applications such as language modeling.[150][151][152][153][154] Long short-term memory is particularly effective for this use.[155][156] Convolutional neural networks (CNNs) are used in computer vision.[157] CNNs also have been applied to acoustic modeling for automatic speech recognition (ASR).[158] As with ANNs, many issues can arise with naively trained DNNs. Two common issues are overfitting and computation time. DNNs are prone to overfitting because of the added layers of abstraction, which allow them to model rare dependencies in the training data. Regularization methods such as Ivakhnenko's unit pruning[41] or weight decay (\n\n\n\n\nℓ\n\n2\n\n\n\n\n{\\displaystyle \\ell _{2}}\n\n-regularization) or sparsity (\n\n\n\n\nℓ\n\n1\n\n\n\n\n{\\displaystyle \\ell _{1}}\n\n-regularization) can be applied during training to combat overfitting.[159] Alternatively dropout regularization randomly omits units from the hidden layers during training. This helps to exclude rare dependencies.[160] Another interesting recent development is research into models of just enough complexity through an estimation of the intrinsic complexity of the task being modelled. This approach has been successfully applied for multivariate time series prediction tasks such as traffic prediction.[161] Finally, data can be augmented via methods such as cropping and rotating such that smaller training sets can be increased in size to reduce the chances of overfitting.[162] DNNs must consider many training parameters, such as the size (number of layers and number of units per layer), the learning rate, and initial weights. Sweeping through the parameter space for optimal parameters may not be feasible due to the cost in time and computational resources. Various tricks, such as batching (computing the gradient on several training examples at once rather than individual examples)[163] speed up computation. Large processing capabilities of many-core architectures (such as GPUs or the Intel Xeon Phi) have produced significant speedups in training, because of the suitability of such processing architectures for the matrix and vector computations.[164][165] Alternatively, engineers may look for other types of neural networks with more straightforward and convergent training algorithms. CMAC (cerebellar model articulation controller) is one such kind of neural network. It doesn't require learning rates or randomized initial weights. The training process can be guaranteed to converge in one step with a new batch of data, and the computational complexity of the training algorithm is linear with respect to the number of neurons involved.[166][167] Since the 2010s, advances in both machine learning algorithms and computer hardware have led to more efficient methods for training deep neural networks that contain many layers of non-linear hidden units and a very large output layer.[168] By 2019, graphics processing units (GPUs), often with AI-specific enhancements, had displaced CPUs as the dominant method for training large-scale commercial cloud AI .[169] OpenAI estimated the hardware computation used in the largest deep learning projects from AlexNet (2012) to AlphaZero (2017) and found a 300,000-fold increase in the amount of computation required, with a doubling-time trendline of 3.4 months.[170][171] Special electronic circuits called deep learning processors were designed to speed up deep learning algorithms. Deep learning processors include neural processing units (NPUs) in Huawei cellphones[172] and cloud computing servers such as tensor processing units (TPU) in the Google Cloud Platform.[173] Cerebras Systems has also built a dedicated system to handle large deep learning models, the CS-2, based on the largest processor in the industry, the second-generation Wafer Scale Engine (WSE-2).[174][175] Atomically thin semiconductors are considered promising for energy-efficient deep learning hardware where the same basic device structure is used for both logic operations and data storage.\nIn 2020, Marega et al. published experiments with a large-area active channel material for developing logic-in-memory devices and circuits based on floating-gate field-effect transistors (FGFETs).[176] In 2021, J. Feldmann et al. proposed an integrated photonic hardware accelerator for parallel convolutional processing.[177] The authors identify two key advantages of integrated photonics over its electronic counterparts: (1) massively parallel data transfer through wavelength division multiplexing in conjunction with frequency combs, and (2) extremely high data modulation speeds.[177] Their system can execute trillions of multiply-accumulate operations per second, indicating the potential of integrated photonics in data-heavy AI applications.[177] Large-scale automatic speech recognition is the first and most convincing successful case of deep learning. LSTM RNNs can learn \"Very Deep Learning\" tasks[9] that involve multi-second intervals containing speech events separated by thousands of discrete time steps, where one time step corresponds to about 10 ms. LSTM with forget gates[156] is competitive with traditional speech recognizers on certain tasks.[93] The initial success in speech recognition was based on small-scale recognition tasks based on TIMIT. The data set contains 630 speakers from eight major dialects of American English, where each speaker reads 10 sentences.[178] Its small size lets many configurations be tried. More importantly, the TIMIT task concerns phone-sequence recognition, which, unlike word-sequence recognition, allows weak phone bigram language models. This lets the strength of the acoustic modeling aspects of speech recognition be more easily analyzed. The error rates listed below, including these early results and measured as percent phone error rates (PER), have been summarized since 1991. The debut of DNNs for speaker recognition in the late 1990s and speech recognition around 2009-2011 and of LSTM around 2003–2007, accelerated progress in eight major areas:[23][108][106] More recent speech recognition models use Transformers or Temporal Convolution Networks with significant success and widespread applications.[183][184][185] All major commercial speech recognition systems (e.g., Microsoft Cortana, Xbox, Skype Translator, Amazon Alexa, Google Now, Apple Siri, Baidu and iFlyTek voice search, and a range of Nuance speech products, etc.) are based on deep learning.[23][186][187] A common evaluation set for image classification is the MNIST database data set. MNIST is composed of handwritten digits and includes 60,000 training examples and 10,000 test examples. As with TIMIT, its small size lets users test multiple configurations. A comprehensive list of results on this set is available.[188] Deep learning-based image recognition has become \"superhuman\", producing more accurate results than human contestants. This first occurred in 2011 in recognition of traffic signs, and in 2014, with recognition of human faces.[189][190] Deep learning-trained vehicles now interpret 360° camera views.[191] Another example is Facial Dysmorphology Novel Analysis (FDNA) used to analyze cases of human malformation connected to a large database of genetic syndromes. Closely related to the progress that has been made in image recognition is the increasing application of deep learning techniques to various visual art tasks. DNNs have proven themselves capable, for example, of Neural networks have been used for implementing language models since the early 2000s.[150] LSTM helped to improve machine translation and language modeling.[151][152][153] Other key techniques in this field are negative sampling[194] and word embedding. Word embedding, such as word2vec, can be thought of as a representational layer in a deep learning architecture that transforms an atomic word into a positional representation of the word relative to other words in the dataset; the position is represented as a point in a vector space. Using word embedding as an RNN input layer allows the network to parse sentences and phrases using an effective compositional vector grammar. A compositional vector grammar can be thought of as probabilistic context free grammar (PCFG) implemented by an RNN.[195] Recursive auto-encoders built atop word embeddings can assess sentence similarity and detect paraphrasing.[195] Deep neural architectures provide the best results for constituency parsing,[196] sentiment analysis,[197] information retrieval,[198][199] spoken language understanding,[200] machine translation,[151][201] contextual entity linking,[201] writing style recognition,[202] named-entity recognition (token classification),[203] text classification, and others.[204] Recent developments generalize word embedding to sentence embedding. Google Translate (GT) uses a large end-to-end long short-term memory (LSTM) network.[205][206][207][208] Google Neural Machine Translation (GNMT) uses an example-based machine translation method in which the system \"learns from millions of examples\".[206] It translates \"whole sentences at a time, rather than pieces\". Google Translate supports over one hundred languages.[206] The network encodes the \"semantics of the sentence rather than simply memorizing phrase-to-phrase translations\".[206][209] GT uses English as an intermediate between most language pairs.[209] A large percentage of candidate drugs fail to win regulatory approval. These failures are caused by insufficient efficacy (on-target effect), undesired interactions (off-target effects), or unanticipated toxic effects.[210][211] Research has explored use of deep learning to predict the biomolecular targets,[212][213] off-targets, and toxic effects of environmental chemicals in nutrients, household products and drugs.[214][215][216] AtomNet is a deep learning system for structure-based rational drug design.[217] AtomNet was used to predict novel candidate biomolecules for disease targets such as the Ebola virus[218] and multiple sclerosis.[219][218] In 2017 graph neural networks were used for the first time to predict various properties of molecules in a large toxicology data set.[220] In 2019, generative neural networks were used to produce molecules that were validated experimentally all the way into mice.[221][222] Deep reinforcement learning has been used to approximate the value of possible direct marketing actions, defined in terms of RFM variables. The estimated value function was shown to have a natural interpretation as customer lifetime value.[223] Recommendation systems have used deep learning to extract meaningful features for a latent factor model for content-based music and journal recommendations.[224][225] Multi-view deep learning has been applied for learning user preferences from multiple domains.[226] The model uses a hybrid collaborative and content-based approach and enhances recommendations in multiple tasks. An autoencoder ANN was used in bioinformatics, to predict gene ontology annotations and gene-function relationships.[227] In medical informatics, deep learning was used to predict sleep quality based on data from wearables[228] and predictions of health complications from electronic health record data.[229] Deep neural networks have shown unparalleled performance in predicting protein structure, according to the sequence of the amino acids that make it up. In 2020, AlphaFold, a deep-learning based system, achieved a level of accuracy significantly higher than all previous computational methods.[230][231] Deep neural networks can be used to estimate the entropy of a stochastic process and called Neural Joint Entropy Estimator (NJEE).[232] Such an estimation provides insights on the effects of input random variables on an independent random variable. Practically, the DNN is trained as a classifier that maps an input vector or matrix X to an output probability distribution over the possible classes of random variable Y, given input X. For example, in image classification tasks, the NJEE maps a vector of pixels' color values to probabilities over possible image classes. In practice, the probability distribution of Y is obtained by a Softmax layer with number of nodes that is equal to the alphabet size of Y. NJEE uses continuously differentiable activation functions, such that the conditions for the universal approximation theorem holds. It is shown that this method provides a strongly consistent estimator and outperforms other methods in case of large alphabet sizes.[232] Deep learning has been shown to produce competitive results in medical application such as cancer cell classification, lesion detection, organ segmentation and image enhancement.[233][234] Modern deep learning tools demonstrate the high accuracy of detecting various diseases and the helpfulness of their use by specialists to improve the diagnosis efficiency.[235][236] Finding the appropriate mobile audience for mobile advertising is always challenging, since many data points must be considered and analyzed before a target segment can be created and used in ad serving by any ad server.[237] Deep learning has been used to interpret large, many-dimensioned advertising datasets. Many data points are collected during the request/serve/click internet advertising cycle. This information can form the basis of machine learning to improve ad selection. Deep learning has been successfully applied to inverse problems such as denoising, super-resolution, inpainting, and film colorization.[238] These applications include learning methods such as \"Shrinkage Fields for Effective Image Restoration\"[239] which trains on an image dataset, and Deep Image Prior, which trains on the image that needs restoration. Deep learning is being successfully applied to financial fraud detection, tax evasion detection,[240] and anti-money laundering.[241] In November 2023, researchers at Google DeepMind and Lawrence Berkeley National Laboratory announced that they had developed an AI system known as GNoME. This system has contributed to materials science by discovering over 2 million new materials within a relatively short timeframe. GNoME employs deep learning techniques to efficiently explore potential material structures, achieving a significant increase in the identification of stable inorganic crystal structures. The system's predictions were validated through autonomous robotic experiments, demonstrating a noteworthy success rate of 71%. The data of newly discovered materials is publicly available through the Materials Project database, offering researchers the opportunity to identify materials with desired properties for various applications. This development has implications for the future of scientific discovery and the integration of AI in material science research, potentially expediting material innovation and reducing costs in product development. The use of AI and deep learning suggests the possibility of minimizing or eliminating manual lab experiments and allowing scientists to focus more on the design and analysis of unique compounds.[242][243][244] The United States Department of Defense applied deep learning to train robots in new tasks through observation.[245] Physics informed neural networks have been used to solve partial differential equations in both forward and inverse problems in a data driven manner.[246] One example is the reconstructing fluid flow governed by the Navier-Stokes equations. Using physics informed neural networks does not require the often expensive mesh generation that conventional CFD methods rely on.[247][248] Deep backward stochastic differential equation method is a numerical method that combines deep learning with Backward stochastic differential equation (BSDE). This method is particularly useful for solving high-dimensional problems in financial mathematics. By leveraging the powerful function approximation capabilities of deep neural networks, deep BSDE addresses the computational challenges faced by traditional numerical methods in high-dimensional settings. Specifically, traditional methods like finite difference methods or Monte Carlo simulations often struggle with the curse of dimensionality, where computational cost increases exponentially with the number of dimensions. Deep BSDE methods, however, employ deep neural networks to approximate solutions of high-dimensional partial differential equations (PDEs), effectively reducing the computational burden.[249] In addition, the integration of Physics-informed neural networks (PINNs) into the deep BSDE framework enhances its capability by embedding the underlying physical laws directly into the neural network architecture. This ensures that the solutions not only fit the data but also adhere to the governing stochastic differential equations. PINNs leverage the power of deep learning while respecting the constraints imposed by the physical models, resulting in more accurate and reliable solutions for financial mathematics problems. Image reconstruction is the reconstruction of the underlying images from the image-related measurements. Several works showed the better and superior performance of the deep learning methods compared to analytical methods for various applications, e.g., spectral imaging [250] and ultrasound imaging.[251] Traditional weather prediction systems solve a very complex system of partial differential equations. GraphCast is a deep learning based model, trained on a long history of weather data to predict how weather patterns change over time. It is able to  predict weather conditions for up to 10 days globally, at a very detailed level, and in under a minute, with precision similar to state of the art systems.[252][253] An epigenetic clock is a biochemical test that can be used to measure age. Galkin et al. used deep neural networks to train an epigenetic aging clock of unprecedented accuracy using >6,000 blood samples.[254] The clock uses information from 1000 CpG sites and predicts people with certain conditions older than healthy controls: IBD, frontotemporal dementia, ovarian cancer, obesity. The aging clock was planned to be released for public use in 2021 by an Insilico Medicine spinoff company Deep Longevity. Deep learning is closely related to a class of theories of brain development (specifically, neocortical development) proposed by cognitive neuroscientists in the early 1990s.[255][256][257][258] These developmental theories were instantiated in computational models, making them predecessors of deep learning systems. These developmental models share the property that various proposed learning dynamics in the brain (e.g., a wave of nerve growth factor) support the self-organization somewhat analogous to the neural networks utilized in deep learning models. Like the neocortex, neural networks employ a hierarchy of layered filters in which each layer considers information from a prior layer (or the operating environment), and then passes its output (and possibly the original input), to other layers. This process yields a self-organizing stack of transducers, well-tuned to their operating environment. A 1995 description stated, \"...the infant's brain seems to organize itself under the influence of waves of so-called trophic-factors ... different regions of the brain become connected sequentially, with one layer of tissue maturing before another and so on until the whole brain is mature\".[259] A variety of approaches have been used to investigate the plausibility of deep learning models from a neurobiological perspective. On the one hand, several variants of the backpropagation algorithm have been proposed in order to increase its processing realism.[260][261] Other researchers have argued that unsupervised forms of deep learning, such as those based on hierarchical generative models and deep belief networks, may be closer to biological reality.[262][263] In this respect, generative neural network models have been related to neurobiological evidence about sampling-based processing in the cerebral cortex.[264] Although a systematic comparison between the human brain organization and the neuronal encoding in deep networks has not yet been established, several analogies have been reported. For example, the computations performed by deep learning units could be similar to those of actual neurons[265] and neural populations.[266] Similarly, the representations developed by deep learning models are similar to those measured in the primate visual system[267] both at the single-unit[268] and at the population[269] levels. Facebook's AI lab performs tasks such as automatically tagging uploaded pictures with the names of the people in them.[270] Google's DeepMind Technologies developed a system capable of learning how to play Atari video games using only pixels as data input. In 2015 they demonstrated their AlphaGo system, which learned the game of Go well enough to beat a professional Go player.[271][272][273] Google Translate uses a neural network to translate between more than 100 languages. In 2017, Covariant.ai was launched, which focuses on integrating deep learning into factories.[274] As of 2008,[275] researchers at The University of Texas at Austin (UT) developed a machine learning framework called Training an Agent Manually via Evaluative Reinforcement, or TAMER, which proposed new methods for robots or computer programs to learn how to perform tasks by interacting with a human instructor.[245] First developed as TAMER, a new algorithm called Deep TAMER was later introduced in 2018 during a collaboration between U.S. Army Research Laboratory (ARL) and UT researchers. Deep TAMER used deep learning to provide a robot with the ability to learn new tasks through observation.[245] Using Deep TAMER, a robot learned a task with a human trainer, watching video streams or observing a human perform a task in-person. The robot later practiced the task with the help of some coaching from the trainer, who provided feedback such as \"good job\" and \"bad job\".[276] Deep learning has attracted both criticism and comment, in some cases from outside the field of computer science. A main criticism concerns the lack of theory surrounding some methods.[277] Learning in the most common deep architectures is implemented using well-understood gradient descent. However, the theory surrounding other algorithms, such as contrastive divergence is less clear.[citation needed] (e.g., Does it converge? If so, how fast? What is it approximating?) Deep learning methods are often looked at as a black box, with most confirmations done empirically, rather than theoretically.[278] In further reference to the idea that artistic sensitivity might be inherent in relatively low levels of the cognitive hierarchy, a published series of graphic representations of the internal states of deep (20-30 layers) neural networks attempting to discern within essentially random data the images on which they were trained[279] demonstrate a visual appeal: the original research notice received well over 1,000 comments, and was the subject of what was for a time the most frequently accessed article on The Guardian's[280] website. Furthermore, some researchers have argued that standard loss functions and differentiable architectures in deep learning may limit the discovery of deeper causal or generative mechanisms.[281] Building on Algorithmic information theory (AIT), Hernández-Orozco et al. (2021)[282] proposed an algorithmic loss function to measure the discrepancy between predicted and observed system behavior. Their approach integrates AIT with Machine learning to formulate a framework for learning generative rules in non-differentiable spaces, bridging discrete algorithmic theory with continuous optimization techniques. This framework provides a new perspective on generalization and model interpretability by grounding learning dynamics in algorithmic complexity. [283] [284] Some deep learning architectures display problematic behaviors,[285] such as confidently classifying unrecognizable images as belonging to a familiar category of ordinary images (2014)[286] and misclassifying minuscule perturbations of correctly classified images (2013).[287] Goertzel hypothesized that these behaviors are due to limitations in their internal representations and that these limitations would inhibit integration into heterogeneous multi-component artificial general intelligence (AGI) architectures.[285] These issues may possibly be addressed by deep learning architectures that internally form states homologous to image-grammar[288] decompositions of observed entities and events.[285] Learning a grammar (visual or linguistic) from training data would be equivalent to restricting the system to commonsense reasoning that operates on concepts in terms of grammatical production rules and is a basic goal of both human language acquisition[289] and artificial intelligence (AI).[290] As deep learning moves from the lab into the world, research and experience show that artificial neural networks are vulnerable to hacks and deception.[291] By identifying patterns that these systems use to function, attackers can modify inputs to ANNs in such a way that the ANN finds a match that human observers would not recognize. For example, an attacker can make subtle changes to an image such that the ANN finds a match even though the image looks to a human nothing like the search target. Such manipulation is termed an \"adversarial attack\".[292] In 2016 researchers used one ANN to doctor images in trial and error fashion, identify another's focal points, and thereby generate images that deceived it. The modified images looked no different to human eyes. Another group showed that printouts of doctored images then photographed successfully tricked an image classification system.[293] One defense is reverse image search, in which a possible fake image is submitted to a site such as TinEye that can then find other instances of it. A refinement is to search using only parts of the image, to identify images from which that piece may have been taken.[294] Another group showed that certain psychedelic spectacles could fool a facial recognition system into thinking ordinary people were celebrities, potentially allowing one person to impersonate another. In 2017 researchers added stickers to stop signs and caused an ANN to misclassify them.[293] ANNs can however be further trained to detect attempts at deception, potentially leading attackers and defenders into an arms race similar to the kind that already defines the malware defense industry. ANNs have been trained to defeat ANN-based anti-malware software by repeatedly attacking a defense with malware that was continually altered by a genetic algorithm until it tricked the anti-malware while retaining its ability to damage the target.[293] In 2016, another group demonstrated that certain sounds could make the Google Now voice command system open a particular web address, and hypothesized that this could \"serve as a stepping stone for further attacks (e.g., opening a web page hosting drive-by malware)\".[293] In \"data poisoning\", false data is continually smuggled into a machine learning system's training set to prevent it from achieving mastery.[293] The deep learning systems that are trained using supervised learning often rely on data that is created or annotated by humans, or both.[295] It has been argued that not only low-paid clickwork (such as on Amazon Mechanical Turk) is regularly deployed for this purpose, but also implicit forms of human microwork that are often not recognized as such.[296] The philosopher Rainer Mühlhoff distinguishes five types of \"machinic capture\" of human microwork to generate training data: (1) gamification (the embedding of annotation or computation tasks in the flow of a game), (2) \"trapping and tracking\" (e.g. CAPTCHAs for image recognition or click-tracking on Google search results pages), (3) exploitation of social motivations (e.g. tagging faces on Facebook to obtain labeled facial images), (4) information mining (e.g. by leveraging quantified-self devices such as activity trackers) and (5) clickwork.[296]"
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/WebUbuntu",
    "title": "ð¤·ð½ââï¸ Page not found | Page not found | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Go back to the home page Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://en.wikipedia.org/wiki/Algorithms",
    "title": "Algorithm - Wikipedia",
    "content": "In mathematics and computer science, an algorithm (/ˈælɡərɪðəm/ ⓘ) is a finite sequence of mathematically rigorous instructions, typically used to solve a class of specific problems or to perform a computation.[1] Algorithms are used as specifications for performing calculations and data processing. More advanced algorithms can use conditionals to divert the code execution through various routes (referred to as automated decision-making) and deduce valid inferences (referred to as automated reasoning). In contrast, a heuristic is an approach to solving problems without well-defined correct or optimal results.[2] For example, although social media recommender systems are commonly called \"algorithms\", they actually rely on heuristics as there is no truly \"correct\" recommendation. As an effective method, an algorithm can be expressed within a finite amount of space and time[3] and in a well-defined formal language[4] for calculating a function.[5] Starting from an initial state and initial input (perhaps empty),[6] the instructions describe a computation that, when executed, proceeds through a finite[7] number of well-defined successive states, eventually producing \"output\"[8] and terminating at a final ending state. The transition from one state to the next is not necessarily deterministic; some algorithms, known as randomized algorithms, incorporate random input.[9] Around 825 AD, Persian scientist and polymath Muḥammad ibn Mūsā al-Khwārizmī wrote kitāb al-ḥisāb al-hindī (\"Book of Indian computation\") and kitab al-jam' wa'l-tafriq al-ḥisāb al-hindī (\"Addition and subtraction in Indian arithmetic\"). In the early 12th century, Latin translations of these texts involving the Hindu–Arabic numeral system and arithmetic appeared, for example Liber Alghoarismi de practica arismetrice, attributed to John of Seville, and Liber Algorismi de numero Indorum, attributed to Adelard of Bath.[10] Here, alghoarismi or algorismi is the Latinization of Al-Khwarizmi's name;[1] the text starts with the phrase Dixit Algorismi, or \"Thus spoke Al-Khwarizmi\".[2] The word algorism in English came to mean the use of place-value notation in calculations; it occurs in the Ancrene Wisse from circa 1225.[11] By the time Geoffrey Chaucer wrote The Canterbury Tales in the late 14th century, he used a variant of the same word in describing augrym stones, stones used for place-value calculation.[12][13] In the 15th century, under the influence of the Greek word ἀριθμός (arithmos, \"number\"; cf. \"arithmetic\"), the Latin word was altered to algorithmus.[14] By 1596, this form of the word was used in English, as algorithm, by Thomas Hood.[15] One informal definition is \"a set of rules that precisely defines a sequence of operations\",[16] which would include all computer programs (including programs that do not perform numeric calculations), and any prescribed bureaucratic procedure[17]\nor cook-book recipe.[18] In general, a program is an algorithm only if it stops eventually[19]—even though infinite loops may sometimes prove desirable. Boolos, Jeffrey & 1974, 1999 define an algorithm to be an explicit set of instructions for determining an output, that can be followed by a computing machine or a human who could only carry out specific elementary operations on symbols.[20] Most algorithms are intended to be implemented as computer programs. However, algorithms are also implemented by other means, such as in a biological neural network (for example, the human brain performing arithmetic or an insect looking for food), in an electrical circuit, or a mechanical device. Step-by-step procedures for solving mathematical problems have been recorded since antiquity. This includes in Babylonian mathematics (around 2500 BC),[21] Egyptian mathematics (around 1550 BC),[21] Indian mathematics (around 800 BC and later),[22][23] the Ifa Oracle (around 500 BC),[24] Greek mathematics (around 240 BC),[25] Chinese mathematics (around 200 BC and later),[26] and Arabic mathematics (around 800 AD).[27] The earliest evidence of algorithms is found in ancient Mesopotamian mathematics. A Sumerian clay tablet found in Shuruppak near Baghdad and dated to c. 2500 BC describes the earliest division algorithm.[21] During the Hammurabi dynasty c. 1800 – c. 1600 BC, Babylonian clay tablets described algorithms for computing formulas.[28] Algorithms were also used in Babylonian astronomy. Babylonian clay tablets describe and employ algorithmic procedures to compute the time and place of significant astronomical events.[29] Algorithms for arithmetic are also found in ancient Egyptian mathematics, dating back to the Rhind Mathematical Papyrus c. 1550 BC.[21] Algorithms were later used in ancient Hellenistic mathematics. Two examples are the Sieve of Eratosthenes, which was described in the Introduction to Arithmetic by Nicomachus,[30][25]: Ch 9.2  and the Euclidean algorithm, which was first described in Euclid's Elements (c. 300 BC).[25]: Ch 9.1 Examples of ancient Indian mathematics included the Shulba Sutras, the Kerala School, and the Brāhmasphuṭasiddhānta.[22] The first cryptographic algorithm for deciphering encrypted code was developed by Al-Kindi, a 9th-century Arab mathematician, in A Manuscript On Deciphering Cryptographic Messages. He gave the first description of cryptanalysis by frequency analysis, the earliest codebreaking algorithm.[27] Bolter credits the invention of the weight-driven clock as \"the key invention [of Europe in the Middle Ages],\" specifically the verge escapement mechanism[31] producing the tick and tock of a mechanical clock. \"The accurate automatic machine\"[32] led immediately to \"mechanical automata\" in the 13th century and \"computational machines\"—the difference and analytical engines of Charles Babbage and Ada Lovelace in the mid-19th century.[33] Lovelace designed the first algorithm intended for processing on a computer, Babbage's analytical engine, which is the first device considered a real Turing-complete computer instead of just a calculator. Although the full implementation of Babbage's second device was not realized for decades after her lifetime, Lovelace has been called \"history's first programmer\". Bell and Newell (1971) write that the Jacquard loom, a precursor to Hollerith cards (punch cards), and \"telephone switching technologies\" led to the development of the first computers.[34] By the mid-19th century, the telegraph, the precursor of the telephone, was in use throughout the world. By the late 19th century, the ticker tape (c. 1870s) was in use, as were Hollerith cards (c. 1890). Then came the teleprinter (c. 1910) with its punched-paper use of Baudot code on tape. Telephone-switching networks of electromechanical relays were invented in 1835. These led to the invention of the digital adding device by George Stibitz in 1937. While working in Bell Laboratories, he observed the \"burdensome\" use of mechanical calculators with gears. \"He went home one evening in 1937 intending to test his idea... When the tinkering was over, Stibitz had constructed a binary adding device\".[35][36] In 1928, a partial formalization of the modern concept of algorithms began with attempts to solve the Entscheidungsproblem (decision problem) posed by David Hilbert. Later formalizations were framed as attempts to define \"effective calculability\"[37] or \"effective method\".[38] Those formalizations included the Gödel–Herbrand–Kleene recursive functions of 1930, 1934 and 1935, Alonzo Church's lambda calculus of 1936, Emil Post's Formulation 1 of 1936, and Alan Turing's Turing machines of 1936–37 and 1939. Algorithms can be expressed in many kinds of notation, including natural languages, pseudocode, flowcharts, drakon-charts, programming languages or control tables (processed by interpreters). Natural language expressions of algorithms tend to be verbose and ambiguous and are rarely used for complex or technical algorithms. Pseudocode, flowcharts, drakon-charts, and control tables are structured expressions of algorithms that avoid common ambiguities of natural language. Programming languages are primarily for expressing algorithms in a computer-executable form but are also used to define or document algorithms. There are many possible representations and Turing machine programs can be expressed as a sequence of machine tables (see finite-state machine, state-transition table, and control table for more), as flowcharts and drakon-charts (see state diagram for more), as a form of rudimentary machine code or assembly code called \"sets of quadruples\", and more. Algorithm representations can also be classified into three accepted levels of Turing machine description: high-level description, implementation description, and formal description.[39] A high-level description describes the qualities of the algorithm itself, ignoring how it is implemented on the Turing machine.[39] An implementation description describes the general manner in which the machine moves its head and stores data to carry out the algorithm, but does not give exact states.[39] In the most detail, a formal description gives the exact state table and list of transitions of the Turing machine.[39] The graphical aid called a flowchart offers a way to describe and document an algorithm (and a computer program corresponding to it). It has four primary symbols: arrows showing program flow, rectangles (SEQUENCE, GOTO), diamonds (IF-THEN-ELSE), and dots (OR-tie). Sub-structures can \"nest\" in rectangles, but only if a single exit occurs from the superstructure. It is often important to know how much time, storage, or other cost an algorithm may require. Methods have been developed for the analysis of algorithms to obtain such quantitative answers (estimates); for example, an algorithm that adds up the elements of a list of n numbers would have a time requirement of ⁠\n\n\n\nO\n(\nn\n)\n\n\n{\\displaystyle O(n)}\n\n⁠, using big O notation. The algorithm only needs to remember two values: the sum of all the elements so far, and its current position in the input list. If the space required to store the input numbers is not counted, it has a space requirement of ⁠\n\n\n\nO\n(\n1\n)\n\n\n{\\displaystyle O(1)}\n\n⁠, otherwise ⁠\n\n\n\nO\n(\nn\n)\n\n\n{\\displaystyle O(n)}\n\n⁠ is required. Different algorithms may complete the same task with a different set of instructions in less or more time, space, or 'effort' than others. For example, a binary search algorithm (with cost ⁠\n\n\n\nO\n(\nlog\n⁡\nn\n)\n\n\n{\\displaystyle O(\\log n)}\n\n⁠) outperforms a sequential search (cost ⁠\n\n\n\nO\n(\nn\n)\n\n\n{\\displaystyle O(n)}\n\n⁠ ) when used for table lookups on sorted lists or arrays. The analysis, and study of algorithms is a discipline of computer science. Algorithms are often studied abstractly, without referencing any specific programming language or implementation. Algorithm analysis resembles other mathematical disciplines as it focuses on the algorithm's properties, not implementation. Pseudocode is typical for analysis as it is a simple and general representation. Most algorithms are implemented on particular hardware/software platforms and their algorithmic efficiency is tested using real code. The efficiency of a particular algorithm may be insignificant for many \"one-off\" problems but it may be critical for algorithms designed for fast interactive, commercial, or long-life scientific usage. Scaling from small n to large n frequently exposes inefficient algorithms that are otherwise benign. Empirical testing is useful for uncovering unexpected interactions that affect performance. Benchmarks may be used to compare before/after potential improvements to an algorithm after program optimization.\nEmpirical tests cannot replace formal analysis, though, and are non-trivial to perform fairly.[40] To illustrate the potential improvements possible even in well-established algorithms, a recent significant innovation, relating to FFT algorithms (used heavily in the field of image processing), can decrease processing time up to 1,000 times for applications like medical imaging.[41] In general, speed improvements depend on special properties of the problem, which are very common in practical applications.[42] Speedups of this magnitude enable computing devices that make extensive use of image processing (like digital cameras and medical equipment) to consume less power. The best case of an algorithm refers to the scenario or input for which the algorithm or data structure takes the least time and resources to complete its tasks.[43]  The worst case of an algorithm is the case that causes the algorithm or data structure to consume the maximum period of time and computational resources.[44] Algorithm design is a method or mathematical process for problem-solving and engineering algorithms. The design of algorithms is part of many solution theories, such as divide-and-conquer or dynamic programming within operation research. Techniques for designing and implementing algorithm designs are also called algorithm design patterns,[45] with examples including the template method pattern and the decorator pattern. One of the most important aspects of algorithm design is resource (run-time, memory usage) efficiency; the big O notation is used to describe e.g., an algorithm's run-time growth as the size of its input increases.[46] Per the Church–Turing thesis, any algorithm can be computed by any Turing complete model. Turing completeness only requires four instruction types—conditional GOTO, unconditional GOTO, assignment, HALT. However, Kemeny and Kurtz observe that, while \"undisciplined\" use of unconditional GOTOs and conditional IF-THEN GOTOs can result in \"spaghetti code\", a programmer can write structured programs using only these instructions; on the other hand \"it is also possible, and not too hard, to write badly structured programs in a structured language\".[47] Tausworthe augments the three Böhm-Jacopini canonical structures:[48] SEQUENCE, IF-THEN-ELSE, and WHILE-DO, with two more: DO-WHILE and CASE.[49] An additional benefit of a structured program is that it lends itself to proofs of correctness using mathematical induction.[50] By themselves, algorithms are not usually patentable. In the United States, a claim consisting solely of simple manipulations of abstract concepts, numbers, or signals does not constitute \"processes\" (USPTO 2006), so algorithms are not patentable (as in Gottschalk v. Benson). However practical applications of algorithms are sometimes patentable. For example, in Diamond v. Diehr, the application of a simple feedback algorithm to aid in the curing of synthetic rubber was deemed patentable. The patenting of software is controversial,[51] and there are criticized patents involving algorithms, especially data compression algorithms, such as Unisys's LZW patent. Additionally, some cryptographic algorithms have export restrictions (see export of cryptography). Another way of classifying algorithms is by their design methodology or paradigm. Some common paradigms are: For optimization problems there is a more specific classification of algorithms; an algorithm for such problems may fall into one or more of the general categories described above as well as into one of the following: One of the simplest algorithms finds the largest number in a list of numbers of random order. Finding the solution requires looking at every number in the list. From this follows a simple algorithm, which can be described in plain English as: High-level description: (Quasi-)formal description:\nWritten in prose but much closer to the high-level language of a computer program, the following is the more formal coding of the algorithm in pseudocode or pidgin code:"
  },
  {
    "url": "https://en.wikipedia.org/wiki/HTML",
    "title": "HTML - Wikipedia",
    "content": "Hypertext Markup Language (HTML) is the standard markup language[a] for documents designed to be displayed in a web browser. It defines the content and structure of web content. It is often assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript. Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for its appearance. HTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes, and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img> and <input> directly introduce content into the page. Other tags such as <p> and </p> surround and provide information about document text and may include sub-element tags. Browsers do not display the HTML tags, but use them to interpret the content of the page. HTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. The inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), former maintainer of the HTML and current maintainer of the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[update][3] A form of HTML, known as HTML5, is used to display video and audio, primarily using the <canvas> element, together with JavaScript. In 1980, physicist Tim Berners-Lee, a contractor at CERN, proposed and prototyped ENQUIRE, a system for CERN researchers to use and share documents. In 1989, Berners-Lee wrote a memo proposing an Internet-based hypertext system.[4] Berners-Lee specified HTML and wrote the browser and server software in late 1990. That year, Berners-Lee and CERN data systems engineer Robert Cailliau collaborated on a joint request for funding, but the project was not formally adopted by CERN. In his personal notes of 1990, Berners-Lee listed \"some of the many areas in which hypertext is used\"; an encyclopedia is the first entry.[5] The first publicly available description of HTML was a document called \"HTML Tags\",[6] first mentioned on the Internet by Tim Berners-Lee in late 1991.[7][8] It describes 18 elements comprising the initial, relatively simple design of HTML. Except for the hyperlink tag, these were strongly influenced by CERN SGML, an in-house Standard Generalized Markup Language (SGML)-based documentation format at CERN. Eleven of these elements still exist in HTML 4.[9] HTML is a markup language that web browsers use to interpret and compose text, images, and other material into visible or audible web pages. Default characteristics for every item of HTML markup are defined in the browser, and these characteristics can be altered or enhanced by the web page designer's additional use of CSS. Many of the text elements are mentioned in the 1988 ISO technical report TR 9537 Techniques for using SGML, which describes the features of early text formatting languages such as that used by the RUNOFF command developed in the early 1960s for the CTSS (Compatible Time-Sharing System) operating system. These formatting commands were derived from the commands used by typesetters to manually format documents. However, the SGML concept of generalized markup is based on elements (nested annotated ranges with attributes) rather than merely print effects, with separate structure and markup. HTML has been progressively moved in this direction with CSS. Berners-Lee considered HTML to be an application of SGML. It was formally defined as such by the Internet Engineering Task Force (IETF) with the mid-1993 publication of the first proposal for an HTML specification, the \"Hypertext Markup Language (HTML)\" Internet Draft by Berners-Lee and Dan Connolly, which included an SGML Document type definition to define the syntax.[10][11] The draft expired after six months, but was notable for its acknowledgment of the NCSA Mosaic browser's custom tag for embedding in-line images, reflecting the IETF's philosophy of basing standards on successful prototypes. Similarly, Dave Raggett's competing Internet Draft, \"HTML+ (Hypertext Markup Format)\", from late 1993, suggested standardizing already-implemented features like tables and fill-out forms.[12] After the HTML and HTML+ drafts expired in early 1994, the IETF created an HTML Working Group. In 1995, this working group completed \"HTML 2.0\", the first HTML specification intended to be treated as a standard against which future implementations should be based.[13] Further development under the auspices of the IETF was stalled by competing interests. Since 1996,[update] the HTML specifications have been maintained, with input from commercial software vendors, by the World Wide Web Consortium (W3C).[14] In 2000, HTML became an international standard (ISO/IEC 15445:2000). HTML 4.01 was published in late 1999, with further errata published through 2001. In 2004, development began on HTML5 in the Web Hypertext Application Technology Working Group (WHATWG), which became a joint deliverable with the W3C in 2008, and was completed and standardized on 28 October 2014.[15] XHTML is a separate language that began as a reformulation of HTML 4.01 using XML 1.0. It is now referred to as the XML syntax for HTML and is no longer being developed as a separate standard.[59] On 28 May 2019, the W3C announced that WHATWG would be the sole publisher of the HTML and DOM standards.[66][67][68][69] The W3C and WHATWG had been publishing competing standards since 2012. While the W3C standard was identical to the WHATWG in 2007 the standards have since progressively diverged due to different design decisions.[70] The WHATWG \"Living Standard\" had been the de facto web standard for some time.[71] HTML markup consists of several key components, including those called tags (and their attributes), character-based data types, character references and entity references. HTML tags most commonly come in pairs like <h1> and </h1>, although some represent empty elements and so are unpaired, for example <img>. The first tag in such a pair is the start tag, and the second is the end tag (they are also called opening tags and closing tags). Another important component is the HTML document type declaration, which triggers standards mode rendering. The following is an example of the classic \"Hello, World!\" program: The text between <html> and </html> describes the web page, and the text between <body> and </body> is the visible page content. The markup text <title>This is a title</title> defines the browser page title shown on browser tabs and window titles and the tag <div> defines a division of the page used for easy styling. Between <head> and </head>, a <meta> element can be used to define webpage metadata. The Document Type Declaration <!DOCTYPE html> is for HTML5. If a declaration is not included, various browsers will revert to \"quirks mode\" for rendering.[72] HTML documents imply a structure of nested HTML elements. These are indicated in the document by HTML tags, enclosed in angle brackets.[73][better source needed] In the simple, general case, the extent of an element is indicated by a pair of tags: a \"start tag\" <p> and \"end tag\" </p>. The text content of the element, if any, is placed between these tags. Tags may also enclose further tag markup between the start and end, including a mixture of tags and text. This indicates further (nested) elements, as children of the parent element. The start tag may also include the element's attributes within the tag. These indicate other information, such as identifiers for sections within the document, identifiers used to bind style information to the presentation of the document, and for some tags such as the <img> used to embed images, the reference to the image resource in the format like this: <img src=\"example.com/example.jpg\"> Some elements, such as the line break <br> do not permit any embedded content, either text or further tags. These require only a single empty tag (akin to a start tag) and do not use an end tag. Many tags, particularly the closing end tag for the very commonly used paragraph element <p>, are optional. An HTML browser or other agent can infer the closure for the end of an element from the context and the structural rules defined by the HTML standard. These rules are complex and not widely understood by most HTML authors. The general form of an HTML element is therefore: <tag attribute1=\"value1\" attribute2=\"value2\">''content''</tag>. Some HTML elements are defined as empty elements and take the form <tag attribute1=\"value1\" attribute2=\"value2\">. Empty elements may enclose no content, for instance, the <br> tag or the inline <img> tag.\nThe name of an HTML element is the name used in the tags.\nThe end tag's name is preceded by a slash character /. If a tag has no content, an end tag is not allowed. If attributes are not mentioned, default values are used in each case. Header of the HTML document: <head>...</head>. The title is included in the head, for example: HTML headings are defined with the <h1> to <h6> tags with H1 being the highest (or most important) level and H6 the least: The effects are: CSS can substantially change the rendering. Paragraphs: <br>. The difference between <br> and <p> is that <br> breaks a line without altering the semantic structure of the page, whereas <p> sections the page into paragraphs. The element <br> is an empty element in that, although it may have attributes, it can take no content and it must not have an end tag. This is a link in HTML. To create a link the <a> tag is used. The href attribute holds the URL address of the link. There are many possible ways a user can give inputs like: Comments: Comments can help in the understanding of the markup and do not display in the webpage. There are several types of markup elements used in HTML: Most of the attributes of an element are name–value pairs, separated by = and written within the start tag of an element after the element's name. The value may be enclosed in single or double quotes, although values consisting of certain characters can be left unquoted in HTML (but not XHTML).[75][76] Leaving attribute values unquoted is considered unsafe.[77] In contrast with name-value pair attributes, there are some attributes that affect the element simply by their presence in the start tag of the element,[7] like the ismap attribute for the img element.[78] There are several common attributes that may appear in many elements : The abbreviation element, abbr, can be used to demonstrate some of these attributes: This example displays as HTML; in most browsers, pointing the cursor at the abbreviation should display the title text \"Hypertext Markup Language.\" Most elements take the language-related attribute dir to specify text direction, such as with \"rtl\" for right-to-left text in, for example, Arabic, Persian or Hebrew.[79] As of version 4.0, HTML defines a set of 252 character entity references and a set of 1,114,050 numeric character references, both of which allow individual characters to be written via simple markup, rather than literally. A literal character and its markup counterpart are considered equivalent and are rendered identically. The ability to \"escape\" characters in this way allows for the characters < and & (when written as &lt; and &amp;, respectively) to be interpreted as character data, rather than markup. For example, a literal < normally indicates the start of a tag, and & normally indicates the start of a character entity reference or numeric character reference; writing it as &amp; or &#x26; or &#38; allows & to be included in the content of an element or in the value of an attribute. The double-quote character (\"), when not used to quote an attribute value, must also be escaped as &quot; or &#x22; or &#34; when it appears within the attribute value itself. Equivalently, the single-quote character ('), when not used to quote an attribute value, must also be escaped as &#x27; or &#39; (or as &apos; in HTML5 or XHTML documents[80][81]) when it appears within the attribute value itself. If document authors overlook the need to escape such characters, some browsers can be very forgiving and try to use context to guess their intent. The result is still invalid markup, which makes the document less accessible to other browsers and to other user agents that may try to parse the document for search and indexing purposes for example. Escaping also allows for characters that are not easily typed, or that are not available in the document's character encoding, to be represented within the element and attribute content. For example, the acute-accented e (é), a character typically found only on Western European and South American keyboards, can be written in any HTML document as the entity reference &eacute; or as the numeric references &#xE9; or &#233;, using characters that are available on all keyboards and are supported in all character encodings. Unicode character encodings such as UTF-8 are compatible with all modern browsers and allow direct access to almost all the characters of the world's writing systems.[82] HTML defines several data types for element content, such as script data and stylesheet data, and a plethora of types for attribute values, including IDs, names, URIs, numbers, units of length, languages, media descriptors, colors, character encodings, dates and times, and so on. All of these data types are specializations of character data. HTML documents are required to start with a document type declaration (informally, a \"doctype\"). In browsers, the doctype helps to define the rendering mode—particularly whether to use quirks mode. The original purpose of the doctype was to enable the parsing and validation of HTML documents by SGML tools based on the document type definition (DTD). The DTD to which the DOCTYPE refers contains a machine-readable grammar specifying the permitted and prohibited content for a document conforming to such a DTD. Browsers, on the other hand, do not implement HTML as an application of SGML and as consequence do not read the DTD. HTML5 does not define a DTD; therefore, in HTML5 the doctype declaration is simpler and shorter:[83] An example of an HTML 4 doctype This declaration references the DTD for the \"strict\" version of HTML 4.01. SGML-based validators read the DTD in order to properly parse the document and to perform validation. In modern browsers, a valid doctype activates standards mode as opposed to quirks mode. In addition, HTML 4.01 provides Transitional and Frameset DTDs, as explained below. The transitional type is the most inclusive, incorporating current tags as well as older or \"deprecated\" tags, with the Strict DTD excluding deprecated tags. The frameset has all tags necessary to make frames on a page along with the tags included in transitional type.[84] Semantic HTML is a way of writing HTML that emphasizes the meaning of the encoded information over its presentation (look). HTML has included semantic markup from its inception,[85] but has also included presentational markup, such as <font>, <i> and <center> tags. There are also the semantically neutral div and span tags. Since the late 1990s, when Cascading Style Sheets were beginning to work in most browsers, web authors have been encouraged to avoid the use of presentational HTML markup with a view to the separation of content and presentation.[86] In a 2001 discussion of the Semantic Web, Tim Berners-Lee and others gave examples of ways in which intelligent software \"agents\" may one day automatically crawl the web and find, filter, and correlate previously unrelated, published facts for the benefit of human users.[87] Such agents are not commonplace even now, but some of the ideas of Web 2.0, mashups and price comparison websites may be coming close[citation needed]. The main difference between these web application hybrids and Berners-Lee's semantic agents lies in the fact that the current aggregation and hybridization of information is usually designed by web developers, who already know the web locations and the API semantics of the specific data they wish to mash, compare and combine. An important type of web agent that does crawl and read web pages automatically, without prior knowledge of what it might find, is the web crawler or search-engine spider. These software agents are dependent on the semantic clarity of web pages they find as they use various techniques and algorithms to read and index millions of web pages a day and provide web users with search facilities without which the World Wide Web's usefulness would be greatly reduced. In order for search engine spiders to be able to rate the significance of pieces of text they find in HTML documents, and also for those creating mashups and other hybrids as well as for more automated agents as they are developed, the semantic structures that exist in HTML need to be widely and uniformly applied to bring out the meaning of the published text.[88] Presentational markup tags are deprecated in current HTML and XHTML recommendations. The majority of presentational features from previous versions of HTML are no longer allowed as they lead to poorer accessibility, higher cost of site maintenance, and larger document sizes.[89] Good semantic HTML also improves the accessibility of web documents (see also Web Content Accessibility Guidelines). For example, when a screen reader or audio browser can correctly ascertain the structure of a document, it will not waste the visually impaired user's time by reading out repeated or irrelevant information when it has been marked up correctly. HTML documents can be delivered by the same means as any other computer file. However, they are most often delivered either by HTTP from a web server or by email. The World Wide Web is composed primarily of HTML documents transmitted from web servers to web browsers using the Hypertext Transfer Protocol (HTTP). However, HTTP is used to serve images, sound, and other content, in addition to HTML. To allow the web browser to know how to handle each document it receives, other information is transmitted along with the document. This meta data usually includes the MIME type (e.g., text/html or application/xhtml+xml) and the character encoding (see Character encodings in HTML). In modern browsers, the MIME type that is sent with the HTML document may affect how the document is initially interpreted. A document sent with the XHTML MIME type is expected to be well-formed XML; syntax errors may cause the browser to fail to render it. The same document sent with the HTML MIME type might be displayed successfully since some browsers are more lenient with HTML. The W3C recommendations state that XHTML 1.0 documents that follow guidelines set forth in the recommendation's Appendix C may be labeled with either MIME Type.[90] XHTML 1.1 also states that XHTML 1.1 documents should[91] be labeled with either MIME type.[92] Most graphical email clients allow the use of a subset of HTML (often ill-defined) to provide formatting and semantic markup not available with plain text. This may include typographic information like colored headings, emphasized and quoted text, inline images and diagrams. Many such clients include both a GUI editor for composing HTML e-mail messages and a rendering engine for displaying them. Use of HTML in e-mail is criticized by some because of compatibility issues, because it can help disguise phishing attacks, because of accessibility issues for blind or visually impaired people, because it can confuse spam filters and because the message size is larger than plain text. The most common filename extension for files containing HTML is .html. A common abbreviation of this is .htm, which originated because some early operating systems and file systems, such as DOS and the limitations imposed by FAT data structure, limited file extensions to three letters.[93] An HTML Application (HTA; file extension .hta) is a Microsoft Windows application that uses HTML and Dynamic HTML in a browser to provide the application's graphical interface. A regular HTML file is confined to the security model of the web browser's security, communicating only to web servers and manipulating only web page objects and site cookies. An HTA runs as a fully trusted application and therefore has more privileges, like creation/editing/removal of files and Windows Registry entries. Because they operate outside the browser's security model, HTAs cannot be executed via HTTP, but must be downloaded (just like an EXE file) and executed from local file system. Since its inception, HTML and its associated protocols gained acceptance relatively quickly. However, no clear standards existed in the early years of the language. Though its creators originally conceived of HTML as a semantic language devoid of presentation details,[94] practical uses pushed many presentational elements and attributes into the language, driven largely by the various browser vendors. The latest standards surrounding HTML reflect efforts to overcome the sometimes chaotic development of the language[95] and to create a rational foundation for building both meaningful and well-presented documents. To return HTML to its role as a semantic language, the W3C has developed style languages such as CSS and XSL to shoulder the burden of presentation. In conjunction, the HTML specification has slowly reined in the presentational elements. There are two axes differentiating various variations of HTML as currently specified: SGML-based HTML versus XML-based HTML (referred to as XHTML) on one axis, and strict versus transitional (loose) versus frameset on the other axis. One difference in the latest[when?] HTML specifications lies in the distinction between the SGML-based specification and the XML-based specification. The XML-based specification is usually called XHTML to distinguish it clearly from the more traditional definition. However, the root element name continues to be \"html\" even in the XHTML-specified HTML. The W3C intended XHTML 1.0 to be identical to HTML 4.01 except where limitations of XML over the more complex SGML require workarounds. Because XHTML and HTML are closely related, they are sometimes documented in parallel. In such circumstances, some authors conflate the two names as (X)HTML or X(HTML). Like HTML 4.01, XHTML 1.0 has three sub-specifications: strict, transitional, and frameset. Aside from the different opening declarations for a document, the differences between an HTML 4.01 and XHTML 1.0 document—in each of the corresponding DTDs—are largely syntactic. The underlying syntax of HTML allows many shortcuts that XHTML does not, such as elements with optional opening or closing tags, and even empty elements which must not have an end tag. By contrast, XHTML requires all elements to have an opening tag and a closing tag. XHTML, however, also introduces a new shortcut: an XHTML tag may be opened and closed within the same tag, by including a slash before the end of the tag like this: <br/>. The introduction of this shorthand, which is not used in the SGML declaration for HTML 4.01, may confuse earlier software unfamiliar with this new convention. A fix for this is remove the slash preceding the closing angle bracket, as such: <br>.[96] To understand the subtle differences between HTML and XHTML, consider the transformation of a valid and well-formed XHTML 1.0 document that adheres to Appendix C (see below) into a valid HTML 4.01 document. Making this translation requires the following steps: Those are the main changes necessary to translate a document from XHTML 1.0 to HTML 4.01. To translate from HTML to XHTML would also require the addition of any omitted opening or closing tags. Whether coding in HTML or XHTML it may just be best to always include the optional tags within an HTML document rather than remembering which tags can be omitted. A well-formed XHTML document adheres to all the syntax requirements of XML. A valid document adheres to the content specification for XHTML, which describes the document structure. The W3C recommends several conventions to ensure an easy migration between HTML and XHTML (see HTML Compatibility Guidelines). The following steps can be applied to XHTML 1.0 documents only: By carefully following the W3C's compatibility guidelines, a user agent should be able to interpret the document equally as HTML or XHTML. For documents that are XHTML 1.0 and have been made compatible in this way, the W3C permits them to be served either as HTML (with a text/html MIME type), or as XHTML (with an application/xhtml+xml or application/xml MIME type). When delivered as XHTML, browsers should use an XML parser, which adheres strictly to the XML specifications for parsing the document's contents. HTML 4 defined three different versions of the language: Strict, Transitional (once called Loose), and Frameset. The Strict version is intended for new documents and is considered best practice, while the Transitional and Frameset versions were developed to make it easier to transition documents that conformed to older HTML specifications or did not conform to any specification to a version of HTML 4. The Transitional and Frameset versions allow for presentational markup, which is omitted in the Strict version. Instead, cascading style sheets are encouraged to improve the presentation of HTML documents. Because XHTML 1 only defines an XML syntax for the language defined by HTML 4, the same differences apply to XHTML 1 as well. The Transitional version allows the following parts of the vocabulary, which are not included in the Strict version: The Frameset version includes everything in the Transitional version, as well as the frameset element (used instead of body) and the frame element. In addition to the above transitional differences, the frameset specifications (whether XHTML 1.0 or HTML 4.01) specify a different content model, with frameset replacing body, that contains either frame elements, or optionally noframes with a body. As this list demonstrates, the loose versions of the specification are maintained for legacy support. However, contrary to popular misconceptions, the move to XHTML does not imply a removal of this legacy support. Rather the X in XML stands for extensible and the W3C is modularizing the entire specification and opens it up to independent extensions. The primary achievement in the move from XHTML 1.0 to XHTML 1.1 is the modularization of the entire specification. The strict version of HTML is deployed in XHTML 1.1 through a set of modular extensions to the base XHTML 1.1 specification. Likewise, someone looking for the loose (transitional) or frameset specifications will find similar extended XHTML 1.1 support (much of it is contained in the legacy or frame modules). Modularization also allows for separate features to develop on their own timetable. So for example, XHTML 1.1 will allow quicker migration to emerging XML standards such as MathML (a presentational and semantic math language based on XML) and XForms—a new highly advanced web-form technology to replace the existing HTML forms. In summary, the HTML 4 specification primarily reined in all the various HTML implementations into a single clearly written specification based on SGML. XHTML 1.0, ported this specification, as is, to the new XML-defined specification. Next, XHTML 1.1 takes advantage of the extensible nature of XML and modularizes the whole specification. XHTML 2.0 was intended to be the first step in adding new features to the specification in a standards-body-based approach. The HTML Living Standard, which is developed by WHATWG, is the official version, while W3C HTML5 is no longer separate from WHATWG. There are some WYSIWYG editors (what you see is what you get), in which the user lays out everything as it is to appear in the HTML document using a graphical user interface (GUI), often similar to word processors. The editor renders the document rather than showing the code, so authors do not require extensive knowledge of HTML. The WYSIWYG editing model has been criticized,[97][98] primarily because of the low quality of the generated code; there are voices[who?] advocating a change to the WYSIWYM model (what you see is what you mean). WYSIWYG editors remain a controversial topic because of their perceived flaws such as:"
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/WebRobotics",
    "title": "ð¤·ð½ââï¸ Page not found | Page not found | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Go back to the home page Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.bbc.com/newsUbuntu",
    "title": "BBC - 404: Not Found",
    "content": "404\n              \n                Not Found Check the page address or search for it below. BBC Homepage Copyright © BBC.\n              \n              The BBC is not responsible for the content of external sites.\n              \n                Read about our approach to external\n                linking."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/WebMachine_learning",
    "title": "ð¤·ð½ââï¸ Page not found | Page not found | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Go back to the home page Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.python.org/Robotics",
    "title": "Welcome to Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. We couldn’t find what you were looking for. This error has been reported and we will look into it shortly. For now, Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://towardsdatascience.com/React",
    "title": "React & D3: Adding A Bar Chart | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. So the last component to refactor in Streetball Mecca is the bar chart. In my last article, React & D3: Preparing The Data With D3.Nest, I… So the last component to refactor in Streetball Mecca is the bar chart. In my last article, React & D3: Preparing The Data With D3.Nest, I discussed how the data for the chart was organized and formatted using d3.nest. This **** involved grouping the parks based on their neighborhood location and calculating the overall average of all parks associated with that neighborhood. Here is the current working version used in this article and the CodeSandbox as well. As I started to contemplate how best to refactor the D3 bar chart code into the React ecosystem, I leveraged the lessons learned from all the previous refactoring. One of the most important changes was to allow React to manage state, render/update DOM elements, and then allow D3 to do what it does best, such as creating scales and nesting data. For this refactor I decided to take it one step further and opted to take a non-svg approach to rendering the bar and circle elements. This decision was born initially from many previous frustrations having to manually position g elements. It was also influenced by the fact that I just taught a class on Flexbox and as part of that prep I came across a bookmark I saved over a year ago to the article \"Making Data Vis Without SVG Using D3 & Flexbox\" by Amber Thomas. I felt like the stars had aligned and all the signs pointed to Flexbox. Initially, I had ported over the D3 code and refactored it just slightly to work within a single React BarChart component. This D3 within React approach was meant as a first step to understanding how to coerce D3 to work within React. I also kept much of the D3 code intact in order to get something up and running. It however ended up being close to 200 lines of code and started to feel unmanageable. Now that I was ready to move forward with the second refactor and take a \"D3 for the math and React for everything else\" approach, the first thing I needed to plan out was the component hierarchy. I used an app called excalidraw to draw out the initial mockup and help work through the though and design process. The BarChart is the first component in this hierarchy so it makes sense to start there. Since both the XAxis and Neighborhoods components would require the same D3 scale, I decided to create it here and then pass it down to both as a prop. D3 has several methods that can be used for creating scales. Scales take an input (usually a number, date, or category) and return a value (such as a coordinate, color, length, or radius). They come in several categories that range from continuous input/output (d3.scaleLinear()) to discrete input/output (d3.scaleOridinal()) and somewhere in-between (d3.scaleQuantize()). Scales themselves could be an entire lecture in their own right so if you’re interested in learning more I highly suggest you read d3indepth.com. The scale I needed for this chart would be a dynamic, continuous input/output scale so I went with d3.scaleLinear(). All ** D3 scales require that you define a .domain() and .range(). The domain of values used for this scale is based on the overall rating of the parks. They could potentially be in total disrepair and assigned 0 (lowest value possible) or the creme de la creme of parks with a rating of 100 (highest value possible). Here, for example, is the 100% Playground park located in Canarsi**e Brooklyn which falls somewhere in between with an overall rating of 56. The average of those parks was also needed as this would be assigned to the parent neighborhood and I had used D3.nest() to rollup those values as seen in the example below. If you’re curious about working with d3.nest (which I hope you are), you can read more about how I nested the data in my previous article: Preparing The Data With D3.Nest. The .range() is based on the pixel space provided to the .bar-group element which is assigned a width of 1100px. I did need to subtract 25px in order to provide a bit of margin between both, the last tick value(100) and the circle and the right border of the .bar-group element. As you continue to examine more and more D3 code in general, you will see a common pattern of defining a set of margins that are used to define this additional space which is then referenced by the scale but quite possibly throughout the code in key places. Almost any D3 tutorial on scales will provide a similar visual in order to convey the relationship between the domain and range so I thought I’d do the same as well. A Little Bit About Axes If you have ever worked with D3 in the past, using it to create any one of the more standard chart types such as bar, line, or scatterplot, then it’s safe to say you have some familiarity with adding an axis. If, however, you are new to D3, then know that axes require the following steps: Creating a scale (we did so using d3.scaleLinear()) Setting its orientation: the orientation of an axis is fixed, however, it can be changed using one of the ** four orientation methods – .axisBottom(), .axisTop(), .axisLeft(), and .axisRight()**. Appending the Axis: once the axis has been created it is then appended using .call(xAxis). The axis also has additional configurations for setting tick values, sizes, and format. Being that I’ll be using React for the DOM and D3 for where it’s best suited, I decided that for this refactor I would only make use of d3.scaleLinear() and **** render the ticks using React. The only prop being passed to the XAxis component was the xScale so I’ll just object de-structure that value to make it clear that this is all that the component needs as it pertains to props. For much of the XAxis refactor I had used as a reference a beautifully written tutorial on React & D3 by Amelia Wattenberger, She wrote the article in order to promote her recent book \"Full Stack D3 and Data Visualization\". I was, at one point, tempted to buy it and would have done so had I not already owned the following books on D3: In Amelia’s article she looped over the array of individual ticks (0, 10, 20, etc.) using .ticks() and assigned each of them an xOffset value based on the returned value from the xScale. It’s been a while since I’ve worked on such a low level with scales and forgot that they included a .ticks() method that **** returns an array of the ticks. For the axis I decided to stay in line with Amelia’s article rendering an svg that uses a nested g element to position the axis to the right 200px. It then maps over the ticks array and positions each one of those g elements which, itself, renders the tick value. Side Note: I was able to render the ticks as divs using Flexbox, but that solution required creating an additional xScale and removing not only an additional 200px but also another 8px for half the font size. Since I felt only one scale was need, I opted to put that solution on the shelf for now. This component is responsible for mapping over the nestedData array and rendering individual Neighborhood components. It passes down several props to the child component, including the dispatch function which will be passed as an action and which the useReducer uses to update state. If you’re curious about useReducer, take a look at this previous article I wrote: Managing Complex State Transitions With useReducer. This component is responsible for rendering the following elements: It also makes use of the following hooks: The next step is to map over the parks array and create a Circle component. One thing to note is that the element determines how many pixels it should position itself left using the xScale but it also needs to subtract 5px. These additional pixels were needed in order to move the circle left, to center it directly under the axis value. Let’s break down the return statement in the map of the Neighborhood component as there are a few things happening here. First, the neighborhood element will reference the activeNeighborhood value in state to determine if it needs to highlight its background color in order to indicate it is the active neighborhood as seen below. I opted to allow the user to click anywhere in on the element in order to trigger the onClick event which calls the dispatch function and passes it an object containing a type and payload as required by useReducer. You can read more about working with useReducer and actions in this article: React: Managing Complex State Transitions With useReducer. Next, we have to render the neighborhood title and assign it a specific color based on which borough it belongs to. And finally, the Bars and Circles needed to be rendered. The Bar component requires the width value ** which was calculated using the xScale** along with the entire neighborhood object as key data points are needed by the tooltip. Flexbox was enabled on the This component would require the logic needed to render a tooltip when the user hovered over the colored bar. That logic involves adding both onMouseMove and onMouseOut event listeners and updating a local version of state in order to trigger the re-render. The first step to take was create the following state values: Now we add the handler functions for the event listeners. For this I had to do a bit of research as the standard event object’s e.pageY, e.clientY, and e.screenY were returning values that were much greater than the actual position of the mouse. I ended up using e.nativeEvent.offsetX and e.nativeEvent.offsetY and pulled some of that insight right from the React docs themselves: If you find that you need the underlying browser event for some reason, simply use the nativeEvent attribute to get it. The synthetic events are different from, and do not map directly to, the browser’s native events. For example in onMouseLeave event.nativeEvent will point to a mouseout event. All that was left was to return the DOM elements configured, assign the event listeners and add some conditional logic to render the tooltip only when isActive was true. This component required a much of the same logic for the tooltip as was needed for the Bar component along with one additional onClick event listener that filtered the map for the selected park. The handleClick function required the use of e.stopPropagation() in order ** to prevent the event from bubbling up to the Neighborhood component where an additional onClick event was configured. I found that without e.stopPropagation(**), all parks, from that neighborhood, would be rendered within the map instead of just that single park. I had looked forward to using fancy Flexbox properties for this particular layout but it turned out it was only needed enable it on the neighborhood and title elements. Here are is the actual html layout of the .neighborhood element and its children. Those elements, along with their corresponding CSS rendered as follows: As for Flexbox I first enabled it on the .neighborhood element which positioned the title and bar-group horizontally to one another. The .title element was also assigned a display of flex and used align-items to to vertically center the title text This is the 7th article of my Streetball Mecca series, where I document refactoring the project from its humble beginnings as a D3 visualization over to a React build to manage state and the DOM and use D3 for its unique helper functions. Thus far, I’ve replaced all instances of D3’s Enter/Update/Exit with either React’s useReducer or useState hooks. useReducer is being used to manage the global state and overall business logic of the app, and useState is used for more localized state as in the tooltips. Although React took the reins here, D3 was used for what it does best; creating scales (d3.scaleLinear), rendering geo-projections (d3.geoMercator/d3.geoPath), and nesting data (d3.nest). This project has certainly helped validate my opinion that React is by far the better choice for managing state and the overall flow of the application logic. Besides all the native React hooks used, such as useReducer, useState, useRef, and useCallback, I also leveraged a few custom hooks such as useDataApi, useOnClickOutside, and useLocalStorage. My favorite part of the refactor has been working with the React-Spring animation library **** in order to replace all the D3 transitions. A close runner up was building a bar chart using DIV’s and Flexbox instead of SVGs and G elements, something I’ve wanted to try for some time. I certainly have a new appreciation for both libraries and look forward to building more interactive dashboards. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. This article explores the relationship between a movie’s dialogue and its genre, leveraging domain-driven data… How to build a modern, scalable data platform to power your analytics and data science… How to make graphs using Matplotlib, Pandas and Seaborn Create Visualizations at the Level of Leading Newspapers To what extent are countries adopting data policies and systems for the public good? From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable… From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://www.python.org/Cloud_computing",
    "title": "Welcome to Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. We couldn’t find what you were looking for. This error has been reported and we will look into it shortly. For now, Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/WebLinux",
    "title": "ð¤·ð½ââï¸ Page not found | Page not found | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Go back to the home page Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://en.wikipedia.org/wiki/Data_science",
    "title": "Data science - Wikipedia",
    "content": "Data science is an interdisciplinary academic field[1] that uses statistics, scientific computing, scientific methods, processing, scientific visualization, algorithms and systems to extract or extrapolate knowledge from potentially noisy, structured, or unstructured data.[2] Data science also integrates domain knowledge from the underlying application domain (e.g., natural sciences, information technology, and medicine).[3] Data science is multifaceted and can be described as a science, a research paradigm, a research method, a discipline, a workflow, and a profession.[4] Data science is \"a concept to unify statistics, data analysis, informatics, and their related methods\" to \"understand and analyze actual phenomena\" with data.[5] It uses techniques and theories drawn from many fields within the context of mathematics, statistics, computer science, information science, and domain knowledge.[6] However, data science is different from computer science and information science. Turing Award winner Jim Gray imagined data science as a \"fourth paradigm\" of science (empirical, theoretical, computational, and now data-driven) and asserted that \"everything about science is changing because of the impact of information technology\" and the data deluge.[7][8] A data scientist is a professional who creates programming code and combines it with statistical knowledge to summarize data.[9] Data science is an interdisciplinary field[10] focused on extracting knowledge from typically large data sets and applying the knowledge from that data to solve problems in other application domains. The field encompasses preparing data for analysis, formulating data science problems, analyzing data, and summarizing these findings. As such, it incorporates skills from computer science, mathematics, data visualization, graphic design, communication, and business.[11] Vasant Dhar writes that statistics emphasizes quantitative data and description. In contrast, data science deals with quantitative and qualitative data (e.g., from images, text, sensors, transactions, customer information, etc.) and emphasizes prediction and action.[12] Andrew Gelman of Columbia University has described statistics as a non-essential part of data science.[13] Stanford professor David Donoho writes that data science is not distinguished from statistics by the size of datasets or use of computing and that many graduate programs misleadingly advertise their analytics and statistics training as the essence of a data-science program. He describes data science as an applied field growing out of traditional statistics.[14] In 1962, John Tukey described a field he called \"data analysis\", which resembles modern data science.[14] In 1985, in a lecture given to the Chinese Academy of Sciences in Beijing, C. F. Jeff Wu used the term \"data science\" for the first time as an alternative name for statistics.[15] Later, attendees at a 1992 statistics symposium at the University of Montpellier  II acknowledged the emergence of a new discipline focused on data of various origins and forms, combining established concepts and principles of statistics and data analysis with computing.[16][17] The term \"data science\" has been traced back to 1974, when Peter Naur proposed it as an alternative name to computer science.[6] In 1996, the International Federation of Classification Societies became the first conference to specifically feature data science as a topic.[6] However, the definition was still in flux. After the 1985 lecture at the Chinese Academy of Sciences in Beijing, in 1997 C. F. Jeff Wu again suggested that statistics should be renamed data science. He reasoned that a new name would help statistics shed inaccurate stereotypes, such as being synonymous with accounting or limited to describing data.[18] In 1998, Hayashi Chikio argued for data science as a new, interdisciplinary concept, with three aspects: data design, collection, and analysis.[17] In 2012, technologists Thomas H. Davenport and DJ Patil declared \"Data Scientist: The Sexiest Job of the 21st Century\",[19] a catchphrase that was picked up even by major-city newspapers like the New York Times[20] and the Boston Globe.[21] A decade later, they reaffirmed it, stating that \"the job is more in demand than ever with employers\".[22] The modern conception of data science as an independent discipline is sometimes attributed to William S. Cleveland.[23] In 2014, the American Statistical Association's Section on Statistical Learning and Data Mining changed its name to the Section on Statistical Learning and Data Science, reflecting the ascendant popularity of data science.[24] The professional title of \"data scientist\" has been attributed to DJ Patil and Jeff Hammerbacher in 2008.[25] Though it was used by the National Science Board in their 2005 report \"Long-Lived Digital Data Collections: Enabling Research and Education in the 21st Century\", it referred broadly to any key role in managing a digital data collection.[26] Data analysis typically involves working with structured datasets to answer specific questions or solve specific problems. This can involve tasks such as data cleaning and data visualization to summarize data and develop hypotheses about relationships between variables. Data analysts typically use statistical methods to test these hypotheses and draw conclusions from the data.[27] Data science involves working with larger datasets that often require advanced computational and statistical methods to analyze. Data scientists often work with unstructured data such as text or images and use machine learning algorithms to build predictive models. Data science often uses statistical analysis, data preprocessing, and supervised learning.[28][29] Cloud computing can offer access to large amounts of computational power and storage.[30] In big data, where volumes of information are continually generated and processed, these platforms can be used to handle complex and resource-intensive analytical tasks.[31] Some distributed computing frameworks are designed to handle big data workloads. These frameworks can enable data scientists to process and analyze large datasets in parallel, which can reduce processing times.[32] Data science involves collecting, processing, and analyzing data which often includes personal and sensitive information. Ethical concerns include potential privacy violations, bias perpetuation, and negative societal impacts.[33][34] Machine learning models can amplify existing biases present in training data, leading to discriminatory or unfair outcomes.[35][36]"
  },
  {
    "url": "https://www.python.org/",
    "title": "Welcome to Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. The core of extensible programming is defining functions. Python allows mandatory and optional arguments, keyword arguments, and even arbitrary argument lists. More about defining functions in Python 3 Lists (known as arrays in other languages) are one of the compound data types that Python understands. Lists can be indexed, sliced and manipulated with other built-in functions. More about lists in Python 3 Calculations are simple with Python, and expression syntax is straightforward: the operators +, -, * and / work as expected; parentheses () can be used for grouping. More about simple math functions in Python 3. Python knows the usual control flow statements that other languages speak — if, for, while and range — with some of its own twists, of course. More control flow tools in Python 3 Experienced programmers in any other language can pick up Python very quickly, and beginners find the clean syntax and indentation structure easy to learn. Whet your appetite with our Python 3 overview. Python is a programming language that lets you work quickly and integrate systems more effectively. Learn More Whether you're new to programming or an experienced developer, it's easy to learn and use Python. Start with our Beginner’s Guide Python source code and installers are available for download for all versions! Latest: Python 3.13.5 Documentation for Python's standard library, along with tutorials and guides, are available online. docs.python.org Looking for work or have a Python related position that you're trying to hire for? Our relaunched community-run job board is the place to go. jobs.python.org More More More Using Python scripts to analyse SEO and broken links on your site by Marnix de Munck More The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers. Learn more Become a Member\nDonate to the PSF Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/psf/",
    "title": "Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. In 2024, the PSF awarded $655,000 USD to 257 groups or individuals in 61 countries around the world. We support and maintain python.org,\r\n          The Python Package Index,\r\n          Python Documentation,\r\n          and many other services the Python Community relies on. We produce and underwrite the\r\n          PyCon US Conference,\r\n          the largest annual gathering for the Python community.\r\n         Support from sponsors, attendees, PyLadies, and CPython enabled us to award more than $384,000 USD in travel grants to 254 attendees for PyCon US 2025. Help the PSF promote, protect, and advance the Python programming language and community! Membership FAQ Assist the foundation's goals with a donation. The PSF is a recognized 501(c)(3) non-profit organization. How to Contribute Learn how you can help the PSF and the greater Python community! How to Volunteer Without our sponsors we wouldn't be able to help the Python community grow and prosper. Sponsorship Possibilities The Python Software Foundation welcomes grant proposals for projects related to the development of Python, Python-related technology, and educational resources. Proposal Guidelines, FAQ and Examples Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://docs.python.org",
    "title": "3.13.5 Documentation",
    "content": "Download these documents Welcome! This is the official documentation for Python 3.13.5. Documentation sections: What's new in Python 3.13?\n Or all \"What's new\" documents since Python 2.0 Tutorial\nStart here: a tour of Python's syntax and features Library reference\nStandard library and builtins Language reference\nSyntax and language elements Python setup and usage\nHow to install, configure, and use Python Python HOWTOs\nIn-depth topic manuals Installing Python modules\nThird-party modules and PyPI.org Distributing Python modules\nPublishing modules for use by other people Extending and embedding\nFor C/C++ programmers Python's C API\nC API reference FAQs\nFrequently asked questions (with answers!) Deprecations\nDeprecated functionality Indices, glossary, and search: Global module index\nAll modules and libraries General index\nAll functions, classes, and terms Glossary\nTerms explained Search page\nSearch this documentation Complete table of contents\nLists all sections and subsections Project information: Reporting issues Contributing to docs Download the documentation History and license of Python Copyright About the documentation Download these documents"
  },
  {
    "url": "https://pypi.org/",
    "title": "PyPI · The Python Package Index",
    "content": "Or browse projects 664,098 projects 7,245,673 releases 15,051,685 files 952,633 users The Python Package Index (PyPI) is a repository of software for the Python programming language. PyPI helps you find and install software developed and shared by the Python community.        Learn about installing packages. Package authors use PyPI to distribute their software.        Learn how to package your Python code for PyPI. Status:\nall systems operational Developed and maintained by the Python community, for the Python community.    \nDonate today! \"PyPI\", \"Python Package Index\", and the blocks logos are registered trademarks of the Python Software Foundation. © 2025 Python Software Foundation\n\nSite map Supported by"
  },
  {
    "url": "https://www.python.org/jobs/",
    "title": "Python Job Board | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Have a job that our community would be interested in? \n    Please check our job submission how-to for details on how\n    to file a job posting. After you have reviewed our how-to document,\n    please login\n    and use this form to create a new job posting If you have submitted jobs previously under your login, you can view them by\n    logging in now. In case of questions, please contact the \n    PSF Python Job Board team. Thank you. Subscribe via RSS Follow The PSF via Twitter Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/",
    "title": "Our Community | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Great software is supported by great people, and Python is no exception. Our user base is enthusiastic and dedicated to spreading use of the language far and wide. Our community can help support the beginner, the expert, and adds to the ever-increasing open-source knowledgebase. New to the community? Here are some great places to get started: We want to be open about how we can improve transparency, provide the community with opportunities to interact with us, and be responsive to raised suggestions. Contribute by filling out the Python Software Foundation Community Survey here. Python Weekly is a free weekly email newsletter featuring curated news, articles, new releases, jobs, and more. Curated by Rahul Chaudhary every Thursday. Go to pythonweekly.com to sign up. PySlackers is a community of Python enthusiasts centered around an open Slack team. Go to pyslackers.com for more information and to join. Python Discord is a large community focused around the Python programming language. Go to pythondiscord.com for more information and to join. This is the place where Python Engineers level up their knowledge, skills and network. Exchange technical publications, coding tutorials and other learning resources. Go to the Python Developers Community on LinkedIn. Libera.Chat hosts several channels. Select an IRC client, register your nickname with Libera.Chat, and you can be off and running! Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://psfmember.org/civicrm/contribute/transact?reset=1&id=2",
    "title": "Donation for the PSF – Python Software Foundation",
    "content": "Python Software Foundation The Python Software Foundation is a 501(c)(3) non-profit organization dedicated to the Python programming language. Your donation helps sustain a vibrant and diverse Python community and shows your support for Open Source. We rely on memberships, individual donations, and corporate sponsorships to award grants for regional Python conferences, sprints, local Meetups, and other community events, as well as to support Python documentation, fiscal sponsorships, and community projects such as: Python Developer's Guide Issue Tracker PyPI - the Python Package Index Contact information is required for tax reporting purposes and will be shared only with the US government. Thank you for supporting the Python Software Foundation!\nPayments are processed by PayPal, but may be made either with your credit card or your existing PayPal account.  If you wish to use a credit card, once on the PayPal site click the link \"Don't have a PayPal account?\", which will take you to a credit card form.  A PayPal account is not required.\nFor your security, this website and the PSF do not acquire or retain any of your credit card data.\nFollowing the transaction, you will receive both a PayPal receipt and/or our formal acknowledgment of your contribution.\nPlease whitelist psfmember.org and check your spam bins if you don't receive the acknowledgment from the PSF. Payments are processed by PayPal, but may be made either with your credit card or your existing PayPal account.  If you wish to use a credit card, once on the PayPal site click the link \"Don't have a PayPal account?\", which will take you to a credit card form.  A PayPal account is not required. For your security, this website and the PSF do not acquire or retain any of your credit card data. Following the transaction, you will receive both a PayPal receipt and/or our formal acknowledgment of your contribution. Please whitelist psfmember.org and check your spam bins if you don't receive the acknowledgment from the PSF."
  },
  {
    "url": "https://www.python.org/community/irc/",
    "title": "Internet Relay Chat | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. There are several Python-related channels on the libera IRC network.\nAll channels are available by connecting to Internet Relay Chat server\nLibera.Chat. The #python channel is for all discussion about the Python language,\necosystem, and community. You can get immediate help with programming\nquestions. You will need to first register your nickname with Libera,\nusing the nickname setup instructions (https://libera.chat/guides/registration). Spanish speakers can use the #pyar channel, from the Python Argentina user group. French speakers can join the #python-fr channel. Finnish speakers can join the #python.fi channel on a different network, IRCnet. (Note: prior to May 2021, these channels existed on Freenode. Some of them\nwere forcibly removed by Freenode operators, after a change in management and network policy. The channels on Freenode are no longer under the PSF umbrella.) #python-dev is for CPython developers, where they can\ncoordinate their work or discuss problems.  Bots post updates to the channel based on\nactivity in the CPython source tree and bug tracker. #python-infra is for Python infrastructure discussion. #pydotorg is for discussion of this website, python.org. #distutils and #pypa are for Python packaging discussion. IRC clients for many platforms can be found in the Internet Relay Chat (IRC)\nHelp Archive. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/about/",
    "title": "About Python™ | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. These are some of the reasons people who use Python would rather not use anything else. Python can be easy to pick up whether you're a first time programmer or you're experienced with other languages. The following pages are a useful first step to get on your way writing programs with Python! The community hosts conferences and meetups, collaborates on code, and much more. Python's documentation will help you along the way, and the mailing lists will keep you in touch. The Python Package Index (PyPI) hosts thousands of third-party modules for Python. Both Python's standard library and the community-contributed modules allow for endless possibilities. Python is developed under an OSI-approved open source license, making it freely usable and distributable, even for commercial use. Python's license is administered by the Python Software Foundation. Can’t find what you’re looking for? Try our comprehensive Help section More More The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers. Learn more Become a Member\nDonate to the PSF Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/about/apps/",
    "title": "Applications for Python | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Python is used in many application domains.  Here's\na sampling. Python offers many choices for web development: Python's standard library supports many Internet protocols: And the Package Index has yet more libraries: Python is widely used in scientific and numeric computing: Python is a superb language for teaching programming, both at the introductory\nlevel and in more advanced courses. The Tk GUI library\nis included with most binary distributions of Python. Some toolkits that are usable on several platforms are available\nseparately: Platform-specific toolkits are also available: Python is often used as a support language for software developers,\nfor build control and management, testing, and in many other ways. Python is also used to build ERP and e-commerce systems: The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/about/quotes/",
    "title": "Quotes about Python | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Python is used successfully in thousands of real-world business\napplications around the world, including many large and mission\ncritical systems.  Here are some quotes from happy Python users: \"Python is fast enough for our site and allows us to produce\nmaintainable features in record times, with a minimum of developers,\"\nsaid Cuong Do, Software Architect, YouTube.com. \"Python plays a key role in our production pipeline.  Without it a\nproject the size of Star Wars: Episode II would have been very\ndifficult to pull off. From crowd rendering to batch processing to\ncompositing, Python binds all things together,\" said Tommy Burnette,\nSenior Technical Director, Industrial Light & Magic. \"Python is everywhere at ILM. It's used to extend the capabilities\nof our applications, as well as providing the glue between them. Every\nCG image we create has involved Python somewhere in the process,\" said\nPhilip Peterson, Principal Engineer, Research & Development, Industrial Light & Magic. \"Python has been an important part of Google since the beginning,\nand remains so as the system grows and evolves. Today dozens of Google\nengineers use Python, and we're looking for more people with skills in\nthis language.\" said Peter Norvig, director of search quality at Google, Inc. \"Journyx technology, from the source code of our software to the code that\nmaintains our Web site and ASP sites, is entirely based on Python. It\nincreases our speed of development and keeps us several steps ahead of\ncompetitors while remaining easy to read and use.  It's as high level of a\nlanguage as you can have without running into functionality problems.  I\nestimate that Python makes our coders 10 times more productive than Java\nprogrammers, and 100 times more than C programmers.\" -- Curt Finch, CEO,\nJournyx \"IronPort email gateway appliances are used by the largest\ncorporations and ISPs in the world,\" said Mark Peek, Sr. Director of\nEngineering at IronPort Systems.  \"Python\nis a critical ingredient in this high performance system. IronPort's\nsuite of products contains over a million lines of Python. The PSF is\nan invaluable resource that helps keep Python on the cutting edge.\" \"Python enabled us to create EVE Online,\na massive multiplayer game, in record\ntime. The EVE Online server cluster runs over 50,000 simultaneous players\nin a shared space simulation, most of which is created in Python. The\nflexibilities of Python have enabled us to quickly improve the game\nexperience based on player feedback\" said\nHilmar Veigar Petursson of CCP Games. \"HomeGain maintains its commitment to continual improvement through\nrapid turnaround of new features and enhancements.  Python supports\nthis short time-to-market philosophy with concise, clear syntax and a\npowerful standard library.  New development proceeds rapidly, and\nmaintenance of existing code is straightforward and fast,\" said Geoff\nGerrietts, Software Engineer, HomeGain.com. \"Python makes us extremely productive, and makes\nmaintaining a large and rapidly evolving codebase relatively\nsimple,\" said Mark Shuttleworth. \"I have the students learn Python in our undergraduate and graduate\nSemantic Web courses.  Why?  Because basically there's nothing else\nwith the flexibility and as many web libraries,\" said Prof. James\nA. Hendler. \"The travel industry is made up of a myriad supplier data feeds all of\nwhich are proprietary in some way and are constantly changing.   Python\nrepeatedly has allowed us to access, build and test our in-house\ncommunications with hundreds of travel suppliers around the world in a\nmatter of days rather then the months it would have taken using other\nlanguages.  Since adopting Python 2 years ago, Python has provided us\nwith a measurable productivity gain that allows us to stay competitive\nin the online travel space,\" said Michael Engelhart, CTO of\nEZTrip.com. \"Python in conjunction with PHP has repeatedly allowed us to develop\nfast and proficient applications that permit Real Estate Agent .com to operate with minimal\nresources. Python is a critical part of our dynamically growing\ncluster directory of real estate agents.\" said Gadi Hus, Webmaster,\nVolico Web Consulting \"Like XML, scripting was extremely useful as both a mod tool and an\ninternal development tool.  If you don't have any need to expose code\nand algorithms in a simple and safe way to others, you can argue that\nproviding a scripting language is not worth the effort.  However, if\nyou do have that need, as we did, scripting is a no brainer, and it\nmakes complete sense to use a powerful, documented, cross-platform\nstandard such as Python.\"  -- Mustafa Thamer of Firaxis Games, talking\nabout Civilization IV.  Quoted on page 18 of the August 2005\nGame Developer Magazine. \"Python, like many good technologies, soon spreads virally throughout\nyour development team and finds its way into all sorts of applications\nand tools.  In other words, Python begins to feel like a big hammer and\ncoding tasks look like nails.\"\n-- Mustafa Thamer of Firaxis Games, talking about Civilization IV.\nQuoted on page 18 of the August 2005 Game Developer Magazine. \"We chose to use python because we wanted a well-supported scripting\nlanguage that could extend our core code. Indeed, we wrote much more\ncode in python than we were expecting, including all in-game screens\nand the main interface. It was a huge win for the project because\nwriting code in a language with garbage collection simply goes faster\nthan writing code in C++. The fact that users will be able to easily\nmod the interface is a nice plus as well. The downside of python was\nthat it significantly increased our build times, mostly from linking\nwith Boost.\" -- Soren Johnson, lead designer, Civilization IV.  Quoted\nin a Slashdot interview. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/about/gettingstarted/",
    "title": "Python For Beginners | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Welcome! Are you completely new to programming?\nIf not then we presume you will be looking for information about\nwhy and how to get started with Python.\nFortunately an\nexperienced programmer in any programming language (whatever it may be)\ncan pick up Python very quickly.\nIt's also easy for beginners to use and learn, so\njump in! Installing Python is generally easy, and nowadays\nmany Linux and UNIX distributions include a recent Python.\nEven\nsome Windows computers (notably those from HP) now come with Python\nalready installed.\nIf you do need to install Python and aren't confident about the\ntask you can find\na few notes on the\nBeginnersGuide/Download\nwiki page, but installation is unremarkable on most platforms. Before getting started, you may want to find out which IDEs and text\neditors are tailored to make\nPython editing easy, browse the list of introductory books, or look at code samples that you might find\nhelpful. There is a list of tutorials suitable for experienced programmers on the\nBeginnersGuide/Tutorials\npage. There is also a list of\nresources in other languages\nwhich might be useful if English is not your first language. The online documentation\nis your first port of call for definitive information.\nThere is a fairly brief\ntutorial\nthat gives you basic information about the language and\ngets you started. You can follow this by looking at the\nlibrary reference\nfor a full description of Python's many libraries and the\nlanguage reference for\na complete (though somewhat dry) explanation of Python's syntax.\nIf you are looking for common Python recipes and patterns, you\ncan browse the ActiveState Python Cookbook If you want to know whether a particular application, or a library\nwith particular functionality, is available in Python there are a\nnumber of possible sources of information. The Python web site\nprovides a\nPython Package Index\n(also known as the Cheese Shop, a reference to the Monty Python\nscript of that name).\nThere is also a\nsearch page for a number of sources of Python-related\ninformation. Failing that, just\nGoogle for a phrase including the word ''python''\nand you may well get the result you need.\nIf all else fails, ask on the\npython newsgroup\nand there's a good chance someone will put you on the right track. If you have a question, it's a good idea to try the\nFAQ, which answers the most commonly\nasked questions about Python. If you want to help to develop Python, take a look at the\ndeveloper area for further information.\nPlease note that you don't have to be an expert programmer\nto help.  The documentation is just as important as the\ncompiler, and still needs plenty of work! The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/about/help/",
    "title": "Help | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "http://brochure.getpython.info/",
    "title": "Get the Python Brochure Vol.1 as download! —",
    "content": "Skip to content. |\n\n  Skip to navigation Personal tools Navigation The first run of the printed edition was successfully released in 2014 at the PyCon in Montreal. After that we distributed this excellent showcase of Python to major computing conferences around the world. We were proud to offer to ship the second print run until end of 2016. We have send all our copies to your local events and shows around Python over the whole world. Since then it is still a growing technology that powers the web and science & engineering in both education and production. You can download the Python brochure as the latest updated screen resolution PDF suitable for electronic distribution and is well suited for low resolution printing on A4 as a A5 folded brochure booklet. The original printed issue was 32 pages, A4, full-color. Quick Read of License and redistribution rules of this PDF: Get the PDF file The Python Software Foundation (PSF) has collected success stories and case studies over the last two years and we've created a beautiful, professional quality printed brochure to promote the usage of Python to audiences which we are currently not reaching well. We cover business, science, industry, education, media, government, public sector and charity stories. Our target groups are CIOs and chief developers, scientists and programmers, university lecturers, teachers and students, customers, clients, managers and employees. Until a new edition is planned, you can still get the PDF file as download. RSS news feed Twitter @pythonbrochure or subscribe to our email newsletter"
  },
  {
    "url": "https://www.python.org/downloads/",
    "title": "Download Python | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Download Python 3.13.5 Download Python 3.13.5 Download Python 3.13.5 Download Python 3.13.5 Looking for Python with a different OS? Python for\r\n  Windows,\r\n  Linux/Unix,\r\n  macOS,\r\n  other Want to help test development versions of Python 3.14?\r\n  Pre-releases,\r\n  Docker images For more information visit the Python Developer's Guide. Python releases by version number: View older releases Visionary sponsors help to host Python downloads. All Python releases are Open Source. Historically, most, but not all, Python releases have also been GPL-compatible. The Licenses page details GPL-compatibility and Terms and Conditions. Read more For most Unix systems, you must download and compile the source code. The same source code archive can also be used to build the Windows and Mac versions, and is the starting point for ports to all other platforms. Download the latest Python 3 source. Read more This site hosts the \"traditional\" implementation of Python (nicknamed CPython). A number of alternative implementations are available as well. Read more Python was created in the early 1990s by Guido van Rossum at Stichting Mathematisch Centrum in the Netherlands as a successor of a language called ABC. Guido remains Python’s principal author, although it includes many contributions from others. Read more See Status of Python Versions for all an overview of all versions, including unsupported. Starting with the Python 3.11.0, Python 3.10.7, and Python 3.9.14 releases, CPython release artifacts are signed with Sigstore. See our dedicated Sigstore Information page for how it works. Python versions before 3.14 are also signed using OpenPGP private keys of the respective release manager. In this case, verification through the release manager's public key is also possible.\r\nSee our dedicated OpenPGP Verification page for how it works. See PEP 761 for why OpenPGP key verification was dropped in Python 3.14. (Updated for Azure Trusted Signing, which applies for all releases chronologically from 3.14.0a1)\r\n\r\nThe Windows installers and all binaries produced as part of each Python release are signed using an Authenticode signing certificate issued to the Python Software Foundation. This can be verified by viewing the properties of any executable file, looking at the Digital Signatures tab, and confirming the name of the signer. Our full certificate subject is CN = Python Software Foundation, O = Python Software Foundation, L = Beaverton, S = Oregon, C = US and as of 14th October 2024 the certificate authority is Microsoft Identity Verification Root Certificate Authority. Our previous certificates were issued by DigiCert.\r\n\r\nNote that some executables may not be signed, notably, the default pip command. These are not built as part of Python, but are included from third-party libraries. Files that are intended to be modified before use cannot be signed and so will not have a signature.\r\n\r\nmacOS Installer Packages\n\r\nInstaller packages for Python on macOS downloadable from python.org are signed with\r\nwith an Apple Developer ID Installer certificate.\r\n\n\r\nAs of Python 3.11.4 and 3.12.0b1 (2023-05-23), release installer packages are signed with certificates issued to the Python Software Foundation (Apple Developer ID BMM5U3QVKW)).\r\n\n\r\nInstaller packages for previous releases were signed with certificates issued to Ned Deily (DJ3H93M7VJ).\r\n\nOther Useful Items\n\nLooking for third-party Python modules?  The\r\nPython Package Index has many of them.\nYou can view the standard documentation\r\nonline, or you can download it\r\nin HTML, PostScript, PDF and other formats.  See the main\r\nDocumentation page.\nInformation on tools for unpacking archive files\r\nprovided on python.org is available.\nTip: even if you download a ready-made binary for your\r\nplatform, it makes sense to also download the source.\r\nThis lets you browse the standard library (the subdirectory Lib)\r\nand the standard collections of tools\r\n(Tools) that come with it.  There's a lot you can learn from the\r\nsource!\n\nWant to contribute?\nWant to contribute?  See the Python Developer's Guide\r\nto learn about how Python development is managed. Installer packages for Python on macOS downloadable from python.org are signed with\r\nwith an Apple Developer ID Installer certificate. As of Python 3.11.4 and 3.12.0b1 (2023-05-23), release installer packages are signed with certificates issued to the Python Software Foundation (Apple Developer ID BMM5U3QVKW)). Installer packages for previous releases were signed with certificates issued to Ned Deily (DJ3H93M7VJ). Want to contribute?  See the Python Developer's Guide\r\nto learn about how Python development is managed. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/downloads/source/",
    "title": "Python Source Releases | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/downloads/windows/",
    "title": "Python Releases for Windows | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Note that Python 3.13.5 cannot be used on Windows 7 or earlier. Note that Python 3.13.4 cannot be used on Windows 7 or earlier. Note that Python 3.13.3 cannot be used on Windows 7 or earlier. Note that Python 3.12.10 cannot be used on Windows 7 or earlier. Note that Python 3.13.2 cannot be used on Windows 7 or earlier. Note that Python 3.12.9 cannot be used on Windows 7 or earlier. Note that Python 3.12.8 cannot be used on Windows 7 or earlier. Note that Python 3.13.1 cannot be used on Windows 7 or earlier. Note that Python 3.13.0 cannot be used on Windows 7 or earlier. Note that Python 3.12.7 cannot be used on Windows 7 or earlier. Note that Python 3.12.6 cannot be used on Windows 7 or earlier. Note that Python 3.12.5 cannot be used on Windows 7 or earlier. Note that Python 3.12.4 cannot be used on Windows 7 or earlier. Note that Python 3.12.3 cannot be used on Windows 7 or earlier. Note that Python 3.11.9 cannot be used on Windows 7 or earlier. Note that Python 3.11.8 cannot be used on Windows 7 or earlier. Note that Python 3.12.2 cannot be used on Windows 7 or earlier. Note that Python 3.12.1 cannot be used on Windows 7 or earlier. Note that Python 3.11.7 cannot be used on Windows 7 or earlier. Note that Python 3.12.0 cannot be used on Windows 7 or earlier. Note that Python 3.11.6 cannot be used on Windows 7 or earlier. Note that Python 3.11.5 cannot be used on Windows 7 or earlier. Note that Python 3.11.4 cannot be used on Windows 7 or earlier. Note that Python 3.10.11 cannot be used on Windows 7 or earlier. Note that Python 3.11.3 cannot be used on Windows 7 or earlier. Note that Python 3.10.10 cannot be used on Windows 7 or earlier. Note that Python 3.11.2 cannot be used on Windows 7 or earlier. Note that Python 3.11.1 cannot be used on Windows 7 or earlier. Note that Python 3.10.9 cannot be used on Windows 7 or earlier. Note that Python 3.11.0 cannot be used on Windows 7 or earlier. Note that Python 3.10.8 cannot be used on Windows 7 or earlier. Note that Python 3.10.7 cannot be used on Windows 7 or earlier. Note that Python 3.10.6 cannot be used on Windows 7 or earlier. Note that Python 3.10.5 cannot be used on Windows 7 or earlier. Note that Python 3.9.13 cannot be used on Windows 7 or earlier. Note that Python 3.10.4 cannot be used on Windows 7 or earlier. Note that Python 3.9.12 cannot be used on Windows 7 or earlier. Note that Python 3.10.3 cannot be used on Windows 7 or earlier. Note that Python 3.9.11 cannot be used on Windows 7 or earlier. Note that Python 3.9.10 cannot be used on Windows 7 or earlier. Note that Python 3.10.2 cannot be used on Windows 7 or earlier. Note that Python 3.10.1 cannot be used on Windows 7 or earlier. Note that Python 3.9.9 cannot be used on Windows 7 or earlier. Note that Python 3.9.8 cannot be used on Windows 7 or earlier. Note that Python 3.10.0 cannot be used on Windows 7 or earlier. Note that Python 3.9.7 cannot be used on Windows 7 or earlier. Note that Python 3.9.6 cannot be used on Windows 7 or earlier. Note that Python 3.9.5 cannot be used on Windows 7 or earlier. Note that Python 3.8.10 cannot be used on Windows XP or earlier. Note that Python 3.9.4 cannot be used on Windows 7 or earlier. Note that Python 3.8.9 cannot be used on Windows XP or earlier. Note that Python 3.9.2 cannot be used on Windows 7 or earlier. Note that Python 3.8.8 cannot be used on Windows XP or earlier. Note that Python 3.8.7 cannot be used on Windows XP or earlier. Note that Python 3.9.1 cannot be used on Windows 7 or earlier. Note that Python 3.9.0 cannot be used on Windows 7 or earlier. Note that Python 3.8.6 cannot be used on Windows XP or earlier. Note that Python 3.8.6rc1 cannot be used on Windows XP or earlier. Note that Python 3.7.9 cannot be used on Windows XP or earlier. Note that Python 3.8.5 cannot be used on Windows XP or earlier. Note that Python 3.8.4 cannot be used on Windows XP or earlier. Note that Python 3.8.4rc1 cannot be used on Windows XP or earlier. Note that Python 3.7.8 cannot be used on Windows XP or earlier. Note that Python 3.8.3 cannot be used on Windows XP or earlier. Note that Python 3.8.3rc1 cannot be used on Windows XP or earlier. Note that Python 3.7.7 cannot be used on Windows XP or earlier. Note that Python 3.8.2 cannot be used on Windows XP or earlier. Note that Python 3.8.1 cannot be used on Windows XP or earlier. Note that Python 3.7.6 cannot be used on Windows XP or earlier. Note that Python 3.7.5 cannot be used on Windows XP or earlier. Note that Python 3.8.0 cannot be used on Windows XP or earlier. Note that Python 3.7.4 cannot be used on Windows XP or earlier. Note that Python 3.7.3 cannot be used on Windows XP or earlier. Note that Python 3.7.2 cannot be used on Windows XP or earlier. Note that Python 3.6.8 cannot be used on Windows XP or earlier. Note that Python 3.7.1 cannot be used on Windows XP or earlier. Note that Python 3.6.7 cannot be used on Windows XP or earlier. Note that Python 3.7.0 cannot be used on Windows XP or earlier. Note that Python 3.6.6 cannot be used on Windows XP or earlier. Note that Python 3.6.5 cannot be used on Windows XP or earlier. Note that Python 3.6.4 cannot be used on Windows XP or earlier. Note that Python 3.6.3 cannot be used on Windows XP or earlier. Note that Python 3.5.4 cannot be used on Windows XP or earlier. Note that Python 3.6.2 cannot be used on Windows XP or earlier. Note that Python 3.6.1 cannot be used on Windows XP or earlier. Note that Python 3.5.3 cannot be used on Windows XP or earlier. Note that Python 3.6.0 cannot be used on Windows XP or earlier. Note that Python 3.5.2 cannot be used on Windows XP or earlier. Note that Python 3.5.1 cannot be used on Windows XP or earlier. Note that Python 3.5.0 cannot be used on Windows XP or earlier. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/downloads/macos/",
    "title": "Python Releases for macOS | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/download/other/",
    "title": "Download Python for other platforms | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Python has been ported to a number of specialized and/or older platforms,\nlisted below in alphabetical order.  Note that these ports often lag\nwell behind the latest Python release. Briefcase (from the BeeWare project) and Buildozer (from the Kivy project) are two tools that can be used to deploy Python code as an Android app. Chaquopy is a project that can be used to embed Python into an existing Android Gradle project. The Chaquopy binaries are used by Briefcase when deploying to Android. pyqtdeploy can be used to convert a Qt project into an Android app. Termux is a terminal emulator and Linux environment that provides a Python binary. AIX binary packages for Python are available from IBM AIX Toolbox in RPM format. They can be installed using dnf package manager. Visit the Get Started page for more details. You can purchase ActivePython\n(commercial and community versions, including scientific computing modules, not open source) Both Python 2 and Python 3 are available from IBM in RPM form. They can be installed with the yum package manager or with the IBM i Access Client Solutions product. To get started with RPM-based open source packages for IBM i, visit http://ibm.biz/ibmi-rpms.  These RPM packages require a version of IBM i in active (not extended) support. Briefcase (from the BeeWare project) and Buildozer (from the Kivy project) are two tools that can be used to deploy Python code as an iOS app. Python-Apple-support is a project that provides pre-compiled Python frameworks that can be embedded into an Xcode project. PythonKit can be used to provide Swift integration with Python. Pythonista is a complete development environment for writing Python scripts including third-party libraries and system integration on your iPad or iPhone. Pyto  also provides a complete development environment for running Python 3 including many third-party libraries and system integration on an iPad or iPhone. You can purchase ActivePython\n(commercial and community versions, including scientific computing modules, not open source) Python is available for RISC OS, and can be obtained using the PackMan package manager. You can purchase ActivePython\n(commercial and community versions, including scientific computing modules, not open source), or build from\nsource if you have a C compiler. UNIX Packages has a variety\nof Python versions for a variety of Solaris versions.  These use the\nstandard Sun pkgadd. Standard CPython version 3.6.8 port for the Unified Extensible Firmware Interface (UEFI)\nshell environment is available through the Tianocore open source project.\nThis provides the standard Python scripting capabilities on UEFI environment,\nhelping the UEFI based firmware and platform developer community to use it for platform,\nfirmware validation, debug and the like.\nPython for UEFI source code and build instructions are available here. Currently build support is enabled using VS2019 and GCC5 tool chains for x86 and x64 bit platforms. Rocket Software provides a port of Python for z/OS. Python for z/OS is available from IBM for no license charge. It is available in PAX format from\nEarly Programs Web Tool\nor SMP/E format from Shopz.\nOptional no-cost Subscription and Support (S&S) is available in the Shopz ordering process.\nPlease visit the IBM Open Enterprise SDK for Python product page for more information. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://docs.python.org/3/license.html",
    "title": "History and License — Python 3.13.5 documentation",
    "content": "Copyright Python was created in the early 1990s by Guido van Rossum at Stichting\nMathematisch Centrum (CWI, see https://www.cwi.nl) in the Netherlands as a\nsuccessor of a language called ABC.  Guido remains Pythonâs principal author,\nalthough it includes many contributions from others. In 1995, Guido continued his work on Python at the Corporation for National\nResearch Initiatives (CNRI, see https://www.cnri.reston.va.us) in Reston,\nVirginia where he released several versions of the software. In May 2000, Guido and the Python core development team moved to BeOpen.com to\nform the BeOpen PythonLabs team.  In October of the same year, the PythonLabs\nteam moved to Digital Creations, which became\nZope Corporation.  In 2001, the Python Software Foundation (PSF, see\nhttps://www.python.org/psf/) was formed, a non-profit organization created\nspecifically to own Python-related Intellectual Property.  Zope Corporation was a\nsponsoring member of the PSF. All Python releases are Open Source (see https://opensource.org for the Open\nSource Definition). Historically, most, but not all, Python releases have also\nbeen GPL-compatible; the table below summarizes the various releases. Release Derived from Year Owner GPL-compatible? (1) 0.9.0 thru 1.2 n/a 1991-1995 CWI yes 1.3 thru 1.5.2 1.2 1995-1999 CNRI yes 1.6 1.5.2 2000 CNRI no 2.0 1.6 2000 BeOpen.com no 1.6.1 1.6 2001 CNRI yes (2) 2.1 2.0+1.6.1 2001 PSF no 2.0.1 2.0+1.6.1 2001 PSF yes 2.1.1 2.1+2.0.1 2001 PSF yes 2.1.2 2.1.1 2002 PSF yes 2.1.3 2.1.2 2002 PSF yes 2.2 and above 2.1.1 2001-now PSF yes Note GPL-compatible doesnât mean that weâre distributing Python under the GPL.\nAll Python licenses, unlike the GPL, let you distribute a modified version\nwithout making your changes open source. The GPL-compatible licenses make\nit possible to combine Python with other software that is released under\nthe GPL; the others donât. According to Richard Stallman, 1.6.1 is not GPL-compatible, because its license\nhas a choice of law clause. According to CNRI, however, Stallmanâs lawyer has\ntold CNRIâs lawyer that 1.6.1 is ânot incompatibleâ with the GPL. Thanks to the many outside volunteers who have worked under Guidoâs direction to\nmake these releases possible. Python software and documentation are licensed under the\nPython Software Foundation License Version 2. Starting with Python 3.8.6, examples, recipes, and other code in\nthe documentation are dual licensed under the PSF License Version 2\nand the Zero-Clause BSD license. Some software incorporated into Python is under different licenses.\nThe licenses are listed with code falling under that license.\nSee Licenses and Acknowledgements for Incorporated Software for an incomplete list of these licenses. BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1 This section is an incomplete, but growing list of licenses and acknowledgements\nfor third-party software incorporated in the Python distribution. The _random C extension underlying the random module\nincludes code based on a download from\nhttp://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html. The following are\nthe verbatim comments from the original code: The socket module uses the functions, getaddrinfo(), and\ngetnameinfo(), which are coded in separate source files from the WIDE\nProject, https://www.wide.ad.jp/. The test.support.asynchat and test.support.asyncore\nmodules contain the following notice: The http.cookies module contains the following notice: The trace module contains the following notice: The uu codec contains the following notice: The xmlrpc.client module contains the following notice: The test.test_epoll module contains the following notice: The select module contains the following notice for the kqueue\ninterface: The file Python/pyhash.c contains Marek Majkowskiâ implementation of\nDan Bernsteinâs SipHash24 algorithm. It contains the following note: The file Python/dtoa.c, which supplies C functions dtoa and\nstrtod for conversion of C doubles to and from strings, is derived\nfrom the file of the same name by David M. Gay, currently available\nfrom https://web.archive.org/web/20220517033456/http://www.netlib.org/fp/dtoa.c.\nThe original file, as retrieved on March 16, 2009, contains the following\ncopyright and licensing notice: The modules hashlib, posix and ssl use\nthe OpenSSL library for added performance if made available by the\noperating system. Additionally, the Windows and macOS installers for\nPython may include a copy of the OpenSSL libraries, so we include a copy\nof the OpenSSL license here. For the OpenSSL 3.0 release,\nand later releases derived from that, the Apache License v2 applies: The pyexpat extension is built using an included copy of the expat\nsources unless the build is configured --with-system-expat: The _ctypes C extension underlying the ctypes module\nis built using an included copy of the libffi\nsources unless the build is configured --with-system-libffi: The zlib extension is built using an included copy of the zlib\nsources if the zlib version found on the system is too old to be\nused for the build: The implementation of the hash table used by the tracemalloc is based\non the cfuhash project: The _decimal C extension underlying the decimal module\nis built using an included copy of the libmpdec\nlibrary unless the build is configured --with-system-libmpdec: The C14N 2.0 test suite in the test package\n(Lib/test/xmltestdata/c14n-20/) was retrieved from the W3C website at\nhttps://www.w3.org/TR/xml-c14n2-testcases/ and is distributed under the\n3-clause BSD license: MIT License: Parts of the asyncio module are incorporated from\nuvloop 0.16,\nwhich is distributed under the MIT license: The file Python/qsbr.c is adapted from FreeBSDâs âGlobal Unbounded\nSequencesâ safe memory reclamation scheme in\nsubr_smr.c.\nThe file is distributed under the 2-Clause BSD License: Copyright"
  },
  {
    "url": "https://www.python.org/download/alternatives",
    "title": "Alternative Python Implementations | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. This site hosts the \"traditional\" implementation of Python (nicknamed CPython).\nA number of alternative implementations are available as well, namely Other parties have re-packaged CPython.  These re-packagings often\ninclude more libraries or are specialized for a particular application: If you want to host and run Python in the cloud, these implementations may be right for you: The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/doc/",
    "title": "Our Documentation | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Python's documentation, tutorials, and guides are constantly evolving. Get started here, or scroll down for documentation broken out by type and subject. Python Docs See also Documentation Releases by Version Can’t find what you’re looking for? Try our comprehensive Help section Open source software is made better when users can easily contribute code and documentation to fix bugs and add features. Python strongly encourages community involvement in improving the software. Learn more about how to make Python better for everyone. Contribute to Python\nIssue Tracker Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/doc/av",
    "title": "Audio/Video Instructional Materials for Python | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. There is a growing body of podcasts, screencasts and video presentations for\nthe Python community.  This page collects some of the best. Python411 is a series of podcasts about Python presented by Ron Stephens,\naimed at hobbyists and others who are learning Python.  Each episode\nfocuses on one aspect of learning Python, or one kind of Python\nprogramming, and points to online tools and tutorials.  Python related news\nand events will also be reported upon as well as interviews with key\nPython contributors. Ron has built up quite a collection of podcasts since he started in May\n2005 - over fifty as of April 2007.  They are great for listening to on\nthe train or in traffic. The site provides an XML/RSS feed to which you can subscribe with your\nfavorite reader or make a live bookmark of dropdown podcast titles\nusing Mozilla Firefox. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://wiki.python.org/moin/BeginnersGuide",
    "title": "BeginnersGuide - Python Wiki",
    "content": "Beginner's Guide to Python\nNew to programming? Python is free and easy to learn if you know where to start! This guide will help you to get started quickly. Chinese Translation/中文版入门 \nNew to Python?\nRead BeginnersGuide/Overview for a short explanation of what Python is. \nGetting Python\nNext, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation New to programming? Python is free and easy to learn if you know where to start! This guide will help you to get started quickly. Chinese Translation/中文版入门 \nNew to Python?\nRead BeginnersGuide/Overview for a short explanation of what Python is. \nGetting Python\nNext, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Chinese Translation/中文版入门 \nNew to Python?\nRead BeginnersGuide/Overview for a short explanation of what Python is. \nGetting Python\nNext, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation New to Python?\nRead BeginnersGuide/Overview for a short explanation of what Python is. \nGetting Python\nNext, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Read BeginnersGuide/Overview for a short explanation of what Python is. \nGetting Python\nNext, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Getting Python\nNext, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Next, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. \nLearning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Learning Python\nNext, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Next, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Here are some sites that focus on beginners and offer in-browser coding: Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Please keep these links sorted alphabetically Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Beginners Python tutorial at Python Land (free) Codédex (non-free) Outdated, Python 2! * Codecademy  Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Coding Bootcamps (non-free) DataCamp (non-free) Dataquest for Python for data science. (free) Genepy interactive exercises (free, open source, no ads) High School Technology Services for general Python (non-free) LabEx Python Hands-on Labs (freemium) Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. \nNeed Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Need Help?\nNeed help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Need help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation An interactive and free way to learn Python is to ask ChatGPT or another generative AI model for help. The Python code quality generated by AI agents has become pretty good. State-of-the-art AI models work especially well for small projects or code understanding questions. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. \nComplete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Complete list of Beginner's Guide pages\n\nBeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation BeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/NonProgrammersChineseBeginnersGuide/OverviewBeginnersGuide/OverviewChineseBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples\n \nQuiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Quiz and Exercises\nAfter Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform \nPython Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation After Hours Programming - Python Quiz CheckIO - Online learning, testing and improving your python skills CS Circles - Online lessons and graded exercises Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle LabEx - 1000+ Python Interactive Challenges PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform Python Based AI and Prompt Engineering\nAI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) \nLooking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation AI Engineering Academy - Become a Certified AI Engineer with OpenAI API, HuggingFace, and Llama Generative AI Tutorial - Generative AI Tutorial GitHub Prompt Engineering Guide - List of helpful resources Google Gemini (Python) - Python Library to access Google's Gemini Model OpenAI API (Python) - Quickstart to Access OpenAI's API (Python, Javascript, curl) Looking for a particular Python module or application?\nThe first place to look is the Python Package Index. If you can't find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. \nPython-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation The first place to look is the Python Package Index. try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. Next, try Google or another search engine of your choice. Searching for \"python\" and some relevant keywords will usually find something helpful. Python-Related Cheat Sheets\nPython: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets \nWant to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Python: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets Want to contribute?\nPython is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation Python is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page. CategoryDocumentation CategoryDocumentation BeginnersGuide  (last edited 2025-03-07 01:13:11 by MaciejOlko) Unable to edit the page? See the FrontPage for instructions."
  },
  {
    "url": "https://devguide.python.org/",
    "title": "Python Developer’s Guide",
    "content": "This guide is a comprehensive resource for contributing\nto Python – for both new and experienced contributors. It is\nmaintained by the same\ncommunity that maintains Python.  We welcome your contributions to Python! Here are the basic steps needed to get set up and contribute a pull request.\nThis is meant as a checklist, once you know the basics. For complete\ninstructions please see the setup guide. Install and set up Git and other dependencies\n(see the Git Setup page for detailed information). Fork the CPython repository\nto your GitHub account and get the source code using: Build Python: See also more detailed instructions,\nhow to install and build dependencies,\nand the platform-specific pages for Unix,\nmacOS, and Windows. Run the tests: Note: Most macOS systems use\n./python.exe in order to avoid filename conflicts with\nthe Python directory. Create a new branch where your work for the issue will go, for example: If an issue does not already exist, please create it.  Trivial issues (for example, typo fixes) do\nnot require any issue to be created. Once you fixed the issue, run the tests, and the patchcheck: If everything is ok, commit. Push the branch on your fork on GitHub and create a pull request.  Include the issue number using gh-NNNN in the\npull request description.  For example: Add a News entry into the Misc/NEWS.d directory as individual file. The\nnews entry can be created by using blurb-it,\nor the blurb tool and its blurb add\ncommand. Please read more about blurb in its\nrepository. Note First time contributors will need to sign the Contributor Licensing\nAgreement (CLA) as described in the Licensing section of\nthis guide. Here are some links that you probably will reference frequently while\ncontributing to Python: Issue tracker Buildbot status Where to get help PEPs (Python Enhancement Proposals) Git bootcamp and cheat sheet We encourage everyone to contribute to Python and that’s why we have put up this\ndeveloper’s guide.  If you still have questions after reviewing the material in\nthis guide, then the Core Python Mentorship group is available to help guide new\ncontributors through the process. A number of individuals from the Python community have contributed to a series\nof excellent guides at Open Source Guides. Core developers and contributors alike will find the following guides useful: How to Contribute to Open Source Building Welcoming Communities Guide for contributing to Python: Contributors Documentarians Triagers Core team Setup and building Helping with documentation Issue tracker Responsibilities Where to get help Getting started Triaging an issue Team log Lifecycle of a pull request Style guide Helping triage issues Accepting pull requests Running and writing tests reStructuredText primer Experts index Development cycle Fixing “easy” issues (and beyond) Translating GitHub labels Motivations and affiliations Following Python’s development Helping with the Developer’s Guide GitHub issues for BPO users Experts index Git bootcamp and cheat sheet Triage Team Development cycle We recommend that the documents in this guide be read as needed. You\ncan stop where you feel comfortable and begin contributing immediately without\nreading and understanding these documents all at once.  If you do choose to skip\naround within the documentation, be aware that it is written assuming preceding\ndocumentation has been read so you may find it necessary to backtrack to fill in\nmissing concepts and terminology. Improving Python’s code, documentation and tests are ongoing tasks that are\nnever going to be “finished”, as Python operates as part of an ever-evolving\nsystem of technology.  An even more challenging ongoing task than these\nnecessary maintenance activities is finding ways to make Python, in the form of\nthe standard library and the language definition, an even better tool in a\ndeveloper’s toolkit. While these kinds of change are much rarer than those described above, they do\nhappen and that process is also described as part of this guide: Adding to the stdlib Changing the Python language This guide is specifically for contributing to the Python reference interpreter,\nalso known as CPython (while most of the standard library is written in Python,\nthe interpreter core is written in C and integrates most easily with the C and\nC++ ecosystems). There are other Python implementations, each with a different focus.  Like\nCPython, they always have more things they would like to do than they have\ndevelopers to work on them.  Some major examples that may be of interest are: PyPy: A Python interpreter focused on high speed (JIT-compiled) operation\non major platforms. GraalPy: A Python interpreter which has first-class support for\nembedding in Java, built on GraalVM. Jython: A Python interpreter focused on good integration with the Java\nVirtual Machine (JVM) environment. IronPython: A Python interpreter focused on good integration with the\nCommon Language Runtime (CLR) provided by .NET and Mono. Stackless: A Python interpreter focused on providing lightweight\nmicrothreads while remaining largely compatible with CPython specific\nextension modules. MicroPython: A tiny Python interpreter with small subset of the Python\nstandard library that is optimised to run on microcontrollers and in\nconstrained environments. CircuitPython: A fork of MicroPython designed to simplify experimenting\nand learning to code on low-cost microcontroller boards. Coding style guides PEP 7 (Style Guide for C Code) PEP 8 (Style Guide for Python Code) Issue tracker Experts index Buildbot status Source code Browse online Snapshot of the *main* branch PEPs (Python Enhancement Proposals) Where to get help Team log Anyone can clone the sources for this guide.  See Helping with the Developer’s Guide. Help with … CPython source code Changing CPython’s grammar Guide to the parser Compiler design Garbage collector design Tool support GDB support Dynamic analysis with Clang Various tools with configuration files as found in the Misc directory Information about editors and their configurations can be found in the\nwiki python.org maintenance Search this guide Please note that all interactions on\nPython Software Foundation-supported\ninfrastructure is covered\nby the PSF Code of Conduct,\nwhich includes all infrastructure used in the development of Python itself\n(for example, mailing lists, issue trackers, GitHub, etc.).\nIn general this means everyone is expected to be open, considerate, and\nrespectful of others no matter what their position is within the project. Moved to Status of Python versions"
  },
  {
    "url": "http://wiki.python.org/moin/Languages",
    "title": "Languages - Python Wiki",
    "content": "Attempt to have languages and links listed in the native tongue of the user.  2009-09-01 This page's links go to the various languages' pages, most of which have been copied from the other set of language pages, with a few updates.  Ideally, all the pages should be like the Polish or Turkish pages - all native language, only the necessary English. There are some ground rules, some are laid down by the site admins, some are my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully, this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). \nLanguages\nAfrikaansLanguage Afrikaans AlbanianLanguage Shqip AmharicLanguage አማርኛ ArabicLanguage العربية ArmenianLanguage Հայերեն AssameseLanguage অসমীয়া AzerbaijaniLanguage Azərbaycan dili BelarusianLanguage Беларуская мова BengaliLanguage বাংলা BodoLanguage बड़ो BosnianLanguage bosanski BulgarianLanguage български език BurmeseLanguage မြန်မာဘာသာ CatalanLanguage català ChineseLanguage 中文 CroatianLanguage hrvatski CzechLanguage čeština DanishLanguage dansk DogriLanguage डोगरी  Devanagari script DutchLanguage Nederlands EsperantoLanguage Esperanto EstonianLanguage eesti keel FinnishLanguage suomi FrenchLanguage français GeorgianLanguage ქართული ენა GermanLanguage Deutsch GreekLanguage Νέα Ελληνικά GujaratiLanguage ગુજરાતી HausaLanguage Hausa HebrewLanguage עִבְרִית HindiLanguage हिन्दी HungarianLanguage magyar nyelv IndonesianLanguage Bahasa Indonesia IcelandicLanguage íslenska IgboLanguage Asụsụ Igbo ItalianLanguage italiano JapaneseLanguage 日本語 KannadaLanguage ಕನ್ನಡ KashmiriLanguage कॉशुर (Koshur) KazakhLanguage Қазақ тілі KhmerLanguage ភាសាខ្មែរ KonkaniLanguage कोंकणी Devangari script KoreanLanguage 한국어/조선말 LaoLanguage ພາສາລາວ LatvianLanguage latviešu valoda LithuanianLanguage lietuvių kalba MalayLanguage Bahasa Melayu MalayalamLanguage മലയാളം MarathiLanguage मराठी MongolianLanguage Монгол хэл NepaliLanguage नेपाली NorwegianLanguage norsk OriyaLanguage ଓଡ଼ିଆ OromoLanguage Afaan Oromoo PersianLanguage فارسی PolishLanguage język polski PortugueseLanguage português PunjabiLanguage ਪੰਜਾਬੀ WesternPunjabiLanguage پنجابی RomanianLanguage limba română RussianLanguage русский язык SanskritLanguage संस्कृत SlovakLanguage slovenský jazyk SloveneLanguage slovenščina SerbianLanguage Српски SinhalaLanguage සිංහල SpanishLanguage español SwahiliLanguage Kiswahili SwedishLanguage svenska TagalogLanguage Wikang Tagalog TamilLanguage தமிழ TeluguLanguage తెలుగు ThaiLanguage ภาษาไทย TigrinyaLanguage ትግርኛ TurkishLanguage Türkçe UkranianLanguage украї́нська мо́ва UrduLanguage اُردوُ UzbekLanguage O‘zbek tili VietnameseLanguage tiếng Việt XhosaLanguage isiXhosa ZuluLanguage isiZulu CategoryLanguage CategoryUnicode 2009-09-01 This page's links go to the various languages' pages, most of which have been copied from the other set of language pages, with a few updates.  Ideally, all the pages should be like the Polish or Turkish pages - all native language, only the necessary English. There are some ground rules, some are laid down by the site admins, some are my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully, this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). \nLanguages\nAfrikaansLanguage Afrikaans AlbanianLanguage Shqip AmharicLanguage አማርኛ ArabicLanguage العربية ArmenianLanguage Հայերեն AssameseLanguage অসমীয়া AzerbaijaniLanguage Azərbaycan dili BelarusianLanguage Беларуская мова BengaliLanguage বাংলা BodoLanguage बड़ो BosnianLanguage bosanski BulgarianLanguage български език BurmeseLanguage မြန်မာဘာသာ CatalanLanguage català ChineseLanguage 中文 CroatianLanguage hrvatski CzechLanguage čeština DanishLanguage dansk DogriLanguage डोगरी  Devanagari script DutchLanguage Nederlands EsperantoLanguage Esperanto EstonianLanguage eesti keel FinnishLanguage suomi FrenchLanguage français GeorgianLanguage ქართული ენა GermanLanguage Deutsch GreekLanguage Νέα Ελληνικά GujaratiLanguage ગુજરાતી HausaLanguage Hausa HebrewLanguage עִבְרִית HindiLanguage हिन्दी HungarianLanguage magyar nyelv IndonesianLanguage Bahasa Indonesia IcelandicLanguage íslenska IgboLanguage Asụsụ Igbo ItalianLanguage italiano JapaneseLanguage 日本語 KannadaLanguage ಕನ್ನಡ KashmiriLanguage कॉशुर (Koshur) KazakhLanguage Қазақ тілі KhmerLanguage ភាសាខ្មែរ KonkaniLanguage कोंकणी Devangari script KoreanLanguage 한국어/조선말 LaoLanguage ພາສາລາວ LatvianLanguage latviešu valoda LithuanianLanguage lietuvių kalba MalayLanguage Bahasa Melayu MalayalamLanguage മലയാളം MarathiLanguage मराठी MongolianLanguage Монгол хэл NepaliLanguage नेपाली NorwegianLanguage norsk OriyaLanguage ଓଡ଼ିଆ OromoLanguage Afaan Oromoo PersianLanguage فارسی PolishLanguage język polski PortugueseLanguage português PunjabiLanguage ਪੰਜਾਬੀ WesternPunjabiLanguage پنجابی RomanianLanguage limba română RussianLanguage русский язык SanskritLanguage संस्कृत SlovakLanguage slovenský jazyk SloveneLanguage slovenščina SerbianLanguage Српски SinhalaLanguage සිංහල SpanishLanguage español SwahiliLanguage Kiswahili SwedishLanguage svenska TagalogLanguage Wikang Tagalog TamilLanguage தமிழ TeluguLanguage తెలుగు ThaiLanguage ภาษาไทย TigrinyaLanguage ትግርኛ TurkishLanguage Türkçe UkranianLanguage украї́нська мо́ва UrduLanguage اُردوُ UzbekLanguage O‘zbek tili VietnameseLanguage tiếng Việt XhosaLanguage isiXhosa ZuluLanguage isiZulu CategoryLanguage CategoryUnicode Ideally, all the pages should be like the Polish or Turkish pages - all native language, only the necessary English. There are some ground rules, some are laid down by the site admins, some are my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully, this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). \nLanguages\nAfrikaansLanguage Afrikaans AlbanianLanguage Shqip AmharicLanguage አማርኛ ArabicLanguage العربية ArmenianLanguage Հայերեն AssameseLanguage অসমীয়া AzerbaijaniLanguage Azərbaycan dili BelarusianLanguage Беларуская мова BengaliLanguage বাংলা BodoLanguage बड़ो BosnianLanguage bosanski BulgarianLanguage български език BurmeseLanguage မြန်မာဘာသာ CatalanLanguage català ChineseLanguage 中文 CroatianLanguage hrvatski CzechLanguage čeština DanishLanguage dansk DogriLanguage डोगरी  Devanagari script DutchLanguage Nederlands EsperantoLanguage Esperanto EstonianLanguage eesti keel FinnishLanguage suomi FrenchLanguage français GeorgianLanguage ქართული ენა GermanLanguage Deutsch GreekLanguage Νέα Ελληνικά GujaratiLanguage ગુજરાતી HausaLanguage Hausa HebrewLanguage עִבְרִית HindiLanguage हिन्दी HungarianLanguage magyar nyelv IndonesianLanguage Bahasa Indonesia IcelandicLanguage íslenska IgboLanguage Asụsụ Igbo ItalianLanguage italiano JapaneseLanguage 日本語 KannadaLanguage ಕನ್ನಡ KashmiriLanguage कॉशुर (Koshur) KazakhLanguage Қазақ тілі KhmerLanguage ភាសាខ្មែរ KonkaniLanguage कोंकणी Devangari script KoreanLanguage 한국어/조선말 LaoLanguage ພາສາລາວ LatvianLanguage latviešu valoda LithuanianLanguage lietuvių kalba MalayLanguage Bahasa Melayu MalayalamLanguage മലയാളം MarathiLanguage मराठी MongolianLanguage Монгол хэл NepaliLanguage नेपाली NorwegianLanguage norsk OriyaLanguage ଓଡ଼ିଆ OromoLanguage Afaan Oromoo PersianLanguage فارسی PolishLanguage język polski PortugueseLanguage português PunjabiLanguage ਪੰਜਾਬੀ WesternPunjabiLanguage پنجابی RomanianLanguage limba română RussianLanguage русский язык SanskritLanguage संस्कृत SlovakLanguage slovenský jazyk SloveneLanguage slovenščina SerbianLanguage Српски SinhalaLanguage සිංහල SpanishLanguage español SwahiliLanguage Kiswahili SwedishLanguage svenska TagalogLanguage Wikang Tagalog TamilLanguage தமிழ TeluguLanguage తెలుగు ThaiLanguage ภาษาไทย TigrinyaLanguage ትግርኛ TurkishLanguage Türkçe UkranianLanguage украї́нська мо́ва UrduLanguage اُردوُ UzbekLanguage O‘zbek tili VietnameseLanguage tiếng Việt XhosaLanguage isiXhosa ZuluLanguage isiZulu CategoryLanguage CategoryUnicode Ideally, all the pages should be like the Polish or Turkish pages - all native language, only the necessary English. There are some ground rules, some are laid down by the site admins, some are my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully, this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). There are some ground rules, some are laid down by the site admins, some are my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully, this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). Languages\nAfrikaansLanguage Afrikaans AlbanianLanguage Shqip AmharicLanguage አማርኛ ArabicLanguage العربية ArmenianLanguage Հայերեն AssameseLanguage অসমীয়া AzerbaijaniLanguage Azərbaycan dili BelarusianLanguage Беларуская мова BengaliLanguage বাংলা BodoLanguage बड़ो BosnianLanguage bosanski BulgarianLanguage български език BurmeseLanguage မြန်မာဘာသာ CatalanLanguage català ChineseLanguage 中文 CroatianLanguage hrvatski CzechLanguage čeština DanishLanguage dansk DogriLanguage डोगरी  Devanagari script DutchLanguage Nederlands EsperantoLanguage Esperanto EstonianLanguage eesti keel FinnishLanguage suomi FrenchLanguage français GeorgianLanguage ქართული ენა GermanLanguage Deutsch GreekLanguage Νέα Ελληνικά GujaratiLanguage ગુજરાતી HausaLanguage Hausa HebrewLanguage עִבְרִית HindiLanguage हिन्दी HungarianLanguage magyar nyelv IndonesianLanguage Bahasa Indonesia IcelandicLanguage íslenska IgboLanguage Asụsụ Igbo ItalianLanguage italiano JapaneseLanguage 日本語 KannadaLanguage ಕನ್ನಡ KashmiriLanguage कॉशुर (Koshur) KazakhLanguage Қазақ тілі KhmerLanguage ភាសាខ្មែរ KonkaniLanguage कोंकणी Devangari script KoreanLanguage 한국어/조선말 LaoLanguage ພາສາລາວ LatvianLanguage latviešu valoda LithuanianLanguage lietuvių kalba MalayLanguage Bahasa Melayu MalayalamLanguage മലയാളം MarathiLanguage मराठी MongolianLanguage Монгол хэл NepaliLanguage नेपाली NorwegianLanguage norsk OriyaLanguage ଓଡ଼ିଆ OromoLanguage Afaan Oromoo PersianLanguage فارسی PolishLanguage język polski PortugueseLanguage português PunjabiLanguage ਪੰਜਾਬੀ WesternPunjabiLanguage پنجابی RomanianLanguage limba română RussianLanguage русский язык SanskritLanguage संस्कृत SlovakLanguage slovenský jazyk SloveneLanguage slovenščina SerbianLanguage Српски SinhalaLanguage සිංහල SpanishLanguage español SwahiliLanguage Kiswahili SwedishLanguage svenska TagalogLanguage Wikang Tagalog TamilLanguage தமிழ TeluguLanguage తెలుగు ThaiLanguage ภาษาไทย TigrinyaLanguage ትግርኛ TurkishLanguage Türkçe UkranianLanguage украї́нська мо́ва UrduLanguage اُردوُ UzbekLanguage O‘zbek tili VietnameseLanguage tiếng Việt XhosaLanguage isiXhosa ZuluLanguage isiZulu CategoryLanguage CategoryUnicode AfrikaansLanguage Afrikaans AlbanianLanguage Shqip AmharicLanguage አማርኛ ArabicLanguage العربية ArmenianLanguage Հայերեն AssameseLanguage অসমীয়া AzerbaijaniLanguage Azərbaycan dili BelarusianLanguage Беларуская мова BengaliLanguage বাংলা BodoLanguage बड़ो BosnianLanguage bosanski BulgarianLanguage български език BurmeseLanguage မြန်မာဘာသာ CatalanLanguage català ChineseLanguage 中文 CroatianLanguage hrvatski CzechLanguage čeština DanishLanguage dansk DogriLanguage डोगरी  Devanagari script DutchLanguage Nederlands EsperantoLanguage Esperanto EstonianLanguage eesti keel FinnishLanguage suomi FrenchLanguage français GeorgianLanguage ქართული ენა GermanLanguage Deutsch GreekLanguage Νέα Ελληνικά GujaratiLanguage ગુજરાતી HausaLanguage Hausa HebrewLanguage עִבְרִית HindiLanguage हिन्दी HungarianLanguage magyar nyelv IndonesianLanguage Bahasa Indonesia IcelandicLanguage íslenska IgboLanguage Asụsụ Igbo ItalianLanguage italiano JapaneseLanguage 日本語 KannadaLanguage ಕನ್ನಡ KashmiriLanguage कॉशुर (Koshur) KazakhLanguage Қазақ тілі KhmerLanguage ភាសាខ្មែរ KonkaniLanguage कोंकणी Devangari script KoreanLanguage 한국어/조선말 LaoLanguage ພາສາລາວ LatvianLanguage latviešu valoda LithuanianLanguage lietuvių kalba MalayLanguage Bahasa Melayu MalayalamLanguage മലയാളം MarathiLanguage मराठी MongolianLanguage Монгол хэл NepaliLanguage नेपाली NorwegianLanguage norsk OriyaLanguage ଓଡ଼ିଆ OromoLanguage Afaan Oromoo PersianLanguage فارسی PolishLanguage język polski PortugueseLanguage português PunjabiLanguage ਪੰਜਾਬੀ WesternPunjabiLanguage پنجابی RomanianLanguage limba română RussianLanguage русский язык SanskritLanguage संस्कृत SlovakLanguage slovenský jazyk SloveneLanguage slovenščina SerbianLanguage Српски SinhalaLanguage සිංහල SpanishLanguage español SwahiliLanguage Kiswahili SwedishLanguage svenska TagalogLanguage Wikang Tagalog TamilLanguage தமிழ TeluguLanguage తెలుగు ThaiLanguage ภาษาไทย TigrinyaLanguage ትግርኛ TurkishLanguage Türkçe UkranianLanguage украї́нська мо́ва UrduLanguage اُردوُ UzbekLanguage O‘zbek tili VietnameseLanguage tiếng Việt XhosaLanguage isiXhosa ZuluLanguage isiZulu CategoryLanguage CategoryUnicode Languages  (last edited 2025-05-01 12:20:09 by MaciejOlko) Unable to edit the page? See the FrontPage for instructions."
  },
  {
    "url": "https://peps.python.org",
    "title": "PEP 0 – Index of Python Enhancement Proposals (PEPs) | peps.python.org",
    "content": "This PEP contains the index of all Python Enhancement Proposals,\nknown as PEPs.  PEP numbers are assigned\nby the PEP editors, and once assigned are never changed.  The\nversion control history of\nthe PEP texts represent their historical record. PEPs for specialist subjects are indexed by topic. The PEPS API is a JSON file of metadata about all the published PEPs. Read more here. The numerical index contains a table of all PEPs, ordered by number. More info in PEP 1. More info in PEP 1."
  },
  {
    "url": "https://wiki.python.org/moin/PythonBooks",
    "title": "PythonBooks - Python Wiki",
    "content": "There are a variety of books about Python.  Here's a guide to them: IntroductoryBooks (gentle overviews of the language) AdvancedBooks (for when you don't want gentle) ReferenceBooks (much information in a small space) Specific applications: GameProgrammingBooks NetworkProgrammingBooks GuiBooks JythonBooks ScientificProgrammingBooks SystemAdministrationBooks WebProgrammingBooks WindowsBooks XmlBooks ZopeBooks Books in languages other than English: UkrainianPythonBooks DutchPythonBooks FrenchPythonBooks GermanPythonBooks GreekPythonBooks HungarianPythonBooks JapanesePythonBooks KoreanPythonBooks RussianPythonBooks PersianPythonBooks PolishPythonBooks PortuguesePythonBooks ArabicPythonBooks SpanishPythonBooks When you see a book you like, don't hesitate to add your recommendation! There's also a Courses page, filled with links to video courses. External sources of information about (Python) books: PythonBooks.org - A collection of Python books featuring popularity based ranking. 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! Python Kindle & Paperback Collection - A good collection of Kindle and Paperback books on Python 3, Django, Flask, FastAPI, and Scientific Computing (NumPy, SciPy, and Pandas) There is also a list of OutOfPrintBooks. IntroductoryBooks (gentle overviews of the language) AdvancedBooks (for when you don't want gentle) ReferenceBooks (much information in a small space) GameProgrammingBooks NetworkProgrammingBooks GuiBooks JythonBooks ScientificProgrammingBooks SystemAdministrationBooks WebProgrammingBooks WindowsBooks XmlBooks ZopeBooks UkrainianPythonBooks DutchPythonBooks FrenchPythonBooks GermanPythonBooks GreekPythonBooks HungarianPythonBooks JapanesePythonBooks KoreanPythonBooks RussianPythonBooks PersianPythonBooks PolishPythonBooks PortuguesePythonBooks ArabicPythonBooks SpanishPythonBooks When you see a book you like, don't hesitate to add your recommendation! There's also a Courses page, filled with links to video courses. External sources of information about (Python) books: PythonBooks.org - A collection of Python books featuring popularity based ranking. 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! Python Kindle & Paperback Collection - A good collection of Kindle and Paperback books on Python 3, Django, Flask, FastAPI, and Scientific Computing (NumPy, SciPy, and Pandas) There is also a list of OutOfPrintBooks. There's also a Courses page, filled with links to video courses. External sources of information about (Python) books: PythonBooks.org - A collection of Python books featuring popularity based ranking. 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! Python Kindle & Paperback Collection - A good collection of Kindle and Paperback books on Python 3, Django, Flask, FastAPI, and Scientific Computing (NumPy, SciPy, and Pandas) There is also a list of OutOfPrintBooks. External sources of information about (Python) books: PythonBooks.org - A collection of Python books featuring popularity based ranking. 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! Python Kindle & Paperback Collection - A good collection of Kindle and Paperback books on Python 3, Django, Flask, FastAPI, and Scientific Computing (NumPy, SciPy, and Pandas) There is also a list of OutOfPrintBooks. PythonBooks.org - A collection of Python books featuring popularity based ranking. 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! Python Kindle & Paperback Collection - A good collection of Kindle and Paperback books on Python 3, Django, Flask, FastAPI, and Scientific Computing (NumPy, SciPy, and Pandas) There is also a list of OutOfPrintBooks. PythonBooks  (last edited 2025-06-12 13:27:03 by MatsWichmann) Unable to edit the page? See the FrontPage for instructions."
  },
  {
    "url": "https://www.python.org/doc/essays/",
    "title": "Python Documentation Index | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. In this directory I place short essays (anything from 500 to 5000\nwords) on various Python subjects.  See also a collection of presentations I have given.  See also my\nblog at blogspot.com and my\nprevious blog at\nartima.com. --Guido van Rossum Unifying types and classes in Python 2.2 (See below) Foreword for \"Programming Python\" (1st ed.) Written in 1996, this gives an overview of the early history and\nbackground of Python and some of my philosophy about software design\nand project management.  See also my foreword to the 2nd edition. Implementing Graphs An elegant and perhaps not obvious way to represent graphs using\nPython's most fundamental and versatile data types, lists and\ndictionaries. An Optimization Anecdote Required reading if you find that your Python code runs too slow. Metaclass Programming in Python 1.5 Warning: reading this document may cause your brain to explode. Built-in Package Support in Python 1.5 The most official documentation for the new package features in\nPython 1.5. Standard Exception Classes in Python 1.5 The most official documentation for the new exception features in\nPython 1.5.  (Updated for Python 1.5.2 by Barry Warsaw.) Glue It All Together With Python A position paper I wrote for and presented at the OMG-DARPA-MCC workshop on compositional software architectures in Monterey,\nCalifornia, January 6-8, 1998. What Is Python? Executive Summary A short (two paragraphs) high-level presentation of Python's virtues. Comparing Python to Other Languages Activist ammo or flame fodder?  (Note: I received lots of feedback\nwhen I posted this to comp.lang.python.  Unfortunately the feedback\nwas diverted to a separate mailbox that I didn't know I had -- when I\nfinally found it, I was a bit overwhelmed and so far have not yet\nfound the time to update the article.) Proposed Improvements to Module Cleanup A revised version of the proposal I posted to comp.lang.python on\nFeb 6, 1998.  This has been adopted in Python 1.5.1. Open Source Summit Trip Report My trip report of O'Reilly's Open Source Summit, essentially as\nposted on c.l.p.  This version published in the Linux Gazette (it's an\nexternal link), in their May 1998 issue. Debugging Reference Count Problems An edited version of a posting to c.l.p on this subject, on May 27, 1998. Computer Programming for Everybody (old) A funding proposal that was accepted by DARPA in March 1999. Computer Programming for Everybody Revised, extended version of the previous proposal. Interview in Linux Journal Not quite an essay, but a stream of consciousness penned down by a\njournalist...  More thoughts about CP4E. Interview in by Frank Willison for \"Frankly Speaking\" column Another stream of consciousness transcribed by a friendly\nlistener...  Not just on CP4E. Foreword for \"Programming Python\" (2nd ed.) The story continues... Unifying types and classes in Python 2.2 An introduction to the type/class unification effort in Python\n2.2.  Note that the unification work is officially labeled\nexperimental and is subject to change in future releases of\nPython. Parade of the PEPs To start off Developer's Day at the Python10 conference I gave a\nkeynote ending in what I dubbed \"the parade of the PEPs\". It was a\nbrief overview of all open PEPs, where I gave my highly personal and subjective opinion\nfor each PEP.  Later, I realized that this might have been of interest\nto other developers.  I didn't take notes at the conference, so below\nis a different set of comments that I created from scratch during a\nsingle two-hour sitting on March 7, 2002.  I intend to occasionally\nupdate this with new comments and new PEPs. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/diversity/",
    "title": "Diversity | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. The Python Software Foundation and the global Python community welcome\nand encourage participation by everyone. Our community is based on mutual\nrespect, tolerance, and encouragement, and we are working to help each\nother live up to these principles. We want our community to be more\ndiverse: whoever you are, and whatever your background, we welcome you. We have created this diversity statement because we believe that a\ndiverse Python community is stronger and more vibrant.  A diverse\ncommunity where people treat each other with respect has more potential\ncontributors and more sources for ideas. Although we have phrased the formal diversity statement generically to\nmake it all-inclusive, we recognize that there are specific attributes\nthat are used to discriminate against people.  In alphabetical order,\nsome of these attributes include (but are not limited to): age, culture,\nethnicity, gender identity or expression, national origin, physical or\nmental difference, politics, race, religion, sex, sexual orientation,\nsocio-economic status, and subculture.  We welcome people regardless of\nthe values of these or other attributes. The Python community welcomes people no matter what languages they are\nfluent in.  (Although core Python development is done in English.)  The\nPython community encourages the creation of user groups in all locales,\nand many of them are listed at\nhttp://wiki.python.org/moin/LocalUserGroups\nMany of these user groups also have mailing lists in the locally\npreferred language. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/lists/",
    "title": "Mailing Lists | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Here's an overview of the mail and news resources for python. For a\ncomplete listing of python.org's public mailing lists you can view them on\nMailman 3. To request a new list, send e-mail to postmaster @ python.org; please check first to make sure a similar list does not already exist. Mailing lists for users speaking languages other than\nEnglish are listed in the non-English python resources guide, which includes mailing\nlists, translated and original non-English documentation, and other\nresources. comp.lang.python is a high-volume\nUsenet open (not moderated) newsgroup for general discussions and\nquestions about Python.  You can also access it as a mailing list through\npython-list. Pretty much anything Python-related is fair game for discussion, and the group is even fairly tolerant of off-topic digressions; there have been entertaining discussions of topics such as floating point, good software design, and other programming languages such as Lisp and Forth. Most discussion on comp.lang.python is about developing with Python, not about development of the Python interpreter itself. Some of the core developers still read the list, but most of them don't. Occasionally comp.lang.python suggestions have resulted in an enhancement proposal being written, leading to a new Python feature. If you find a bug in Python, don't send it to comp.lang.python; file a bug report in the issue tracker. Items posted on the Usenet group appear on the mailing list, and vice\nversa (bidirectional gateway). Due to the mysteries of Usenet, the\norder in which items show up may vary. Rudeness and personal attacks, even in reaction to blatant flamebait, are strongly frowned upon. People may strongly disagree on an issue, but usually discussion remains civil. In case of an actual flamebait posting, you can ignore it, quietly plonk the offending poster in your killfile or mail filters, or write a sharp but still-polite response, but at all costs resist the urge to flame back. Generally comp.lang.python is a high-signal, low-noise group. It's also a high-traffic group, running at around 200 posts per day. An archive of the list is available: There are some non-English language versions of this newsgroup. The links provided here are to the Google Groups archive for each: de.comp.lang.python (German), it.comp.lang.python (Italian), pl.comp.lang.python (Polish), fr.comp.lang.python (French), and cz.comp.lang.python (Czech). comp.lang.python.announce is a\nlow-volume moderated forum for Python-related announcements. New\nmodules and programs are announced here, and it's where\nPEPs are posted to get comments from the community.\nYou'll also see announcements for conferences. This is a moderated newsgroup carrying at most perhaps 10 to 20 messages per week, so it's an easy way to be keep up-to-date on what's new in the Python world. See the comp.lang.python.announce posting guidelines for guidelines on submitting announcements. It is also available as a moderated mailing list, python-announce. Subscribing can be done via the python-announce list information page. comp.lang.python.announce is moderated by a team of people. If you need to contact them directly, e.g. to ask why a particular message was rejected, write to clpa-moderators-owner @ python.org. There are several archives for comp.lang.python.announce: The tutor mailing list is for users who want to ask questions about learning computer programming with Python. An archive of the list is available. People interested in learning about programming with Python are\nencouraged to join, as are experienced users interested in helping\nothers learn -- teaching other people is one of the best ways to learn\nmore yourself! python-dev used to be used as the main mailing list for developing Python, with practically all core developers subscribed to it. It has since been put into read-only mode. The archive is still available at Mailman 3 Python-Dev Archive. Discussion has moved on to our Discourse instance. The Core Development category has taken up the purpose of the python-dev mailing list. The python-ideas list was for discussing more speculative design ideas. Just like for python-dev, discussions has moved on to the Discourse instance in form of the Ideas category and the mailing list has been archived. The python-checkins mailing list receives an automatically generated message for each change committed to the Python Subversion tree. python-checkins makes it easy for developers to know what is happening in the repository. The volume of traffic on this list varies widely based on developer activity. The python-help mailing list is python.org's help desk. You can ask a group of knowledgeable volunteers questions about all your Python problems. You can send email to python-help by writing to help @ python.org for individual support. Mail sent there lands in the mailbox of a small group of volunteers who may reply to reasonable requests for help, depending on their area of expertise. Using it is much preferred to sending mail directly to Guido or some other individual, but less preferable than posting to comp.lang.python. In all cases, try searching the various archives first. When you ask a question, be sure to give your configuration: what hardware platform, what OS (and version), what Python version, and (when using Tkinter) what Tcl/Tk version you are using. If you're using an older Python version, try upgrading to the latest version first -- things often get better! You can't subscribe to python-help -- it is not for bystanders, only for questioners to submit questions and for helpers to receive and field them. The archives are not accessible, to protect the questioners' privacy. If you would like to help answer questions, send your qualifications to webmaster @ python.org. When you send a message to python-help, you will get an automated response. Your message is still delivered to the volunteers, and you will only receive this automated response once every approximately three months. Special Interest Groups (SIGs) are smaller communities focused on a particular topic or application such as databases, Python on macOS, etc. Every SIG has a mailing list of its own. See the SIG page for more information. SIGs vary in their success. Some, such as the XML, Database, and Distutils SIGs, have produced specifications and software that are now used throughout the Python community. Not all SIGs are as productive, though, and some sputter along for years without ever finalizing an implementation or a document. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/forums/",
    "title": "Forums | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. The official Python Community forums are hosted at discuss.python.org. If you're looking for additional forums or forums in your native language, please check out the local user groups page at the Python Wiki. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/psf/annual-report/2024/",
    "title": "2024 PSF Annual Impact Report | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. In 2024, the Python community and language continued to grow! The PSF celebrated a year of remarkable growth, with Python becoming the most popular language on GitHub and worldwide community engagement at an all-time high. We expanded our impact by welcoming our inaugural PyPI Support Specialist, Maria Ashna, the revival of the User Success and Education and Outreach Workgroups, and continued investment in grants, infrastructure, and accessibility. Weâd love for you to take a look at the 2024 Annual Impact Report that we put together to share more highlights from the year, financial reporting, and some previews of whatâs to come in the next year. Download and read the report today! The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/workshops/",
    "title": "Conferences and Workshops | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. There are quite a number of Python conferences happening all year around and in many parts of the world. Many of them are taking place yearly or even more frequent: Subsets of this list are also available on other sites: Several of these conferences record the talk sessions on video. pyvideo.org provides an index to a large set these videos. If you would like to announce a Python related event, please see Submitting an event to the Python events calendars. You can also ask on pydotorg-www at python dot org for help. If you have an event to add, please see the instructions on how to edit Python Wiki for details. If you are organizing a Python conference or thinking of organizing one, please subscribe to the Python conferences mailing list. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/sigs/",
    "title": "Python Special Interest Groups | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. There are a number of Special\nInterest Groups (SIGs) for focused collaborative efforts to develop,\nimprove, or maintain specific Python resources.  Each SIG has a\ncharter, a coordinator, a mailing list, and a directory on the Python\nwebsite.  SIG membership is  informal, defined by subscription to the SIG's\nmailing list.  Anyone can join a SIG, and participate in the\ndevelopment discussions via the SIG's mailing list. Below is the list of currently active Python SIGs, with links to\ntheir resources.  The link in the first column directs you to the\nSIG's home page: a page with more information about the SIG.  The\nlinks in the \"Info\" column direct you to the SIG's archives, and to\nthe SIG's Mailman page, which you can use to subscribe or unsubscribe\nyourself and to change your subscription options. The SIG mailing lists are managed by GNU Mailman, a web-based interface for\nmailing lists written in Python. There is also a list of retired SIGs;\nthese SIGs existed in the past but are no longer active.\nTheir archives and home pages are retained.  A retired SIG can be\nrevived, using the same criteria as for\ncreating a new SIG. There are also local Python User\nGroups, organized by region rather than by special interest. All SIG mailing lists are archived. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/community/logos/",
    "title": "The Python Logo | Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Projects and companies that use Python are encouraged to incorporate the Python\nlogo on their websites, brochures, packaging, and elsewhere to indicate suitability\nfor use with Python or implementation in Python.  Use of the \"two snakes\" logo element alone (the logo device), without the accompanying wordmark is permitted on the same terms as the combined logo. Combined logo: Logo device only: Currently, the following larger sized and vector variants of the logo are available: The font used in the logo is called \"Flux Regular\".  The PSF owns a copy\nbut we cannot distribute it, except for work on the PSF's behalf. The official Python Powered logo is available in two forms, wide and tall: This logo available in sizes 200x80,\n140x56, 100x40,\nand 70x28.   Also as\nSVG format source file. This logo available in sizes 140x182,\n100x130, 70x91,\nand 50x65.   Also as\nSVG format source file. The Python logo is a trademark of the Python Software Foundation, which is\nresponsible for defending against any damaging or confusing uses of the\ntrademark. See the PSF Trademark Usage Policy. In general, we want the logo to be used as widely as possible to indicate\nuse of Python or suitability for Python.  However, please ask first when using a derived version of the\nlogo or when in doubt. Making your own shirts and other items featuring the Python logo is OK, but please seek permission from the PSF if you are planning to sell merchandise that shows the Python logo. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://wiki.python.org/moin/",
    "title": "FrontPage - Python Wiki",
    "content": "The Python Wiki\nWelcome to the Python Wiki, a user-editable compendium of knowledge based around the Python programming language. Some pages are protected against casual editing - see WikiEditingGuidelines for more information about editing content. Python is a great object-oriented, interpreted, and interactive programming language. It is often compared (favorably of course  ) to Lisp, Tcl, Perl, Ruby, C#, Visual Basic, Visual Fox Pro, Scheme or Java... and it's much more fun. Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typing. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++ (or other languages, depending on the chosen implementation). Python is also usable as an extension language for applications written in other languages that need easy-to-use scripting or automation interfaces.  Getting Started \nEvents and Community \nSoftware \nCore Development \nUsing and Editing the Wiki \n\n \nGetting Started\n  \n \n\n Beginners Guide \nDocumentation \n\n Links to tutorials, courses and resources \nLearning materials, topic guides and links to central resources \n\n Beginner Errors \nPython Books \n\n Some common pitfalls of beginners \nBooks about Python plus reviews \n\n Asking for Help \nPython Audio Materials \n\n Questions asked by beginners, answered here \nA mixture of introductory and topical material \n\n Languages \nPython Implementations \n\n Resources written in languages other than English \nDifferent software which runs programs in the Python language \n\n See also the documentation category for all known documentation-related pages. \n\n \nEvents, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Welcome to the Python Wiki, a user-editable compendium of knowledge based around the Python programming language. Some pages are protected against casual editing - see WikiEditingGuidelines for more information about editing content. Python is a great object-oriented, interpreted, and interactive programming language. It is often compared (favorably of course  ) to Lisp, Tcl, Perl, Ruby, C#, Visual Basic, Visual Fox Pro, Scheme or Java... and it's much more fun. Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typing. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++ (or other languages, depending on the chosen implementation). Python is also usable as an extension language for applications written in other languages that need easy-to-use scripting or automation interfaces.  Getting Started \nEvents and Community \nSoftware \nCore Development \nUsing and Editing the Wiki \n\n \nGetting Started\n  \n \n\n Beginners Guide \nDocumentation \n\n Links to tutorials, courses and resources \nLearning materials, topic guides and links to central resources \n\n Beginner Errors \nPython Books \n\n Some common pitfalls of beginners \nBooks about Python plus reviews \n\n Asking for Help \nPython Audio Materials \n\n Questions asked by beginners, answered here \nA mixture of introductory and topical material \n\n Languages \nPython Implementations \n\n Resources written in languages other than English \nDifferent software which runs programs in the Python language \n\n See also the documentation category for all known documentation-related pages. \n\n \nEvents, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Python is a great object-oriented, interpreted, and interactive programming language. It is often compared (favorably of course  ) to Lisp, Tcl, Perl, Ruby, C#, Visual Basic, Visual Fox Pro, Scheme or Java... and it's much more fun. Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typing. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++ (or other languages, depending on the chosen implementation). Python is also usable as an extension language for applications written in other languages that need easy-to-use scripting or automation interfaces.  Getting Started \nEvents and Community \nSoftware \nCore Development \nUsing and Editing the Wiki \n\n \nGetting Started\n  \n \n\n Beginners Guide \nDocumentation \n\n Links to tutorials, courses and resources \nLearning materials, topic guides and links to central resources \n\n Beginner Errors \nPython Books \n\n Some common pitfalls of beginners \nBooks about Python plus reviews \n\n Asking for Help \nPython Audio Materials \n\n Questions asked by beginners, answered here \nA mixture of introductory and topical material \n\n Languages \nPython Implementations \n\n Resources written in languages other than English \nDifferent software which runs programs in the Python language \n\n See also the documentation category for all known documentation-related pages. \n\n \nEvents, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typing. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++ (or other languages, depending on the chosen implementation). Python is also usable as an extension language for applications written in other languages that need easy-to-use scripting or automation interfaces.  Getting Started \nEvents and Community \nSoftware \nCore Development \nUsing and Editing the Wiki \n\n \nGetting Started\n  \n \n\n Beginners Guide \nDocumentation \n\n Links to tutorials, courses and resources \nLearning materials, topic guides and links to central resources \n\n Beginner Errors \nPython Books \n\n Some common pitfalls of beginners \nBooks about Python plus reviews \n\n Asking for Help \nPython Audio Materials \n\n Questions asked by beginners, answered here \nA mixture of introductory and topical material \n\n Languages \nPython Implementations \n\n Resources written in languages other than English \nDifferent software which runs programs in the Python language \n\n See also the documentation category for all known documentation-related pages. \n\n \nEvents, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Getting Started Events and Community Software Core Development Using and Editing the Wiki Getting Started\n  \n \n\n Beginners Guide \nDocumentation \n\n Links to tutorials, courses and resources \nLearning materials, topic guides and links to central resources \n\n Beginner Errors \nPython Books \n\n Some common pitfalls of beginners \nBooks about Python plus reviews \n\n Asking for Help \nPython Audio Materials \n\n Questions asked by beginners, answered here \nA mixture of introductory and topical material \n\n Languages \nPython Implementations \n\n Resources written in languages other than English \nDifferent software which runs programs in the Python language \n\n See also the documentation category for all known documentation-related pages. \n\n \nEvents, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Getting Started\n  \n \n\n Beginners Guide \nDocumentation \n\n Links to tutorials, courses and resources \nLearning materials, topic guides and links to central resources \n\n Beginner Errors \nPython Books \n\n Some common pitfalls of beginners \nBooks about Python plus reviews \n\n Asking for Help \nPython Audio Materials \n\n Questions asked by beginners, answered here \nA mixture of introductory and topical material \n\n Languages \nPython Implementations \n\n Resources written in languages other than English \nDifferent software which runs programs in the Python language \n\n See also the documentation category for all known documentation-related pages. \n\n \nEvents, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Beginners Guide Documentation Links to tutorials, courses and resources Learning materials, topic guides and links to central resources Beginner Errors Python Books Some common pitfalls of beginners Books about Python plus reviews Asking for Help Python Audio Materials Questions asked by beginners, answered here A mixture of introductory and topical material Languages Python Implementations Resources written in languages other than English Different software which runs programs in the Python language See also the documentation category for all known documentation-related pages. Events, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Events, Courses, Conferences, Community\nPython Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  \nPython Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Python Discussion Forums - if you want to meet people online, ask questions or discuss new ideas Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world Python Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Python Software\n  \n \n\n Python Projects \nDevelopment Tools \n\n Information on finding software projects written in Python, including... \nManaging your code more effectively \n\n Applications \nPython Editors \n\n Ready-to-run applications which use Python \nEditing your code more effectively \n\n Useful Modules \nPublishing Python Modules \n\n Some building blocks for your own projects (including frameworks for database, GUI, Web programming) \nHow to make others aware of your own works \n\n \nPython Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Python Projects Development Tools Information on finding software projects written in Python, including... Managing your code more effectively Applications Python Editors Ready-to-run applications which use Python Editing your code more effectively Useful Modules Publishing Python Modules Some building blocks for your own projects (including frameworks for database, GUI, Web programming) How to make others aware of your own works Python Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Python Core Development Tools\n  \n \n\n The Python Web Site \nBug Tracker \n\n Maintaining the official Python online resources \nRoundup and the code review services used by the Python project \n\n Package Index \nOther Resources \n\n The infrastructure behind Python package hosting \nA list of all development process-related resources on this Wiki \n\n \nUsing this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. The Python Web Site Bug Tracker Maintaining the official Python online resources Roundup and the code review services used by the Python project Package Index Other Resources The infrastructure behind Python package hosting A list of all development process-related resources on this Wiki Using this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Using this Wiki\nThis Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. This Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. \nCreating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Creating a Wiki account\nIn order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. In order to sign up for a wiki account, please go to the Create new account form, enter your account name (using the format FirstnameLastname to avoid issues - please don't use spaces in the name) and provide a password, plus email address (for password recovery). \nEditing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Editing pages\nSince spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Since spamming and vandalism on this wiki had reached a level that required constant intervention, unfamiliar users are no longer allowed to edit pages. However all you need to do is introduce yourself to the wiki admin group to become an editor. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. If you want to edit a page and have just signed up, or find that you can no longer edit a page that you could edit before, please write to the pydotorg-www mailing list describing what you would like to edit, and we'll add you to the EditorsGroup. Please include your account name (wiki name) in this message. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Sorry for any inconvenience, but we want to keep this wiki a useful tool for the community, while at the same time preventing the wiki admins from burning out cleaning up junk. \nReporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Reporting problems\nIn case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. In case of emergency, please contact the python.org maintainers, or if experiencing difficulties, contact the pydotorg-www mailing list to say \"help\".  \nWiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Wiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Wiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. Wiki Attack in January 2013\nThe wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. The wiki was subject to an attack on January 5 2013. Since it was not clear whether user account data was stolen, all passwords were subsequently reset, so you will have to use the password recovery function to get a new password. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. See the wiki attack description page for more details. If you find problems, please report them to the pydotorg-www mailing list <pydotorg-www@python.org>. \nHTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. HTTPS access to the Wiki\nWe have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. We have enabled HTTPS access to the wiki to further enhance security and avoid having to send clear text passwords over the network in order to log in to the wikis. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. If you have not been using HTTPS links to the wiki login page, please be advised that your password may have been sniffed on the network at e.g. a conference. It is best to change it and stop using HTTP links to the wiki login page. FrontPage  (last edited 2025-05-14 15:24:44 by MarcAndreLemburg) Unable to edit the page? See the FrontPage for instructions."
  },
  {
    "url": "https://www.python.org/psf/conduct/",
    "title": "Python Software Foundation Code of Conduct - Python Software Foundation Policies",
    "content": "The Python community is made up of members from around the globe with a diverse set of skills, personalities, and experiences. It is through these differences that our community experiences great successes and continued growth. When you're working with members of the community, this Code of Conduct will help steer your interactions and keep Python a positive, successful, and growing community. Members of the Python community are open, considerate, and respectful. Behaviours that reinforce these values contribute to a positive environment, and include: Every member of our community has the right to have their identity respected. The Python community is dedicated to providing a positive experience for everyone, regardless of age, gender identity and expression, sexual orientation, disability, physical appearance, body size, ethnicity, nationality, race, or religion (or lack thereof), education, or socio-economic status. Examples of unacceptable behavior by participants include: Community members asked to stop any inappropriate behavior are expected to comply immediately. No weapons are allowed at Python Software Foundation events. Weapons include but are not limited to explosives (including fireworks), guns, and large knives such as those used for hunting or display, as well as any other item used for the purpose of causing injury or harm to others. Anyone seen in possession of one of these items will be asked to leave immediately, and will only be allowed to return without the weapon. If a participant engages in behavior that violates this code of conduct, the Python community Code of Conduct team may take any action they deem appropriate, including warning the offender or expulsion from the community and community events with no refund of event tickets. The full list of consequences for inappropriate behavior is listed in the Enforcement Procedures. Thank you for helping make this a welcoming, friendly community for everyone. This Code of Conduct applies to the following people at events hosted by the Python Software Foundation, and events hosted by projects under the PSF's fiscal sponsorship: The Code of Conduct applies in official venue event spaces, including: The Code of Conduct applies to interactions with official event accounts on social media spaces and phone applications, including: Event organizers will enforce this code throughout the event. Each event is required to provide a Code of Conduct committee that receives, evaluates, and acts on incident reports. Each event is required to provide contact information for the committee to attendees. The event Code of Conduct committee may (but is not required to) ask for advice from the Python Software Foundation Code of Conduct work group. The Python Software Foundation Code of Conduct work group can be reached by emailing conduct-wg@python.org. This Code of Conduct applies to the following online spaces: This Code of Conduct applies to the following people in official Python Software Foundation online spaces: Each online space listed above is required to provide the following information to the Python Software Foundation Code of Conduct work group: Each online space listed above is encouraged to provide the following information to community members: The Python Software Foundation Code of Conduct work group will receive and evaluate incident reports from the online communities listed above. The Python Software Foundation Code of Conduct work group will work with online community administrators/moderators to suggest actions to take in response to a report. In cases where the administrators/moderators disagree on the suggested resolution for a report, the Python Software Foundation Code of Conduct work group may choose to notify the Python Software Foundation board. If you believe that someone is violating the code of conduct, or have any other concerns, please contact a member of the Python Software Foundation Code of Conduct work group immediately. They can be reached by emailing conduct-wg@python.org Python Software Foundation Community Member Procedure For Reporting Code of Conduct Incidents Python Software Foundation Code of Conduct Working Group Enforcement Procedures This Code of Conduct is licensed under the Creative Commons Attribution-ShareAlike 3.0 Unported License. This Code of Conduct was forked from the example policy from the Geek Feminism wiki, created by the Ada Initiative and other volunteers, which is under a Creative Commons Zero license. Additional new language and modifications were created by Sage Sharp of Otter Tech. Language was incorporated from the following Codes of Conduct:"
  },
  {
    "url": "https://www.python.org/community/awards",
    "title": "Python Community Awards | Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/psf/get-involved/",
    "title": "ð Hey Community Members! | Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. More than 20 ways to get involved & stay informed! The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/psf/community-stories/",
    "title": "Community Stories | Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. People who need to install Python packages get confused a lot. That's not their fault; that's because the volunteers who maintain the packaging tools don't have enough time to get everything organized so that it's clear and easy to use. In the last few years, the PSF has gotten grants and used that money to massively improve packaging. We overhauled PyPI and we're making pip more consistent, with genuine attention to user experience. With more funding, we can finally make managing packages pleasant as programming in Python. I started using Python in my PhD for performing different simulations of rotating black holes, black hole jets and their properties. I quickly fell in love with the language and its community and that led me to become a core dev some years ago. Since I became a core dev I have worked towards making Python faster and more versatile. Although most of my work is in the parser, the compiler pipeline and the garbage collector I like to work all over the place fixing bugs and trying to spot performance improvement opportunities. Hopefully, in the following years, we can push Python forward to the future by improving its general speed, making it more compatible with other implementations and improving the multi-core experience. Although this will be a challenging path and will require drastic changes in Python itself and its C-API, I am very excited about the things to come and what awaits for the Python Language and its community :) A huge turning point in my career was a Python workshop. I programmed a bit as a kid, and took a single CS class in college, and tried to poke along doing some self-study so I could get better. And then I attended a Boston Python Workshop for Women And Their Friends http://bostonpythonworkshop.com/, led by Jessica McKellar. We worked through well-designed exercises and I got hands-on practice that helped me get through that transition, from painstakingly copying individual lines and functions into the interpreter, to thinking in terms of Python's program flow. Years later, my Python and software management skills have been invaluable. I run a small business, where I've been able to hire, train, and mentor contract workers who then go on to get full-time programming jobs. We've helped overhaul the Python Package Index, mentored and\nrecruited contributors to Zulip, helped journalists open-source their code, and more. Right now I'm leading pip's work replacing its dependency resolver, which is a game-changer for future work making Python packaging easier to deal with. People who care about Python invested in running that workshop, and it's paid off very well in my case. Investing in Python events, and the organization that supports them, is a good bet. In 2015, as I was figuring out what I wanted to do next with my career, I attended PyCon North America in Montreal. I volunteered with the GNU Mailman team to expedite the release of Mailman 3.0. At the end of the sprint, I thought, \"maybe I could charge for this.\" Later that year, I started Changeset Consulting, where I expedite long-awaited releases for open source software projects. Through Changeset, I helped the PSF finish and deploy the new PyPI, and I'm working on pip's dependency resolver overhaul and a fresh release of GNU\nAutoconf. If it weren't for the PSF, my life would be very different, and probably a lot less interesting. An important community event that the PSF produces is PyCon US, where community members get a chance to receive training, share ideas, or even be mentored. At PyCon US 2019, Sumana Harihareswara helped Brian Rutledge make his 1st contribution to Python Packaging. Months later he became a co-maintainer of Twine, the upload utility for PyPI. As of May 2020, he successfully worked with a newer contributor to finish adding PEP 484 type annotations to Twine's codebase. This will make it easier for us to keep this code bug-free in the future, which means open source maintainers can have a smooth experience sharing their code with us on PyPI! My name is Iqbal and I have been using Python for 18 years. On a professional level Python as a programming tool has given me a career, and on a personal level as an ideology has helped me make friends and given me satisfaction by giving me the opportunity to be part of something bigger than myself. As member or lead of the different conference committee and also as conference chair, I have worked hard to make sure anyone can participate and contribute, regardless of personal situation, among others: Grants program were started for those that are financially constrained, quotas were setup for first time speakers, opportunities to present talks were initiated for non-english speakers, partnership with other groups such as Women Who Code and PyLadies to bolster underrepresented women groups in the conferences. Last but not least, in the beginning I also helped introduce a Code Of Conduct based on PSF's CoC to introduce a safe and welcoming environment for everyone. At that time, it wasn't common yet to have CoCs for conferences. The PSF has done a wonderful job by taking the lead and acting as a standard bearer for us in the rest of the world to follow. Initiatives such as their grants program that helps monetarily and also gives exposure to less known events, knowledge and know-how on how to manage conferences and meetups, and most importantly an access to other people within the community to share and source out ideas have been invaluable to us. Going forward, with the new normal, supporting virtual events is definitely an important thing which the PSF can help with. A step-by-step guide on how to manage virtual events, how tos for tools and a platform to expose events to the worldwide community would be very helpful. In a world that is widening in terms of inequality where we tend to take away more and more, I am happy to be part of a community led by the PSF that continues to share and give: through code, through knowledge, through money and through friendship. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/",
    "title": "Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Cuong Do, Software Architect YouTube.com Python programmability on Algorand makes the entire development lifecycle easier and means more affordable and efficient maintenance and upgrades going forward. Read more To simplify the adoption of FHE, which involves a complex and resource-intensive technological stack, Zama developed tools that streamline the integration of FHE into applications. Since Python is the de facto standard for building machine learning (ML) applications, it was an obvious choice to create an open-source FHE library in Python. Read more Maintaining our ever-evolving Python codebase poses an intricate challenge: how do we make updates to reflect the changing rules and regulations of 200+ global markets without compromising access to the systems that our engineers and traders use on a daily basis? While an inner layer of shared business logic enables coherency in our codebase performance, it also means small regulatory changes can impact many systems.\r\n\r\nIn this article, Python Engineer John Lekberg details how we use Python type annotations to minimize the time and risk involved in manual verification. Read more Prioritizing cutting-edge speed and supporting the rapid growth of Hudson River Trading’s codebase can have unintended effects that require innovative solutions. For those working on our Python codebase, this means addressing “code tangling,” the coupling of unrelated code through unintuitive import cycles. In this article, George Farcasiu, Noah Kim, Jacob Brugh, and Jiahao Li discuss how they mitigate the cost and time burden of this issue by creating new tools to analyze and untangle dependencies efficiently. Read more See All Using Python to build a solution for instant tokenized real estate redemptions Lincoln Loop: Building a sustainable business inspired by Python’s ethos Using Python for commercial cloud backup Using Python to make unstable APIs reliable Python for Financial Machine Learning at Union Investment See All How HyperFinity Is Streamlining Its Serverless Architecture with Snowflake's Snowpark for Python Reimagining data science with Python-based operators in Einblick’s visual canvas Using Python with Gretel.ai to Generate Synthetic Location Data See All Elementary school education: Is it love or just Python? Using Python to Automate Tedious Tasks Python in the Blind Audio Tactile Mapping System See All Python for Collaborative Robots Abridging clinical conversations using Python Getting to Know Python See All Python Powered CrossCompute Report Automation for eReliability Tracker Leads to Cost and Time Savings for the American Public Power Association Saving the world with Open Data and Python Frequentis TAPtools® - Python in Air Traffic Control See All Why Python Matters for the VR Community Python for Collaborative Drug Discovery Python To Help Meteorologists Python for Scientific Data Visualization Simulating Biomolecules with Python See All Zama Concrete ML: Simplifying Homomorphic Encryption for Python Machine Learning Building Robust Codebases with Python's Type Annotations Building a Dependency Graph of Our Python Codebase Bleeding Edge Dependency Testing Using Python How We Created a Python Development Framework for Non-Developers See All Python users want to know more about Python in the wild. Tell us your story Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/arts/",
    "title": "Arts | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/business/",
    "title": "Business | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/education/",
    "title": "Education | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/engineering/",
    "title": "Engineering | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/government/",
    "title": "Government | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/scientific/",
    "title": "Scientific | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/success-stories/category/software-development/",
    "title": "Software Development | Our Success Stories | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/blogs/",
    "title": "Our Blogs | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. July 24, 2025, 1:55 p.m. This year’s PSF Board Election nomination period opens next week on Tuesday, July 29th, 2:00 pm UTC and closes on Tuesday, August 12th, 2:00 pm UTC. Who runs for the board? People who care about the Python community, who want to see it flourish and grow, and also have a …\n                    Read more More July 22, 2025 July 16, 2025 July 9, 2025 July 8, 2025 July 8, 2025 Subscribe to Python Insider via: Also check out the Discussions on Python.org Python Insider by the Python Core Team is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. Based on a work at blog.python.org. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/psf/newsletter/",
    "title": "PSF Newsletter Signup | Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Please select all the ways you would like to hear from Python Software Foundation: You can unsubscribe at any time by clicking the link in the footer of our emails. For information about our privacy practices, please visit our website. We use Mailchimp as our marketing platform. By clicking below to subscribe, you acknowledge that your information will be transferred to Mailchimp for processing. Learn more about Mailchimp's privacy practices here. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "http://pyfound.blogspot.com/",
    "title": "Python Software Foundation News",
    "content": "News from the Python Software Foundation This year’s PSF Board Election nomination period opens next week on Tuesday, July 29th, 2:00 pm UTC and closes on Tuesday, August 12th, 2:00 pm UTC. Who runs for the board? People who care about the Python community, who want to see it flourish and grow, and also have a few hours a month to attend regular meetings, serve on committees, participate in conversations, and promote the Python community. Check out the following resources to learn more about the PSF, as well as what being a part of the PSF Board entails: Not sure what UTC is for you locally? Check this UTC time converter! You can nominate yourself or someone else. We encourage you to reach out to people before you nominate them to ensure they are enthusiastic about the potential of joining the Board. To submit a nomination for yourself or someone else, use the 2025 PSF Board Election Nomination Form on our website. The nomination form opens on Tuesday, July 29th, 2:00 pm UTC and closes on Tuesday, August 12th, 2:00 pm UTC.To support potential candidates and nominators, the 2025 PSF Board Election team has created a nomination resource (embedded below). It includes tips, formatting instructions, and guidance on what to include in a nomination. The goal is to help nominees understand what to expect and ensure that all candidates are provided the same clear and consistent standards. Every PSF Voting Member (Supporting, Contributing, and Fellow) needs to affirm their membership to vote in this year’s election. You should have received an email from \"psf@psfmember.org <Python Software Foundation>\" with the subject \"[Action Required] Affirm your PSF Membership voting intention for 2025 PSF Board Election\" that contains information on how to affirm your voting status. You can see your membership record and status on your PSF Member User Information page. If you are a voting-eligible member and do not already have a login, please create an account on psfmember.org first and then email psf-elections@python.org so we can link your membership to your account. Every PSF voting-eligible Member (Supporting, Contributing, and Fellow) needs to affirm their membership to vote in this year’s election. If you wish to vote in this year’s PSF Board election, you must affirm your intention to vote no later than Tuesday, August 26th, 2:00 pm UTC. This year’s Board Election vote begins Tuesday, September 2nd, 2:00 pm UTC, and closes on Tuesday, September 16th, 2:00 pm UTC. You should have received an email from \"psf@psfmember.org <Python Software Foundation>\" with the subject \"[Action Required] Affirm your PSF Membership voting intention for 2025 PSF Board Election\" that contains information on how to affirm your voting status. If you were expecting to receive the email but have not (make sure to check your spam!), please email psf-elections@pyfound.org, and we’ll assist you. Please note: If you opted out of emails related to your membership, you did not receive this email. Log on to psfmember.org and visit your PSF Member User Information page\n to see your membership record and status. If you are a voting-eligible \nmember (active Supporting, Contributing, and Fellow members of the PSF) \nand do not already have a login, please create an account on psfmember.org\n and then email psf-elections@pyfound.org so we can link your membership\n to your account. Please ensure you have an account linked to your \nmembership so that we can have the most up-to-date contact information \nfor you in the future. You can affirm your voting intention by following the steps in our video tutorial: Section 4.2 of the PSF Bylaws requires that “Members of any membership class with voting rights must affirm each year to the corporation in writing that such member intends to be a voting member for such year.” Our motivation is to ensure that our elections can meet quorum as required by Section 3.9 of our bylaws. As our membership has grown, we have seen that an increasing number of Contributing and Fellow members with indefinite membership do not engage with our annual election, making quorum difficult to reach. An election that does not reach quorum is invalid. This would cause the whole voting process to be re-held, resulting in fewer voters and an undue amount of effort on the part of PSF Staff. If you were formerly a Managing member, your membership has been updated to Contributing as of June 25th, 2025, per last year’s Bylaw change that merged Managing and Contributing memberships. Per another recent Bylaw change that allows for simplifying the voter affirmation process by treating past voting activity as intent to continue voting, if you voted last year, you will automatically be added to the 2025 voter roll. Please note: If you removed or changed your email on psfmember.org, you may not automatically be added to this year's voter roll. You’ll get an email from OpaVote with a ballot on or right before September 2nd, and then you can vote! Check out our PSF Membership page to learn more. If you have questions about membership, nominations, or this year’s Board election, please email psf-elections@pyfound.org or join the PSF Discord for the upcoming Board Office Hours on August 12th, 9 PM UTC. You are also welcome to join the discussion about the PSF Board election on our forum."
  },
  {
    "url": "http://planetpython.org/",
    "title": "Planet Python",
    "content": "Last update: August 04, 2025 07:42 PM UTC\n\n\n\n\n\nAugust 04, 2025\nReal Python\nSkip Ahead in Loops With Python's Continue Keyword\n\nPythonâs continue keyword functions as a statement that controls the flow of a loop. It allows you to skip code in a loop for the current iteration and jump immediately to the next one. Itâs used exclusively in for and while loops, letting you control the flow of execution, bypass specific conditions, and continue processing in a structured and predictable way.\nBy the end of this tutorial, youâll understand that:\n\nExecuting continue doesnât affect the else clause of a loop.\nUsing continue incorrectly may result in skipping necessary code.\nYou canât use continue in a function or class thatâs nested in a loop.\nOn a bytecode level, continue executes the same instructions as reaching the end of a loop.\n\nArmed with this knowledge, youâll be able to confidently write loops using continue and expand your skills as a Python programmer.\n\nGet Your Code: Click here to download the free sample code that shows you how to skip ahead in loops with Pythonâs continue keyword .\n\n\n Take the Quiz: Test your knowledge with our interactive âSkip Ahead in Loops With Python's Continue Keywordâ quiz. Youâll receive a score upon completion to help you track your learning progress:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Quiz\nSkip Ahead in Loops With Python's Continue Keyword\nTest your understanding of Python's continue keyword, which allows you to skip code in a loop for the current iteration and jump immediately to the next one.\n\n\n\nPythonâs continue Keyword\nLoops are control flow statements used to perform operations repeatedly a certain number of times. In a normal loop, the loop body runs from start to finish, with the number of iterations controlled by the type of loop:\n\nA for loop runs a specific number of times and is usually used to process a collection of data.\nA while loop runs as long as a specific condition evaluates to True. When the condition evaluates to False, the loop ends.\n\nIn both cases, you may find it useful to stop the execution of the loop body and move to the next iteration. The way to do that is with the continue keyword.\nIn any loop, continue stops the code currently executing, and jumps immediately back to the top of the loop, skipping to the next iteration.\nUnderstanding Its Behavior in for and while Loops\nIn a for loop, continue moves the iterator to the next item to be processed. If no other items are available, then the loop ends.\nAssume you have the following for loop that computes the sum of all numbers in a list:\n\n\nPython\n\n\n\n\ntotal = 0\n\nfor number in range(-10, 10):\n    total += number\n\nprint(total)\n\n\nCopied!\n\n\nThis works fine, but what if you want to add only the positive numbers, ignoring all the negative ones? You can modify this loop to add only positive numbers using continue:\n\n\nPython\n\n\n\n\ntotal = 0\n\nfor number in range(-10, 10):\n    if number < 0:\n        continue\n    total += number\n\nprint(total)\n\n\nCopied!\n\n\nIn this case, since Python executes continue only when the number is less than zero, it doesnât add those numbers to total.\nYouâve seen how the continue statement works in a for loopânow youâll see it working similarly in a while loop.\nIn a while loop, continue transfers control back to the condition at the top of the loop. If that condition is True, then the loop body will run again. If itâs False, then the loop ends.\nConsider the following while loop. It leverages Pythonâs walrus operator to get user input, casts it to an int, and adds the number to a running total. The loop stops when the user enters 0:\n\n\nPython\nsum_whole_numbers.py\n\n\n\n\nprint(\"Enter one whole number per input.\")\nprint(\"Type 0 to stop and display their sum:\")\n\ntotal = 0\n\nwhile (user_int := int(input(\"+ \"))) != 0:\n    total += user_int\n\nprint(f\"{total=}\")\n\n\nCopied!\n\n\nAgain, you only want to add the positive numbers that your users enter, so you modify the loop using continue:\n\n\nPython\nsum_whole_numbers.py\n\n\n\n\nprint(\"Enter one whole number per input.\")\nprint(\"Type 0 to stop and display their sum:\")\n\ntotal = 0\n\nwhile (user_int := int(input(\"+ \"))) != 0:\n    if user_int < 0:\n        continue\n    total += user_int\n\nprint(f\"{total=}\")\n\n\nCopied!\n\n\nYou can copy the code and try it out. When you run the script, Python keeps prompting you for input until you enter 0:\nRead the full article at https://realpython.com/python-continue/ Â»\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 02:00 PM UTC\n\nQuiz: First Steps With LangChain\n\nIn this quiz, you can test your knowledge on the fundamentals of LangChain, such as creating reusable instructions with prompt templates, LangChain chains, and LangChain’s debug mode.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Build a Scalable Flask Web Project From Scratch\n\nAre you ready to revisit the essentials of building Flask applications? In this quiz, you’ll practice Flask concepts such as views, blueprints, application factory patterns, and template usage.\nCheck your understanding of Flask fundamentals by exploring concepts covered in the tutorial Build a Scalable Flask Web Project From Scratch.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Intro to Object-Oriented Programming (OOP) in Python\n\nIn this quiz, you’ll revisit the fundamentals of object-oriented programming (OOP) in Python and how to work with classes, objects, and constructors.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Introduction to Web Scraping With Python\n\nIn this quiz, you’ll practice core concepts from Introduction to Web Scraping With Python. You’ll revisit what web scraping is, when to use Beautiful Soup, and how to install and configure your environment.\nYou’ll also try out key syntax for creating BeautifulSoup objects, explore common HTML parsers, and check your understanding of tools like MechanicalSoup.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Skip Ahead in Loops With Python's Continue Keyword\n\nIn this quiz, you’ll test your understanding of\nPython’s continue statement.\nThe continue statement allows you to skip code in a loop for the current iteration,\njumping immediately to the next iteration. It’s used exclusively in for and while loops,\nallowing you to control the flow of execution, bypass specific conditions,\nand continue processing in a structured and predictable manner.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Working With Python's Built-in Exceptions\n\nIn this quiz, you’ll revisit Python’s built-in exceptions, exploring their hierarchy and how to handle them gracefully. You’ll practice distinguishing between errors and exceptions, using try...except blocks, and identifying specific exceptions like IndexError and GeneratorExit.\nBrush up your skills by reviewing the Working With Python’s Built-in Exceptions course before you start!\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Using the \"or\" Boolean Operator in Python\n\nIn this quiz, you’ll test your understanding of the Python or Operator.\nYou’ll learn how to use it in both Boolean and non-Boolean contexts,\nand understand how it can be used to solve programming problems.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nQuiz: Python Namespace Packages\n\nIn this quiz, you’ll practice your knowledge about Python’s namespace packages.\nWhat are they used for? How do you set up a namespace package? How could you create one before PEP 420? Complete this quick quiz to test your knowledge.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 04, 2025 12:00 PM UTC\n\nEuroPython Society\nEuroPython 2025 Code of Conduct Transparency Report\n\nThe 2025 version of the EuroPython conference took place both online and in person in July 2025. This was the third conference under our current Code of Conduct (CoC), and we had Code of Conduct working group members continuously available both online and in person.ReportsOver the course of the conference, the Code of Conduct team was made aware of the following issue:One person was uncomfortable with certain phrases being used in one of the poster sessions. The author was informed, and the phrases reported were removed by the author from their poster presentation promptly.Thank you the Code of Conduct team responded to the issue reported.\n\nAugust 04, 2025 07:00 AM UTC\n\nTryton News\nAnnouncing âCode to Careâ: A Hands-On Tryton Technical Workshop (Aug 15â17)\n\nCode to Care â A Hands-On Tryton Technical Workshop\nWe are excited to announce âCode to Careâ, a 3-day live hands-on workshop on Tryton ERP customization, with a special focus on GNUHealth.\n\nDates: August 15â17, 2025\nMode: Online (Live Interactive Sessions)\nFee: â¹20,000 per participant\nLanguage: English\nRegister Interest: Expression of Interest â Code to Care: Tryton x GNUHealth Customisation Workshop\n\n About the Trainer\nWith over 10 years of hands-on experience with Tryton, the trainer has successfully implemented Tryton at Indiaâs largest medical institute, managing key domains such as HR, Payroll, Procurement, and clinical modules.\nWhat Youâll Explore\n\nHow to customise the existing modules of Tryton for your systemâs needs\nHow to build new modules to support or enhance your workflows and functionalities\nDeployment and maintenance best practices\nContributing to the Tryton and GNUHealth ecosystems\n\nGiving Back\nA portion of the participation fee will be donated to the:\n\nTryton Foundation\nGNUHealth Foundation\nopenSUSE Project\n\nFurther details will be shared with the interested participants over registered email address. Register your interest at Expression of Interest â Code to Care: Tryton x GNUHealth Customisation Workshop\n1 post - 1 participant\nRead full topic\n\nAugust 04, 2025 06:00 AM UTC\n\nStÃ©phane Wirtel\nRelancer lâÃ©criture de mon livre *Introduction Ã  Python 3.13*\n\nâï¸ Ãcrire (et rÃ©Ã©crire) mon livre Introduction Ã  Python 3.13\nQuand jâai commencÃ© mon parcours en tant quâindÃ©pendant, mon objectif Ã©tait limpide : donner des formations sur Python. Expliquer comment lâutiliser, comment le comprendre, le structurer, le manipuler. Bref, transmettre avec passion tout ce que jâavais appris au fil des annÃ©es.\nÃ cette Ã©poque, Python 2 Ã©tait encore bien prÃ©sent, mais Python 3 commenÃ§ait Ã  faire doucement son chemin. En 2014, on utilisait la version 3.4, et dÃ¨s 2015, la 3.5 Ã©tait disponible.\n\nAugust 04, 2025 12:00 AM UTC\n\nArmin Ronacher\nIn Support Of Shitty Types\n\nYou probably know that I love Rust and TypeScript, and I’m a big proponent of\ngood typing systems.  One of the reasons I find them useful is that they enable\nautocomplete, which is generally a good feature.  Having a well-integrated type\nsystem that makes sense and gives you optimization potential for memory layouts\nis generally a good idea.\nFrom that, you’d naturally think this would also be great for agentic coding\ntools.  There’s clearly some benefit to it.  If you have an agent write\nTypeScript and the agent adds types, it performs well.  I don’t know if it\noutperforms raw JavaScript, but at the very least it doesn’t seem to do any\nharm.\nBut most agentic tools don’t have access to an LSP (language server protocol).\nMy experiments with agentic coding tools that do have LSP access (with type\ninformation available) haven’t meaningfully benefited from it.  The LSP\nprotocol slows things down and pollutes the context significantly.  Also, the\nmodels haven’t been trained sufficiently to understand how to work with this\ninformation.  Just getting a type check failure from the compiler in text\nform yields better results.\nWhat you end up with is an agent coding loop that, without type checks enabled,\nresults in the agent making forward progress by writing code and putting types\nsomewhere.  As long as this compiles to some version of JavaScript (if you use\nBun, much of it ends up type-erased), it creates working code.  And from there\nit continues.  But that’s bad progressâit’s the type of progress where it\nneeds to come back after and clean up the types.\nIt’s curious because types are obviously being written but they’re largely\nbeing ignored.  If you do put the type check into the loop, my tests actually\nshowed worse performance.  That’s because the agent manages to get the code\nrunning, and only after it’s done does it run the type check.  Only then, maybe\nat a much later point, does it realize it made type errors.  Then it starts\nfixing them, maybe goes in a loop, and wastes a ton of context.  If you make it\ndo the type checks after every single edit, you end up eating even more into the\ncontext.\nThis gets really bad when the types themselves are incredibly complicated and\nnon-obvious.  TypeScript has arcane expression functionality, and some\nlibraries go overboard with complex constructs (e.g., conditional\ntypes).\nLLMs have little clue how to read any of this.  For instance, if you give it\naccess to the .d.ts files from TanStack Router and the forward declaration\nstuff it uses for the router system to work properly, it doesn’t understand any\nof it.  It guesses, and sometimes guesses badly.  It’s utterly confused.  When\nit runs into type errors, it performs all kinds of manipulations, none of which\nare helpful.\nPython typing has an even worse problem, because there we have to work with a\nvery complicated ecosystem where different type checkers cannot even agree on\nhow type checking should work.  That means that the LLM, at least from my\ntesting, is not even fully capable of understanding how to resolve type check\nerrors from tools which are not from mypy.  It’s not universally bad, but if\nyou actually end up with a complex type checking error that you cannot resolve\nyourself, it is shocking how the LLM is also often not able to fully figure out\nwhat’s going on, or at least needs multiple attempts.\nAs a shining example of types adding a lot of value we have Go.  Go’s types are\nmuch less expressive and very structural.  Things conform to interfaces purely\nby having certain methods.  The LLM does not need to understand much to\ncomprehend that.  Also, the types that Go has are rather strictly enforced.  If\nthey are wrong, it won’t compile.  Because Go has a much simpler type system\nthat doesn’t support complicated constructs, it works much betterâboth for LLMs\nto understand the code they produce and for the LLM to understand real-world\nlibraries you might give to an LLM. \nI don’t really know what to do with this, but these behaviors suggest there’s\na lot more value in best-effort type systems or type hints like JSDoc.  Because\nat least as far as the LLM is concerned, it doesn’t need to fully understand\nthe types, it just needs to have a rough understanding of what type some object\nprobably is.  For the LLM it’s more important that the type name in the error\nmessage aligns with the type name in source.\nI think it’s an interesting question whether this behavior of LLMs today will\ninfluence future language design.  I don’t know if it will, but I think it\ngives a lot of credence to some of the decisions that led to languages like Go\nand Java.  As critical as I have been in the past about their rather simple\napproaches to problems and having a design that maybe doesn’t hold developers\nin a particularly high regard, I now think that they actually are measurably in\na very good spot.  There is more elegance to their design than I gave it\ncredit for.\n\nAugust 04, 2025 12:00 AM UTC\n\nAugust 03, 2025\nThe Python Coding Stack\nFlashy, Fancy Shortcuts Aren't Always Suitable [Python Shorts]\n\nIn the previous post, I talked about Python's or keyword and how it doesn't behave the way you may expect it to. Here's the link to that article if you missed it: Do You Really Know How `or` And `and` Work in Python?One place you may see the or expression used is when dealing with the infamous mutable default value problem in functions–see the second section in Python Quirks? Party Tricks? Peculiarities Revealed… if you're not familiar with this Python banana skin. It seems some LLM models are keen to suggest this option, too.To keep this post brief, I'll assume you're familiar with both how or works and the mutable default value issue.Let's see how the or keyword is used to solve the mutable default value problem:All code blocks are available in text format at the end of this article • #1 • The code images used in this article are created using Snappify. [Affiliate link]I'm using this function for demonstration purposes. Note that the function mutates the list and returns it.But let's look at the part that's more relevant for this post. This function uses an empty list if no value is passed to the shopping_list parameter. Since you can't use an empty list as the default value, you use None as the default value.The or expression then does all the hard work:If you don't pass a list to the shopping_list parameter when you call add_to_shopping_list(), the function uses the None default value for shopping_list. And since None is falsy, the or expression evaluates to its second operand, the empty list [].However, if you already have a list with items in it and you pass it to the shopping_list parameter when you call add_to_shopping_list(), then this list is the one used within the function.Let's try it out to confirm this is how the function works.First, try with an existing list:#2You create a food_groceries list containing a few items. You then pass it to add_to_shopping_list(). You display output and food_groceries—these are names referring to the same list. They're not different lists. You can refresh your memory about Python's pass-by-assignment in functions here: If You Haven't Got A Clue What \"Pass By Value\" or \"Pass By Reference\" mean, read on…This is what you expect. Great.How about using the default value now:#3There's no second argument when you call add_to_shopping_list() this time. Therefore, the function creates an empty list and appends \"Washing Up Liquid\" to it.Again, this is the behaviour you expect.So, using the or expression to deal with the mutable default value in functions is cool, right?Subscribe nowNow Consider This…Have a look at this scenario:#4This scenario seems similar to the first one earlier, the one with the food_groceries. You create a list called clothing_items and you then pass it to the add_to_shopping_list() function.But now, although output shows the expected result, the list clothing_items is still empty.Here's what's happening:The list clothing_items is an empty list.You pass it to add_to_shopping_list(), so shopping_list now refers to the same list as clothing_items within the function.It's now the or expression's turn within the function, shopping_list = shopping_list or []. But the identifier (name) shopping_list now refers to the same list that clothing_items refers to. This is an empty list. Therefore, it's falsy……and since the first operand of the or expression is falsy, the expression evaluates to the second operand, which is also an empty list.But—and this is the key point—the or expression creates a new empty list rather than using the existing empty list (the one that clothing_items refers to).So, you still have an empty list within your function, but it's not the same one you're expecting.That's why output and clothing_items are different now. They're different lists. This didn't happen in your first example when you used food_groceries. In that example, output and food_groceries both referred to the same list.Support The Python Coding StackThe standard way of solving the mutable default value problem doesn't face this issue:#5This textbook approach to the mutable default value issue is less fancy, perhaps, but it works without surprises. It's also more readable, and that's important in Python!Do you want to try video courses designed and delivered in the same style as these posts? You can get a free trial at The Python Coding Place, and you also get access to a members-only forum.Try Out The Python Coding PlacePhoto by Dan Cristian Pădureț: https://www.pexels.com/photo/photo-of-multicolored-abstract-painting-1193743/Code in this article uses Python 3.13The code images used in this article are created using Snappify. [Affiliate link]You can also support this publication by making a one-off contribution of any amount you wish.Support The Python Coding StackFor more Python resources, you can also visit Real Python—you may even stumble on one of my own articles or courses there!Also, are you interested in technical writing? You’d like to make your own writing more narrative, more engaging, more memorable? Have a look at Breaking the Rules.And you can find out more about me at stephengruppetta.comFurther reading related to this article’s topic:Do You Really Know How `or` And `and` Work in Python?Python Quirks? Party Tricks? Peculiarities RevealedIf You Haven't Got A Clue What \"Pass By Value\" or \"Pass By Reference\" mean, read onAppendix: Code BlocksCode Block #1def add_to_shopping_list(item, shopping_list=None):\n    shopping_list = shopping_list or []\n    shopping_list.append(item)\n    return shopping_list\nCode Block #2food_groceries = [\"Milk\", \"Eggs\", \"Bread\"]\noutput = add_to_shopping_list(\"Chocolate\", food_groceries)\n\noutput\n# ['Milk', 'Eggs', 'Bread', 'Chocolate']\nfood_groceries\n# ['Milk', 'Eggs', 'Bread', 'Chocolate']\nCode Block #3household_items = add_to_shopping_list(\"Washing Up Liquid\")\nhousehold_items\n# ['Washing Up Liquid']\nCode Block #4clothing_items = []\noutput = add_to_shopping_list(\"Shirt\", clothing_items)\n\noutput\n# ['Shirt']\nclothing_items\n# []\nCode Block #5def add_to_shopping_list(item, shopping_list=None):\n    if shopping_list is None:\n        shopping_list = []\n    shopping_list.append(item)\n    return shopping_list\n\nclothing_items = []\noutput = add_to_shopping_list(\"Shirt\", clothing_items)\n\noutput\n# ['Shirt']\nclothing_items\n# ['Shirt']\nFor more Python resources, you can also visit Real Python—you may even stumble on one of my own articles or courses there!Also, are you interested in technical writing? You’d like to make your own writing more narrative, more engaging, more memorable? Have a look at Breaking the Rules.And you can find out more about me at stephengruppetta.com\n\nAugust 03, 2025 07:54 PM UTC\n\nDjango Weblog\nDSF member of the month - Jake Howard\n\nFor July 2025, we welcome Jake Howard as our DSF member of the month! â­\nJake actively shares his knowledge through blog posts and community talks. He is part of the Security Team Working Group and he created the DEP 14. He has been a DSF member since June 2024. \nYou can learn more about Jake by visiting Jake's website and his GitHub Profile.\nLetâs spend some time getting to know Jake better!\nCan you tell us a little about yourself (hobbies, education, etc)\nIâm Jake. Iâm a Senior Systems Engineer at Torchbox, where Iâve been for a little over 4 years. âSystems Engineerâ is a fairly loaded title, and means different things to different people. I like to describe it as doing everything technical to do with Software Engineering which isnât Programming (Sysadmin, Devops, IT support, Security, Networking), but also doing a fair bit of Programming.\nMost of my hobbies revolve around technology. Iâm an avid self-hoster, running applications on servers both in âthe cloudâ and in my house. Thereâs been a server of some kind in my house for the last 10 years. Iâm generally quite a private person, so I like to know whatâs happening to my data. Since I started working remotely at the start of the 2020 pandemic, Iâve channeled some of this passion into posts on my website, with posts about all manner of things Iâve done from self-hosting to general software engineering.\nAway from my desk (sort of), Iâm a volunteer for Student Robotics, inspiring college students into STEM through competitive robotics (no, not quite like Robot Wars). In school, I was always the quiet one, but now I seem completely at home with public speaking, commentary and otherwise being in front of large crowds of people. I wish I knew the secret - Iâd make millions!\nMy GitHub is also pretty active, with contributions all over the place (OpenZFS, Nebula VPN, Gitea, Plausible Analytics, OpenCV, Ansibleâ¦).\nIâm curious, where your nickname âRealOrangeOneâ comes from?\nBecause a lot of life happens online (especially in the last 5 years), many people havenât even seen pictures of me, let alone met me in person. I am not in fact a talking piece of fruit. For a while, I tried to stay anonymous, avoiding photos or videos of me on the internet. But since I discovered I enjoy public speaking, Iâve sort of given up on that (for the most part).\nBy now, Iâm sure many people have speak. But, for those who donât know: I, like my father before me, am ginger ð¥ (the hair colour, not the plant).\nThe exact specifics of how being ginger lead to âTheOrangeOneâ are sadly lost to time. Iâve owned theorangeone.net for well over a decade at this point. Unfortunately, itâs not a particularly original nickname, and I have to be fast to claim it when signing up to new services. In some places (where I wasnât fast enough) Iâm forced to sub out âTheâ for âRealâ, which has lead to some confusions, but not too many. Canonically, I prefer âTheOrangeOneâ, but as we all know, naming things is hard.\nHow did you start using Django?\nIâve been using Django since around the 1.8 release. My job at the time was at a Django development agency, so it was the first real Python framework Iâd used. The first few weeks there was my first exposure to Django, pip, package management and collaborative software engineering - it was quite a lot to learn at once. I didnât realise it at the time, but I was working working as a junior alongside a couple fairly well-known names in the Django community like Tom Christie (DRF, Starlette, HTTPX) and Jamie Matthews (django-readers, django-zen-queries). We mostly built single-page apps with React, so I learned Django and Django Rest Framework at the same time, which means I now often have to look back at the docs to remember how forms and templates work.\nAs for contributing to Django, that came much later. My first commit to Django was in May 2024. Having used Django for a while, and written plenty of packages, Iâd never stopped to look at how upstream was developed. Around the time of DEP 14 kicking off, I needed to look a bit more at the inner workings of the Django project, to learn what was in store for me. When scrolling through Trac tickets, I found an interesting looking ticket, and got to work. At the time of writing, Iâve now closed 9 Trac tickets across 12 PRs, and some pretty cool features (simple block tags, better Accept header parsing, performance improvements to the URL router) now have my name on them (metaphorically speaking).\nI wouldnât call myself an âactiveâ contributor, but I try and keep an eye on the tickets and forum threads which interest me the most, and chime in when I can.\nWhat other framework do you know and if there is anything you would like to have in Django if you had magical powers?\nSince itâs the first framework I learned, and so far has done everything I need, Iâve mostly used Django. For a few smaller services, Iâve leaned more towards Starlette and AIOHTTP, but for anything even slightly large Iâve just used Django - since Iâd end up recreating much of Django using the smaller frameworks anyway. A better (likely official) path for single-file Django (ie without some of the magic module handling) might help draw a few more people in and fill a few more of these âmicro-serviceâ style use-cases.\nIâm a class-based views person - I like the encapsulation and easy extension of base views. As with any opinion on the internet, Iâm sure many people disagree with me, but to me itâs just personal preference. Iâm still surprised itâs a pattern not seen by many other Python frameworks.\nFollowing in the footsteps of Python, I often wonder if Django could also do with some dead battery removal (or at least extracting into separate packages). Django is a pretty big framework, and whilst the contrib apps are intended to be separate, they also require hooks and assumptions in other areas of the codebase. I might be wrong (it happens quite a lot), but I suspect some of those packages would be better suited externally, perhaps improving some developer momentum - and lightening the load for the Fellows. Djangoâs sitemap and syndication (RSS) frameworks are 2 places I wish would get some more love.\nOutside of Python, Iâm a big fan of Rust (as cliche as it may be). Whilst Rust is a popular language, there isnât really a âDjangoâ like (batteries included) framework - itâs all composing the pieces you need yourself. However, that doesnât stop people being very productive with it. As a result, most of the frameworks have very generic interfaces, letting developers pass state around as needed, rather than trying to do everything themselves. Outside of the obvious static typing debate (which Iâm in favour of), Iâd love to see Django embrace some dependencies, especially if they bring some performance improvements. It may end up being a bad idea, but it might also help those who want to use Djangoâs modules outside of Django.\nMany years ago, I tried to be a polyglot - switching between different programming languages (and frameworks) to find new ways of working and match the problem to the correct solution. Now, Iâve settled mostly on Python and Rust. They fit my needs well, Iâm very productive in them, and between the 2 thereâs not much they canât handle. Given my background, and the fact most sysadmin-y tools are written in it, Iâm really not a fan of Go.\nWhat projects are you working on now?\nOver time, Iâve slowly stepped back from having big side projects - being a new dad sure takes up time and energy. Large projects ended up feeling too much like work outside of work, and I end up either getting distracted or bored. After work, I want to do something fun, not that seems like yet another job. Iâm the kind of person who gets the sudden urge to research something interesting for an evening, dive in, then not think about it again for several weeks. Itâs not the most productive way of doing things, which is why my posts are all over the place, but it doesnât feel much like work for me - I lean heavily on what interests me at any time to drive what I want to do.\nWith that said, Iâm currently in the process of rebuilding my website. Of course, both the current and new versions are built on Django, but the new build should be easier to maintain, faster, and hopefully wonât need rewriting again in just a couple years. Most of my other projects have been small tools to make my home server that bit nicer.\nProfessionally, Iâm not really a developer anymore. As a sysadmin (ish), much of my day-to-day doesnât involve much programming. I spend much more of my time deploying, monitoring and administering Django applications than I do writing them. My main project at the moment is helping port a large Java / JS deployment over to Django and Wagtail, running on Kubernetes with some very high and interesting stability and scaling requirements. Since most of my professional live has been at software agencies, Iâve tended to bounce between different projects, rather than sitting on a single one. So Iâm also supporting on a few other smaller projects as and when Iâm needed.\nWhich Django libraries are your favorite (core or 3rd party)?\ndjango-tasks, of course!\nâ¦\nOh right, a serious answerâ¦\nI have to say, one of the most underrated modules in Django is django.utils. Itâs not as glamourous as the ORM, forms or cache, but itâs a treasure trove of useful methods. I personally always like looking at the internal helper functions large frameworks use - see the problems theyâve had to solve time and time again. Whilst thereâs not the same stability guarantees, Iâve definitely been helped out on a few occasions by some undocumented functions.\nIn that theme, Iâm a fan of libraries which do one thing and do it well. I quite like small libraries which aim to solve a problem. Thereâs definitely a line before that becomes a problem (anyone remember left-pad?), but libraries which scope creep are often harder to work with than the more narrow-scoped ones, whilst the smaller ones just keep on working and making my life easier. For example, django-environ makes reading and parsing environment variables into settings really easy and clean, and django-decorator-include helps including other urlpatterns whilst wrapping them in a decorator - particularly helpful for 3rd-party packageâs URLs.\nFinally, Iâve got a real soft-spot for whitenoise (and ServeStatic for ASGI users). Djangoâs documentation deters people pretty hard from serving media and static files using Django - and rightly so in performance-critical environments. However, for most people, having to additionally maintain (and secure) nginx is more maintenance than necessary. whitenoise serves static files using Django directly, without any extra configuration, whilst also pre-compressing files for a nice performance boost. To me, itâs such a universally-useful library, Iâd love to see it it included in Django itself someday.\nIâll throw a bonus shout out for granian, a new (ish) WSGI / ASGI server written in Rust. gunicorn has a near monopoly on running Python apps in production, especially in the WSGI space, so itâs nice to see a newcomer. granian isnât always faster, but doing the HTTP handling in Rust (and using popular libraries to do it) can improve stability and throughput, without holding the GIL. Iâve not run anything in production with it yet, but Iâve been using it on personal projects for almost a year without issue.\nWhat are the top three things in Django that you like?\nContrary to what Iâve already said, I actually like Djangoâs batteries. Sure, thereâs quite a few âdeadâ ones in need of some cleaning up and TLC, but having most of what I need already installed makes me far more productive. I donât need to think about how to render my form on the page, save the results as a model, or properly handle errors - everything âjust worksâ, and works together. Sure, batteries have their downsides - it makes swapping them out rather difficult, but Iâd rather ship my feature sooner than compare the trade-offs of different ORMs. The auto-reloading in django-tasks is only around 8 lines of code thanks to django.utils.autoreload being so easy to hook in to.\nSecondly: Forms, but not for the reasons you might think. Most forms are created to take submissions from the user, validate them, then probably save them to a model. However, theyâre great as general data validation. Iâve written plenty of views with complex querystring requirements, and leaning on forms to validate them saves a lot of boilerplate code. Sure, pydantic might be a bit faster and have more features, but given Iâm already productive with django.forms, and itâs already installed and well understood by other developers in my team, I donât feel the need to reach for something else.\nFinally, I wouldnât say itâs quite a âfavouriteâ, and itâs well-known as being far-from-perfect, but Iâve got a real soft-spot for the Django Admin. It lets me focus on building the core of an application, rather than the internal interface - particularly when there are no strong requirements for it, or itâs only going to be used by me and a few others. Since itâs a fair raw view of the database by default, Iâve definitely been bitten by some less-than-restrictive permissions, but thereâs generally all the hooks I need. I donât like building frontends, so only needing to build 1 rather than 2 makes me a lot happier, especially if it comes with authentication, permissions, read-only views and a dark mode ð!\nHow did you join the security team?\nIâd love to say itâs an interesting story, stroking my ego that I saved the day. But the reality is, as usual, far less glamorous.\nAs an engineer, Iâve tended towards 2 specialties: Security and Performance, which usually go hand-in-hand. In early 2023, I was invited to join the Wagtail CMS Security team after reporting and subsequently helping fix a memory exhaustion issue. I was already involved in all things security at Torchbox, especially our ISO-27001 certification, so I was already known when I submitted a vulnerability report.\nThibaud mentioned to me late last year that the project potentially looking for new members of the security team, to help with resourcing and some potential process improvements within the foundation. I naturally jumped at the opportunity - since the team is generally closed to new members and âfully-staffedâ. After a few gentle reminders (heâs a busy guy), I received a message from Sarah formally inviting me in March.\nSince then, Iâve tried to review every report which came through, and helped author a few patches. A few reports even had to be raised upstream with Pythonâs Security Response Team (PSRT). Itâs been an interesting experience, and Iâm looking forward to seeing how the team developers over the coming years.\nIâm aware that you have created DEP 14 on the Background Workers, how the work is going so far? Do you need support from the community on anything?\nDEP 14 (the proposal to add a native background workers API to Django) has been a really interesting journey. Iâm beyond humbled to see the community interest behind it. When I started down this road, Iâd only intended to start the conversations and help rally the community interest. Since then, and 6000 lines of code later, Iâm mostly single-handedly writing a database-backed production-grade task system.\nRight now, weâre at a bit of a cross-roads. Many of the foundational parts work, relatively well. The difficulty comes with the more complex features: Retries, dependencies, robust execution. Building a task system is easy - building a reliable one people want to actually use is incredibly difficult. If anyone out there is interested in getting involved, please do! Report issues, fix bugs, contribute to design discussions. Most of the APIs are based on what I think looks sensible. Software this large, pivotal and complex canât be built in isolation - so it needs a diverse audience to ensure we (I) make the right decisions, and design an API people actually want to use that will last and scale for years to come.\nThe next challenge on my list to tackle is timeouts - a highly requested feature. It sounds simple, but the reality is far from it. Many of those challenges sparked the topic of my upcoming PyCon UK talk later this year.\nDjango is celebrating its 20th anniversary this month. Any nice story to share?\nMy personal highlight was DjangoCon Europe 2024 - my first DjangoCon. I ended up bringing the stereotypically grey British weather with me, but I had a great week chatting Django with some interesting people, and putting faces to the names and handles Iâd seen online. After the talk announcing DEP 14 and background tasks, I was inundated with people voicing their support - many wondering how itâd taken this long.\nBut personally, Iâm more interested in whatâs to come. Of course, thereâs django-tasks, but the next sets of releases are shaping up to be pretty interesting. Over the last 3-4 years or so, Iâve personally noticed a bit of a resurgence in peopleâs appetites for change in Django. The 6.x Steering Council have a lot of interesting ideas, and clearly the community agree. People are happy with what Django can do now, but want to bring it a little more up-to-date - and are happy to put in the work to do it. Only a few weeks ago, django-csp was included in core, making it easier to make more secure applications. Iâm sure thatâs just the start. The fact people are still keen on working on a framework which just celebrated 20 years shows it must be doing something right!\nIs there anything else youâd like to say?\nIâd like to thank whoever nominated me to be a DSF member in the first place. To this date, I have no idea who you are.\nBeyond that, Iâm just looking forward to seeing what comes of Django, and Python in general over the next few years.\n\nThank you for doing the interview, Jake !\n\nAugust 03, 2025 01:20 PM UTC\n\nAugust 01, 2025\nReal Python\nThe Real Python Podcast â Episode #259: Design Patterns That Don't Translate to Python\n\nDo the design patterns learned in other programming languages translate to coding in Python? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder's Weekly articles and projects.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]\n\nAugust 01, 2025 12:00 PM UTC\n\nZero to Mastery\n[July 2025] Python Monthly Newsletter ð\n\n68th issue of Andrei Neagoie's must-read monthly Python Newsletter: Useless Design Patterns, Django turns 20, 330Ã faster Python, and much more. Read the full newsletter to get up-to-date with everything you need to know from last month.\n\nAugust 01, 2025 10:00 AM UTC\n\nWingware\nWing Python IDE Version 11.0.3 - August 1, 2025\n\nWing Python IDE version 11.0.3 has been released.  It improves Python code analysis,\nfixes problems debugging Django templates, fixes refactoring when the target file\nis in a hidden directory, and makes a number of other minor improvements.\nDownloads\nBe sure to Check for Updates in Wing's Help menu after downloading, to make\nsure that you have the latest hot fixes.\nWing Pro 11.0.3\nWing Personal 11.0.3\nWing 101 11.0.3\nWing 10 and earlier versions are not affected by installation of Wing 11 and\nmay be installed and used independently. However, project files for Wing 10\nand earlier are converted when opened by Wing 11 and should be saved under a\nnew name, since Wing 11 projects cannot be opened by older versions of Wing.\n New in Wing 11Improved AI Assisted DevelopmentWing 11 improves the user interface for AI assisted development by introducing two separate\ntools AI Coder and AI Chat. AI Coder can be used to write, redesign, or extend code\nin the current editor. AI Chat can be used to ask about code or iterate in creating a\ndesign or new code without directly modifying the code in an editor.\nWing 11's AI assisted development features now support not just OpenAI but also Claude, Grok,\nGemini, Perplexity, Mistral, Deepseek, and any other OpenAI completions API compatible AI provider.\nThis release also improves setting up AI request context, so that both automatically and\nmanually selected and described context items may be paired with an AI request. AI request\ncontexts can now be stored, optionally so they are shared by all projects, and may be used\nindependently with different AI features.\nAI requests can now also be stored in the current project or shared with all projects, and Wing\ncomes preconfigured with a set of commonly used requests. In addition to changing code in the\ncurrent editor, stored requests may create a new untitled file or run instead in AI Chat. Wing\n11 also introduces options for changing code within an editor, including replacing code,\ncommenting out code, or starting a diff/merge session to either accept or reject changes.\nWing 11 also supports using AI to generate commit messages based on the changes being committed\nto a revision control system.\nYou can now also configure multiple AI providers for easier access to different models.\nFor details see AI Assisted Development under Wing Manual in Wing 11's Help menu.\nPackage Management with uv Wing Pro 11 adds support for the uv package manager in the New Project dialog and the\nPackages tool.\nFor details see Project Manager > Creating Projects > Creating Python Environments and Package\nManager > Package Management with uv under Wing Manual in Wing 11's Help menu.\nImproved Python Code AnalysisWing 11 makes substantial improvements to Python code analysis, with better support for\nliterals such as dicts and sets, parametrized type aliases, typing.Self, type of\nvariables on the def or class line that declares them, generic classes with\n[...], __all__ in *.pyi files, subscripts in typing.Type and similar, type\naliases, type hints in strings, type[...] and tuple[...],\n@functools.cached_property, base classes found also in .pyi files, and\ntyping.Literal[...].\nUpdated LocalizationsWing 11 updates the German, French, and Russian localizations, and introduces a new experimental\nAI-generated Spanish localization. The Spanish localization and the new AI-generated strings in the\nFrench and Russian localizations may be accessed with the new User Interface > Include AI\nTranslated Strings preference.\nImproved diff/mergeWing Pro 11 adds floating buttons directly between the editors to make navigating differences\nand merging easier, allows undoing previously merged changes, and does a better job managing\nscratch buffers, scroll locking, and sizing of merged ranges.\nFor details see Difference and Merge under Wing Manual in Wing 11's Help menu.\nOther Minor Features and ImprovementsWing 11 also improves the custom key binding assignment user interface, adds a Files >\nAuto-Save Files When Wing Loses Focus preference, warns immediately when opening a project with\nan invalid Python Executable configuration, allows clearing recent menus, expands the set of\navailable special environment variables for project configuration, and makes a number of other\nbug fixes and usability improvements.\nChanges and IncompatibilitiesSince Wing 11 replaced the AI tool with AI Coder and AI Chat, and AI\nconfiguration is completely different than in Wing 10, you will need to reconfigure your\nAI integration manually in Wing 11. This is done with Manage AI Providers in the\nAI menu. After adding the first provider configuration, Wing will set that provider as\nthe default. You can switch between providers with Switch to Provider in the AI menu.\nIf you have questions, please don't hesitate to contact us at support@wingware.com.\n\nAugust 01, 2025 01:00 AM UTC\n\nMatt Layman\nPython and AI workflow with LangGraph\n\nIn this stream, I worked on a personal AI workflow that I’m building using LangGraph. I discussed human-in-the-loop and how to bring a person into the workflow process.\n\nAugust 01, 2025 12:00 AM UTC\n\nHoloViz\nPlotting made easy with hvPlot: 0.12 release\n\n\n\nAugust 01, 2025 12:00 AM UTC\n\nmeejah.ca\nShWiM: peer-to-peer terminal sharing\n\nSHell WIth Me combines magic-wormhole and tty-share for e2ee, p2p terminal sharing\n\nAugust 01, 2025 12:00 AM UTC\n\nJuly 31, 2025\nPython Morsels\nNested functions in Python\n\nFunctions in Python can be defined within another function.\n\n\n\nTable of contents\n\nA function defined within a function\nA function returned from another function\nThe enclosing scope\nClosures with nested functions\nWhy nest functions within functions?\nDecorators involve nested functions\nNested functions are possible in Python\n\n\n\n\nA function defined within a function\nPython's functions can be defined pretty much anywhere.\nYou can even define a function inside a function:\ndef greet_me(name=\"friend\"):\n    def greet():\n        print(\"Hello\", name)\n    greet()\n\nWhen we call this greet_me function, it defines a greet a function and then calls that function:\n>>> greet_me()\nHello friend\n\nNote that the inner function is allowed to use the name from the outer function.\nA function returned from another function\nInstead of calling our inner â¦\n\nRead the full article: https://www.pythonmorsels.com/nested-functions/\n\nJuly 31, 2025 03:30 PM UTC\n\nDjango Weblog\nDjangonaut Space is looking for contributors to be mentors\n\nHello Django ð Universe!\nð°ï¸â This is Djangonaut Space phoning home about Session 5! We're recruiting technical mentors (Navigators) to join our next ðstellarð mission.\nð©âð We are looking for people who regularly contribute to Django or a Django related package, that want to mentor others. Our next session will be Oct-Nov.\nð Come join us and be a cosmic contributor! Express your interest to be a mentor here.\nð Want to learn more about what it means to be a Navigator:\n\nHere's a high-level overview of the role\nHere's the workbook each Navigator is provided\n\nð¤ Interested people will have to complete a 30 minute meet & greet type interview with organizers.\nâ If you're interested in applying to be a Djangonaut, applications will open and close in September (dates to be determined). The latest information will be posted on our site, djangonaut.space. Please follow our social media accounts or subscribe to our newsletter for announcements.\nâï¸ We'll see you around the cosmos!\nDjangonaut Space session organizers\n\nJuly 31, 2025 02:34 PM UTC\n\nPyCharm\n\n\n\nThe Bazel Plugin for IntelliJ IDEA Is Now Generally Available!\nAfter much anticipation, we are finally ready to announce the general availability (GA) of the new Bazel plugin for IntelliJ IDEA, PyCharm, and GoLand â now developed by JetBrains! After months of focused development and valuable feedback from our EAP users, we’re officially launching our revamped Bazel experience.\nWhile we’ve been shipping updates regularly, the leap to our 2025.2 GA release marks a major milestone. Even though our primary focus for this release was on creating the best experience we can for Java, Kotlin, and Scala developers, we also brought support for the Python and Go ecosystems, and we will continue to maintain and improve it in the coming releases.\nIf you’re migrating from the previous plugin originally released by Google, you’ll notice a more straightforward workflow that aligns with the standard JetBrains IDE experience you expect from other build tool integrations such as Maven and Gradle. Now, let’s dive into what’s new!\nKey features in 2025.2\n\nBazel Query in Action\n\nGo is a go. We’re officially rolling out support for Go. You can now import your Go targets in Bazel projects into both IntelliJ IDEA (with the Go plugin) and GoLand. This brings the full IDE experience you rely on: code highlighting, completion, navigation, and the ability to run, debug, and get coverage for your tests.\nBuilt-in Bazel Query tool window: Go beyond sync and build with Bazel queries integrated directly into your IDE via their own dedicated tool window. Craft your queries with syntax completion and a helpful UI for flags to explore your project’s dependency graph without ever leaving the editor.\nDramatically faster indexing: We’ve optimized indexing to get you to your code faster. You can now use the import_depth and import_ijars settings in your .bazelproject file to prevent the indexing of deep transitive dependencies and index only header jars instead of full jars. Whatâs more, only the files directly referenced in your .bazelproject view are fully indexed for code intelligence, which can slash indexing times and memory usage in large projects with many auxiliary files.\n\nNew plugin, new user experience\nBack in December, we publicly announced the EAP (Early Access Program) version of our new plugin and defined what it would take to release it into GA, with an overview of the main differences between the original plugin and the new one.\nHereâs a quick recap for those moving from the older plugin: We’ve smoothed out the rough edges to make Bazel feel like a natural part of the IDE.\n\nSimplified project import: The old import wizard is a thing of the past. Now, simply open a directory containing your MODULE.bazel or WORKSPACE file. For more control, you can open a specific .bazelproject view file. If you manage a large monorepo, you can provide a default template for your team by checking in a template at tools/intellij/.managed.bazelproject.\nRedesigned UI elements: The Bazel tool window is now your central hub for actions like resyncing your project (with a Build and Resync option for generating sources) and keeping track of targets in your working set. We’ve also added a widget listing all targets the currently opened file belongs to. It allows you to run actions on these targets (build / test / jump to BUILD file / copy target label)\nReworked target mapping for JVM projects: A core improvement is the new internal representation for JVM targets, which mirrors the actual Bazel graph. This fundamental change enables more accurate highlighting, more accurate completions and more reliable refactoring.\n\nImprovements since 2025.1\nWindows compatibility\nWe understand that development doesn’t just happen on one OS. Thatâs why we worked on making our plugin compatible with Microsoft Windows, bringing most of the feature set to our Windows-based users.\nEnhanced Bazel configuration support\nWe believe editing your build files should be as easy as editing your source code, which is why we’ve improved the user experience for all Bazel-related configuration files.\nStarlark (.bzl, BUILD)\n\nStarlark Quick Documentation\n\nQuick documentation for Starlark rules: Hover over a Starlark rule or function to see its documentation directly in the editor. You’ll also get documentation as you type, guiding you through available parameters.\nAutomatic formatting: If you have buildifier on your PATH, the plugin will now automatically format your Starlark files on save\n\nBazel module configuration file (MODULE.bazel)\n\nIntelligent editing: The MODULE.bazel editor now offers smart completions for arguments and displays documentation as you edit.\n\nBazel project view file (.bazelproject) \n\n.bazelproject view highlighting and completions\n\nGuided editing: Get completions for section names and known values. The editor will now highlight completely unsupported sections as errors and sections that are supported in the old plugin originally by Google (but not in the new one) as warnings.\nManage directories from the Project view file tree: You can now right-click a directory in the project tree to add or remove it from your .bazelproject file, thus loading or unloading that directory in IntelliJ.\n\nBazelisk configuration file (.bazelversion):\n\nStay up to date: The editor will now highlight outdated Bazel versions specified in your .bazelversion file and offer a quick-fix to update to the latest release.\n\nLanguage ecosystem enhancements\n\nJVM:\n\nThe underlying project model mapping has been further improved, resulting in better performance during sync and more reliable refactorings for targets where glob patterns match the whole directory.\n\n\nScala:\n\nThe Bazel plugin now respects the scalacopts parameter in your scala_* targets, which unlocks Scala 3 highlighting features with the -Xsource:3 flag. At the same time, we’ve updated the Scala plugin to provide native integration with the Bazel plugin out of the box.\n\n\nPython:\n\nRun from the gutter: py_test and py_binary targets now get the familiar green Run arrow in the editor gutter.\nImproved dependency resolution: Python dependencies are now resolved correctly, enabling code navigation and eliminating false error highlighting.\nInterpreter from MODULE.bazel: The plugin now sets the Python interpreter based on what is defined in MODULE.bazel. This includes support for hermetic toolchains downloaded by rules_python â meaning you don’t need to have Python installed locally on your machine.\nDebugging: You can now attach the debugger to py_test targets.\n\n\n\nWhat happens to the Bazel plugin by Google?\nThe Bazel for IntelliJ plugin (also known as IJwB) by Google is being deprecated. Google has transferred the code ownership and maintenance to JetBrains. We will keep providing compatibility updates for new IntelliJ versions and critical fixes only throughout the year of 2025, but will be fully deprecating it in 2026. All our development effort for IntelliJ IDEA, GoLand, and PyCharm is now focused on the new plugin.\nThe Bazel for CLion plugin (CLwB) has also been transferred to JetBrains, and will continue to be actively developed. Learn more in the post Enhancing Bazel Support for CLion on the CLion Blog.\nGot feedback? Weâre listening!\nWe’re committed to making this the best Bazel experience possible. Please report any issues, ideas, or improvements straight to our issue tracker.\nFixed the problem yourself? We accept PRs on our hirschgarten repository.\nYou’ll also find us on the Bazel Community Slack, in the #intellij channel.\nHappy building!\n\nJuly 31, 2025 01:40 PM UTC\n\nBazel Plugin Release: General Availability\n\n\n\nJuly 31, 2025 10:20 AM UTC Pythonâs continue keyword functions as a statement that controls the flow of a loop. It allows you to skip code in a loop for the current iteration and jump immediately to the next one. Itâs used exclusively in for and while loops, letting you control the flow of execution, bypass specific conditions, and continue processing in a structured and predictable way.\nBy the end of this tutorial, youâll understand that:\n\nExecuting continue doesnât affect the else clause of a loop.\nUsing continue incorrectly may result in skipping necessary code.\nYou canât use continue in a function or class thatâs nested in a loop.\nOn a bytecode level, continue executes the same instructions as reaching the end of a loop.\n\nArmed with this knowledge, youâll be able to confidently write loops using continue and expand your skills as a Python programmer.\n\nGet Your Code: Click here to download the free sample code that shows you how to skip ahead in loops with Pythonâs continue keyword .\n\n\n Take the Quiz: Test your knowledge with our interactive âSkip Ahead in Loops With Python's Continue Keywordâ quiz. Youâll receive a score upon completion to help you track your learning progress:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive Quiz\nSkip Ahead in Loops With Python's Continue Keyword\nTest your understanding of Python's continue keyword, which allows you to skip code in a loop for the current iteration and jump immediately to the next one.\n\n\n\nPythonâs continue Keyword\nLoops are control flow statements used to perform operations repeatedly a certain number of times. In a normal loop, the loop body runs from start to finish, with the number of iterations controlled by the type of loop:\n\nA for loop runs a specific number of times and is usually used to process a collection of data.\nA while loop runs as long as a specific condition evaluates to True. When the condition evaluates to False, the loop ends.\n\nIn both cases, you may find it useful to stop the execution of the loop body and move to the next iteration. The way to do that is with the continue keyword.\nIn any loop, continue stops the code currently executing, and jumps immediately back to the top of the loop, skipping to the next iteration.\nUnderstanding Its Behavior in for and while Loops\nIn a for loop, continue moves the iterator to the next item to be processed. If no other items are available, then the loop ends.\nAssume you have the following for loop that computes the sum of all numbers in a list:\n\n\nPython\n\n\n\n\ntotal = 0\n\nfor number in range(-10, 10):\n    total += number\n\nprint(total)\n\n\nCopied!\n\n\nThis works fine, but what if you want to add only the positive numbers, ignoring all the negative ones? You can modify this loop to add only positive numbers using continue:\n\n\nPython\n\n\n\n\ntotal = 0\n\nfor number in range(-10, 10):\n    if number < 0:\n        continue\n    total += number\n\nprint(total)\n\n\nCopied!\n\n\nIn this case, since Python executes continue only when the number is less than zero, it doesnât add those numbers to total.\nYouâve seen how the continue statement works in a for loopânow youâll see it working similarly in a while loop.\nIn a while loop, continue transfers control back to the condition at the top of the loop. If that condition is True, then the loop body will run again. If itâs False, then the loop ends.\nConsider the following while loop. It leverages Pythonâs walrus operator to get user input, casts it to an int, and adds the number to a running total. The loop stops when the user enters 0:\n\n\nPython\nsum_whole_numbers.py\n\n\n\n\nprint(\"Enter one whole number per input.\")\nprint(\"Type 0 to stop and display their sum:\")\n\ntotal = 0\n\nwhile (user_int := int(input(\"+ \"))) != 0:\n    total += user_int\n\nprint(f\"{total=}\")\n\n\nCopied!\n\n\nAgain, you only want to add the positive numbers that your users enter, so you modify the loop using continue:\n\n\nPython\nsum_whole_numbers.py\n\n\n\n\nprint(\"Enter one whole number per input.\")\nprint(\"Type 0 to stop and display their sum:\")\n\ntotal = 0\n\nwhile (user_int := int(input(\"+ \"))) != 0:\n    if user_int < 0:\n        continue\n    total += user_int\n\nprint(f\"{total=}\")\n\n\nCopied!\n\n\nYou can copy the code and try it out. When you run the script, Python keeps prompting you for input until you enter 0:\nRead the full article at https://realpython.com/python-continue/ Â»\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] Pythonâs continue keyword functions as a statement that controls the flow of a loop. It allows you to skip code in a loop for the current iteration and jump immediately to the next one. Itâs used exclusively in for and while loops, letting you control the flow of execution, bypass specific conditions, and continue processing in a structured and predictable way. By the end of this tutorial, youâll understand that: Armed with this knowledge, youâll be able to confidently write loops using continue and expand your skills as a Python programmer. Get Your Code: Click here to download the free sample code that shows you how to skip ahead in loops with Pythonâs continue keyword . Take the Quiz: Test your knowledge with our interactive âSkip Ahead in Loops With Python's Continue Keywordâ quiz. Youâll receive a score upon completion to help you track your learning progress: Interactive Quiz Test your understanding of Python's continue keyword, which allows you to skip code in a loop for the current iteration and jump immediately to the next one. Loops are control flow statements used to perform operations repeatedly a certain number of times. In a normal loop, the loop body runs from start to finish, with the number of iterations controlled by the type of loop: In both cases, you may find it useful to stop the execution of the loop body and move to the next iteration. The way to do that is with the continue keyword. In any loop, continue stops the code currently executing, and jumps immediately back to the top of the loop, skipping to the next iteration. In a for loop, continue moves the iterator to the next item to be processed. If no other items are available, then the loop ends. Assume you have the following for loop that computes the sum of all numbers in a list: This works fine, but what if you want to add only the positive numbers, ignoring all the negative ones? You can modify this loop to add only positive numbers using continue: In this case, since Python executes continue only when the number is less than zero, it doesnât add those numbers to total. Youâve seen how the continue statement works in a for loopânow youâll see it working similarly in a while loop. In a while loop, continue transfers control back to the condition at the top of the loop. If that condition is True, then the loop body will run again. If itâs False, then the loop ends. Consider the following while loop. It leverages Pythonâs walrus operator to get user input, casts it to an int, and adds the number to a running total. The loop stops when the user enters 0: Again, you only want to add the positive numbers that your users enter, so you modify the loop using continue: You can copy the code and try it out. When you run the script, Python keeps prompting you for input until you enter 0: [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 02:00 PM UTC In this quiz, you can test your knowledge on the fundamentals of LangChain, such as creating reusable instructions with prompt templates, LangChain chains, and LangChain’s debug mode.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you can test your knowledge on the fundamentals of LangChain, such as creating reusable instructions with prompt templates, LangChain chains, and LangChain’s debug mode. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC Are you ready to revisit the essentials of building Flask applications? In this quiz, you’ll practice Flask concepts such as views, blueprints, application factory patterns, and template usage.\nCheck your understanding of Flask fundamentals by exploring concepts covered in the tutorial Build a Scalable Flask Web Project From Scratch.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] Are you ready to revisit the essentials of building Flask applications? In this quiz, you’ll practice Flask concepts such as views, blueprints, application factory patterns, and template usage. Check your understanding of Flask fundamentals by exploring concepts covered in the tutorial Build a Scalable Flask Web Project From Scratch. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC In this quiz, you’ll revisit the fundamentals of object-oriented programming (OOP) in Python and how to work with classes, objects, and constructors.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you’ll revisit the fundamentals of object-oriented programming (OOP) in Python and how to work with classes, objects, and constructors. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC In this quiz, you’ll practice core concepts from Introduction to Web Scraping With Python. You’ll revisit what web scraping is, when to use Beautiful Soup, and how to install and configure your environment.\nYou’ll also try out key syntax for creating BeautifulSoup objects, explore common HTML parsers, and check your understanding of tools like MechanicalSoup.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you’ll practice core concepts from Introduction to Web Scraping With Python. You’ll revisit what web scraping is, when to use Beautiful Soup, and how to install and configure your environment. You’ll also try out key syntax for creating BeautifulSoup objects, explore common HTML parsers, and check your understanding of tools like MechanicalSoup. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC In this quiz, you’ll test your understanding of\nPython’s continue statement.\nThe continue statement allows you to skip code in a loop for the current iteration,\njumping immediately to the next iteration. It’s used exclusively in for and while loops,\nallowing you to control the flow of execution, bypass specific conditions,\nand continue processing in a structured and predictable manner.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you’ll test your understanding of\nPython’s continue statement. The continue statement allows you to skip code in a loop for the current iteration,\njumping immediately to the next iteration. It’s used exclusively in for and while loops,\nallowing you to control the flow of execution, bypass specific conditions,\nand continue processing in a structured and predictable manner. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC In this quiz, you’ll revisit Python’s built-in exceptions, exploring their hierarchy and how to handle them gracefully. You’ll practice distinguishing between errors and exceptions, using try...except blocks, and identifying specific exceptions like IndexError and GeneratorExit.\nBrush up your skills by reviewing the Working With Python’s Built-in Exceptions course before you start!\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you’ll revisit Python’s built-in exceptions, exploring their hierarchy and how to handle them gracefully. You’ll practice distinguishing between errors and exceptions, using try...except blocks, and identifying specific exceptions like IndexError and GeneratorExit. Brush up your skills by reviewing the Working With Python’s Built-in Exceptions course before you start! [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC In this quiz, you’ll test your understanding of the Python or Operator.\nYou’ll learn how to use it in both Boolean and non-Boolean contexts,\nand understand how it can be used to solve programming problems.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you’ll test your understanding of the Python or Operator.\nYou’ll learn how to use it in both Boolean and non-Boolean contexts,\nand understand how it can be used to solve programming problems. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC In this quiz, you’ll practice your knowledge about Python’s namespace packages.\nWhat are they used for? How do you set up a namespace package? How could you create one before PEP 420? Complete this quick quiz to test your knowledge.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] In this quiz, you’ll practice your knowledge about Python’s namespace packages. What are they used for? How do you set up a namespace package? How could you create one before PEP 420? Complete this quick quiz to test your knowledge. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 04, 2025 12:00 PM UTC The 2025 version of the EuroPython conference took place both online and in person in July 2025. This was the third conference under our current Code of Conduct (CoC), and we had Code of Conduct working group members continuously available both online and in person.ReportsOver the course of the conference, the Code of Conduct team was made aware of the following issue:One person was uncomfortable with certain phrases being used in one of the poster sessions. The author was informed, and the phrases reported were removed by the author from their poster presentation promptly.Thank you the Code of Conduct team responded to the issue reported. The 2025 version of the EuroPython conference took place both online and in person in July 2025. This was the third conference under our current Code of Conduct (CoC), and we had Code of Conduct working group members continuously available both online and in person. Over the course of the conference, the Code of Conduct team was made aware of the following issue: Thank you the Code of Conduct team responded to the issue reported. August 04, 2025 07:00 AM UTC Code to Care â A Hands-On Tryton Technical Workshop\nWe are excited to announce âCode to Careâ, a 3-day live hands-on workshop on Tryton ERP customization, with a special focus on GNUHealth.\n\nDates: August 15â17, 2025\nMode: Online (Live Interactive Sessions)\nFee: â¹20,000 per participant\nLanguage: English\nRegister Interest: Expression of Interest â Code to Care: Tryton x GNUHealth Customisation Workshop\n\n About the Trainer\nWith over 10 years of hands-on experience with Tryton, the trainer has successfully implemented Tryton at Indiaâs largest medical institute, managing key domains such as HR, Payroll, Procurement, and clinical modules.\nWhat Youâll Explore\n\nHow to customise the existing modules of Tryton for your systemâs needs\nHow to build new modules to support or enhance your workflows and functionalities\nDeployment and maintenance best practices\nContributing to the Tryton and GNUHealth ecosystems\n\nGiving Back\nA portion of the participation fee will be donated to the:\n\nTryton Foundation\nGNUHealth Foundation\nopenSUSE Project\n\nFurther details will be shared with the interested participants over registered email address. Register your interest at Expression of Interest â Code to Care: Tryton x GNUHealth Customisation Workshop\n1 post - 1 participant\nRead full topic We are excited to announce âCode to Careâ, a 3-day live hands-on workshop on Tryton ERP customization, with a special focus on GNUHealth. With over 10 years of hands-on experience with Tryton, the trainer has successfully implemented Tryton at Indiaâs largest medical institute, managing key domains such as HR, Payroll, Procurement, and clinical modules. A portion of the participation fee will be donated to the: Further details will be shared with the interested participants over registered email address. Register your interest at Expression of Interest â Code to Care: Tryton x GNUHealth Customisation Workshop 1 post - 1 participant Read full topic August 04, 2025 06:00 AM UTC âï¸ Ãcrire (et rÃ©Ã©crire) mon livre Introduction Ã  Python 3.13\nQuand jâai commencÃ© mon parcours en tant quâindÃ©pendant, mon objectif Ã©tait limpide : donner des formations sur Python. Expliquer comment lâutiliser, comment le comprendre, le structurer, le manipuler. Bref, transmettre avec passion tout ce que jâavais appris au fil des annÃ©es.\nÃ cette Ã©poque, Python 2 Ã©tait encore bien prÃ©sent, mais Python 3 commenÃ§ait Ã  faire doucement son chemin. En 2014, on utilisait la version 3.4, et dÃ¨s 2015, la 3.5 Ã©tait disponible. Quand jâai commencÃ© mon parcours en tant quâindÃ©pendant, mon objectif Ã©tait limpide : donner des formations sur Python. Expliquer comment lâutiliser, comment le comprendre, le structurer, le manipuler. Bref, transmettre avec passion tout ce que jâavais appris au fil des annÃ©es. Ã cette Ã©poque, Python 2 Ã©tait encore bien prÃ©sent, mais Python 3 commenÃ§ait Ã  faire doucement son chemin. En 2014, on utilisait la version 3.4, et dÃ¨s 2015, la 3.5 Ã©tait disponible. August 04, 2025 12:00 AM UTC You probably know that I love Rust and TypeScript, and I’m a big proponent of\ngood typing systems.  One of the reasons I find them useful is that they enable\nautocomplete, which is generally a good feature.  Having a well-integrated type\nsystem that makes sense and gives you optimization potential for memory layouts\nis generally a good idea.\nFrom that, you’d naturally think this would also be great for agentic coding\ntools.  There’s clearly some benefit to it.  If you have an agent write\nTypeScript and the agent adds types, it performs well.  I don’t know if it\noutperforms raw JavaScript, but at the very least it doesn’t seem to do any\nharm.\nBut most agentic tools don’t have access to an LSP (language server protocol).\nMy experiments with agentic coding tools that do have LSP access (with type\ninformation available) haven’t meaningfully benefited from it.  The LSP\nprotocol slows things down and pollutes the context significantly.  Also, the\nmodels haven’t been trained sufficiently to understand how to work with this\ninformation.  Just getting a type check failure from the compiler in text\nform yields better results.\nWhat you end up with is an agent coding loop that, without type checks enabled,\nresults in the agent making forward progress by writing code and putting types\nsomewhere.  As long as this compiles to some version of JavaScript (if you use\nBun, much of it ends up type-erased), it creates working code.  And from there\nit continues.  But that’s bad progressâit’s the type of progress where it\nneeds to come back after and clean up the types.\nIt’s curious because types are obviously being written but they’re largely\nbeing ignored.  If you do put the type check into the loop, my tests actually\nshowed worse performance.  That’s because the agent manages to get the code\nrunning, and only after it’s done does it run the type check.  Only then, maybe\nat a much later point, does it realize it made type errors.  Then it starts\nfixing them, maybe goes in a loop, and wastes a ton of context.  If you make it\ndo the type checks after every single edit, you end up eating even more into the\ncontext.\nThis gets really bad when the types themselves are incredibly complicated and\nnon-obvious.  TypeScript has arcane expression functionality, and some\nlibraries go overboard with complex constructs (e.g., conditional\ntypes).\nLLMs have little clue how to read any of this.  For instance, if you give it\naccess to the .d.ts files from TanStack Router and the forward declaration\nstuff it uses for the router system to work properly, it doesn’t understand any\nof it.  It guesses, and sometimes guesses badly.  It’s utterly confused.  When\nit runs into type errors, it performs all kinds of manipulations, none of which\nare helpful.\nPython typing has an even worse problem, because there we have to work with a\nvery complicated ecosystem where different type checkers cannot even agree on\nhow type checking should work.  That means that the LLM, at least from my\ntesting, is not even fully capable of understanding how to resolve type check\nerrors from tools which are not from mypy.  It’s not universally bad, but if\nyou actually end up with a complex type checking error that you cannot resolve\nyourself, it is shocking how the LLM is also often not able to fully figure out\nwhat’s going on, or at least needs multiple attempts.\nAs a shining example of types adding a lot of value we have Go.  Go’s types are\nmuch less expressive and very structural.  Things conform to interfaces purely\nby having certain methods.  The LLM does not need to understand much to\ncomprehend that.  Also, the types that Go has are rather strictly enforced.  If\nthey are wrong, it won’t compile.  Because Go has a much simpler type system\nthat doesn’t support complicated constructs, it works much betterâboth for LLMs\nto understand the code they produce and for the LLM to understand real-world\nlibraries you might give to an LLM. \nI don’t really know what to do with this, but these behaviors suggest there’s\na lot more value in best-effort type systems or type hints like JSDoc.  Because\nat least as far as the LLM is concerned, it doesn’t need to fully understand\nthe types, it just needs to have a rough understanding of what type some object\nprobably is.  For the LLM it’s more important that the type name in the error\nmessage aligns with the type name in source.\nI think it’s an interesting question whether this behavior of LLMs today will\ninfluence future language design.  I don’t know if it will, but I think it\ngives a lot of credence to some of the decisions that led to languages like Go\nand Java.  As critical as I have been in the past about their rather simple\napproaches to problems and having a design that maybe doesn’t hold developers\nin a particularly high regard, I now think that they actually are measurably in\na very good spot.  There is more elegance to their design than I gave it\ncredit for. You probably know that I love Rust and TypeScript, and I’m a big proponent of\ngood typing systems.  One of the reasons I find them useful is that they enable\nautocomplete, which is generally a good feature.  Having a well-integrated type\nsystem that makes sense and gives you optimization potential for memory layouts\nis generally a good idea. From that, you’d naturally think this would also be great for agentic coding\ntools.  There’s clearly some benefit to it.  If you have an agent write\nTypeScript and the agent adds types, it performs well.  I don’t know if it\noutperforms raw JavaScript, but at the very least it doesn’t seem to do any\nharm. But most agentic tools don’t have access to an LSP (language server protocol).\nMy experiments with agentic coding tools that do have LSP access (with type\ninformation available) haven’t meaningfully benefited from it.  The LSP\nprotocol slows things down and pollutes the context significantly.  Also, the\nmodels haven’t been trained sufficiently to understand how to work with this\ninformation.  Just getting a type check failure from the compiler in text\nform yields better results. What you end up with is an agent coding loop that, without type checks enabled,\nresults in the agent making forward progress by writing code and putting types\nsomewhere.  As long as this compiles to some version of JavaScript (if you use\nBun, much of it ends up type-erased), it creates working code.  And from there\nit continues.  But that’s bad progressâit’s the type of progress where it\nneeds to come back after and clean up the types. It’s curious because types are obviously being written but they’re largely\nbeing ignored.  If you do put the type check into the loop, my tests actually\nshowed worse performance.  That’s because the agent manages to get the code\nrunning, and only after it’s done does it run the type check.  Only then, maybe\nat a much later point, does it realize it made type errors.  Then it starts\nfixing them, maybe goes in a loop, and wastes a ton of context.  If you make it\ndo the type checks after every single edit, you end up eating even more into the\ncontext. This gets really bad when the types themselves are incredibly complicated and\nnon-obvious.  TypeScript has arcane expression functionality, and some\nlibraries go overboard with complex constructs (e.g., conditional\ntypes).\nLLMs have little clue how to read any of this.  For instance, if you give it\naccess to the .d.ts files from TanStack Router and the forward declaration\nstuff it uses for the router system to work properly, it doesn’t understand any\nof it.  It guesses, and sometimes guesses badly.  It’s utterly confused.  When\nit runs into type errors, it performs all kinds of manipulations, none of which\nare helpful. Python typing has an even worse problem, because there we have to work with a\nvery complicated ecosystem where different type checkers cannot even agree on\nhow type checking should work.  That means that the LLM, at least from my\ntesting, is not even fully capable of understanding how to resolve type check\nerrors from tools which are not from mypy.  It’s not universally bad, but if\nyou actually end up with a complex type checking error that you cannot resolve\nyourself, it is shocking how the LLM is also often not able to fully figure out\nwhat’s going on, or at least needs multiple attempts. As a shining example of types adding a lot of value we have Go.  Go’s types are\nmuch less expressive and very structural.  Things conform to interfaces purely\nby having certain methods.  The LLM does not need to understand much to\ncomprehend that.  Also, the types that Go has are rather strictly enforced.  If\nthey are wrong, it won’t compile.  Because Go has a much simpler type system\nthat doesn’t support complicated constructs, it works much betterâboth for LLMs\nto understand the code they produce and for the LLM to understand real-world\nlibraries you might give to an LLM. I don’t really know what to do with this, but these behaviors suggest there’s\na lot more value in best-effort type systems or type hints like JSDoc.  Because\nat least as far as the LLM is concerned, it doesn’t need to fully understand\nthe types, it just needs to have a rough understanding of what type some object\nprobably is.  For the LLM it’s more important that the type name in the error\nmessage aligns with the type name in source. I think it’s an interesting question whether this behavior of LLMs today will\ninfluence future language design.  I don’t know if it will, but I think it\ngives a lot of credence to some of the decisions that led to languages like Go\nand Java.  As critical as I have been in the past about their rather simple\napproaches to problems and having a design that maybe doesn’t hold developers\nin a particularly high regard, I now think that they actually are measurably in\na very good spot.  There is more elegance to their design than I gave it\ncredit for. August 04, 2025 12:00 AM UTC In the previous post, I talked about Python's or keyword and how it doesn't behave the way you may expect it to. Here's the link to that article if you missed it: Do You Really Know How `or` And `and` Work in Python?One place you may see the or expression used is when dealing with the infamous mutable default value problem in functions–see the second section in Python Quirks? Party Tricks? Peculiarities Revealed… if you're not familiar with this Python banana skin. It seems some LLM models are keen to suggest this option, too.To keep this post brief, I'll assume you're familiar with both how or works and the mutable default value issue.Let's see how the or keyword is used to solve the mutable default value problem:All code blocks are available in text format at the end of this article • #1 • The code images used in this article are created using Snappify. [Affiliate link]I'm using this function for demonstration purposes. Note that the function mutates the list and returns it.But let's look at the part that's more relevant for this post. This function uses an empty list if no value is passed to the shopping_list parameter. Since you can't use an empty list as the default value, you use None as the default value.The or expression then does all the hard work:If you don't pass a list to the shopping_list parameter when you call add_to_shopping_list(), the function uses the None default value for shopping_list. And since None is falsy, the or expression evaluates to its second operand, the empty list [].However, if you already have a list with items in it and you pass it to the shopping_list parameter when you call add_to_shopping_list(), then this list is the one used within the function.Let's try it out to confirm this is how the function works.First, try with an existing list:#2You create a food_groceries list containing a few items. You then pass it to add_to_shopping_list(). You display output and food_groceries—these are names referring to the same list. They're not different lists. You can refresh your memory about Python's pass-by-assignment in functions here: If You Haven't Got A Clue What \"Pass By Value\" or \"Pass By Reference\" mean, read on…This is what you expect. Great.How about using the default value now:#3There's no second argument when you call add_to_shopping_list() this time. Therefore, the function creates an empty list and appends \"Washing Up Liquid\" to it.Again, this is the behaviour you expect.So, using the or expression to deal with the mutable default value in functions is cool, right?Subscribe nowNow Consider This…Have a look at this scenario:#4This scenario seems similar to the first one earlier, the one with the food_groceries. You create a list called clothing_items and you then pass it to the add_to_shopping_list() function.But now, although output shows the expected result, the list clothing_items is still empty.Here's what's happening:The list clothing_items is an empty list.You pass it to add_to_shopping_list(), so shopping_list now refers to the same list as clothing_items within the function.It's now the or expression's turn within the function, shopping_list = shopping_list or []. But the identifier (name) shopping_list now refers to the same list that clothing_items refers to. This is an empty list. Therefore, it's falsy……and since the first operand of the or expression is falsy, the expression evaluates to the second operand, which is also an empty list.But—and this is the key point—the or expression creates a new empty list rather than using the existing empty list (the one that clothing_items refers to).So, you still have an empty list within your function, but it's not the same one you're expecting.That's why output and clothing_items are different now. They're different lists. This didn't happen in your first example when you used food_groceries. In that example, output and food_groceries both referred to the same list.Support The Python Coding StackThe standard way of solving the mutable default value problem doesn't face this issue:#5This textbook approach to the mutable default value issue is less fancy, perhaps, but it works without surprises. It's also more readable, and that's important in Python!Do you want to try video courses designed and delivered in the same style as these posts? You can get a free trial at The Python Coding Place, and you also get access to a members-only forum.Try Out The Python Coding PlacePhoto by Dan Cristian Pădureț: https://www.pexels.com/photo/photo-of-multicolored-abstract-painting-1193743/Code in this article uses Python 3.13The code images used in this article are created using Snappify. [Affiliate link]You can also support this publication by making a one-off contribution of any amount you wish.Support The Python Coding StackFor more Python resources, you can also visit Real Python—you may even stumble on one of my own articles or courses there!Also, are you interested in technical writing? You’d like to make your own writing more narrative, more engaging, more memorable? Have a look at Breaking the Rules.And you can find out more about me at stephengruppetta.comFurther reading related to this article’s topic:Do You Really Know How `or` And `and` Work in Python?Python Quirks? Party Tricks? Peculiarities RevealedIf You Haven't Got A Clue What \"Pass By Value\" or \"Pass By Reference\" mean, read onAppendix: Code BlocksCode Block #1def add_to_shopping_list(item, shopping_list=None):\n    shopping_list = shopping_list or []\n    shopping_list.append(item)\n    return shopping_list\nCode Block #2food_groceries = [\"Milk\", \"Eggs\", \"Bread\"]\noutput = add_to_shopping_list(\"Chocolate\", food_groceries)\n\noutput\n# ['Milk', 'Eggs', 'Bread', 'Chocolate']\nfood_groceries\n# ['Milk', 'Eggs', 'Bread', 'Chocolate']\nCode Block #3household_items = add_to_shopping_list(\"Washing Up Liquid\")\nhousehold_items\n# ['Washing Up Liquid']\nCode Block #4clothing_items = []\noutput = add_to_shopping_list(\"Shirt\", clothing_items)\n\noutput\n# ['Shirt']\nclothing_items\n# []\nCode Block #5def add_to_shopping_list(item, shopping_list=None):\n    if shopping_list is None:\n        shopping_list = []\n    shopping_list.append(item)\n    return shopping_list\n\nclothing_items = []\noutput = add_to_shopping_list(\"Shirt\", clothing_items)\n\noutput\n# ['Shirt']\nclothing_items\n# ['Shirt']\nFor more Python resources, you can also visit Real Python—you may even stumble on one of my own articles or courses there!Also, are you interested in technical writing? You’d like to make your own writing more narrative, more engaging, more memorable? Have a look at Breaking the Rules.And you can find out more about me at stephengruppetta.com In the previous post, I talked about Python's or keyword and how it doesn't behave the way you may expect it to. Here's the link to that article if you missed it: Do You Really Know How `or` And `and` Work in Python? One place you may see the or expression used is when dealing with the infamous mutable default value problem in functions–see the second section in Python Quirks? Party Tricks? Peculiarities Revealed… if you're not familiar with this Python banana skin. It seems some LLM models are keen to suggest this option, too. To keep this post brief, I'll assume you're familiar with both how or works and the mutable default value issue. Let's see how the or keyword is used to solve the mutable default value problem: I'm using this function for demonstration purposes. Note that the function mutates the list and returns it. But let's look at the part that's more relevant for this post. This function uses an empty list if no value is passed to the shopping_list parameter. Since you can't use an empty list as the default value, you use None as the default value. The or expression then does all the hard work: If you don't pass a list to the shopping_list parameter when you call add_to_shopping_list(), the function uses the None default value for shopping_list. And since None is falsy, the or expression evaluates to its second operand, the empty list []. However, if you already have a list with items in it and you pass it to the shopping_list parameter when you call add_to_shopping_list(), then this list is the one used within the function. Let's try it out to confirm this is how the function works. First, try with an existing list: You create a food_groceries list containing a few items. You then pass it to add_to_shopping_list(). You display output and food_groceries—these are names referring to the same list. They're not different lists. You can refresh your memory about Python's pass-by-assignment in functions here: If You Haven't Got A Clue What \"Pass By Value\" or \"Pass By Reference\" mean, read on… This is what you expect. Great. How about using the default value now: There's no second argument when you call add_to_shopping_list() this time. Therefore, the function creates an empty list and appends \"Washing Up Liquid\" to it. Again, this is the behaviour you expect. So, using the or expression to deal with the mutable default value in functions is cool, right? Subscribe now Have a look at this scenario: This scenario seems similar to the first one earlier, the one with the food_groceries. You create a list called clothing_items and you then pass it to the add_to_shopping_list() function. But now, although output shows the expected result, the list clothing_items is still empty. Here's what's happening: The list clothing_items is an empty list. You pass it to add_to_shopping_list(), so shopping_list now refers to the same list as clothing_items within the function. It's now the or expression's turn within the function, shopping_list = shopping_list or []. But the identifier (name) shopping_list now refers to the same list that clothing_items refers to. This is an empty list. Therefore, it's falsy… …and since the first operand of the or expression is falsy, the expression evaluates to the second operand, which is also an empty list. But—and this is the key point—the or expression creates a new empty list rather than using the existing empty list (the one that clothing_items refers to). So, you still have an empty list within your function, but it's not the same one you're expecting. That's why output and clothing_items are different now. They're different lists. This didn't happen in your first example when you used food_groceries. In that example, output and food_groceries both referred to the same list. Support The Python Coding Stack The standard way of solving the mutable default value problem doesn't face this issue: This textbook approach to the mutable default value issue is less fancy, perhaps, but it works without surprises. It's also more readable, and that's important in Python! Do you want to try video courses designed and delivered in the same style as these posts? You can get a free trial at The Python Coding Place, and you also get access to a members-only forum. Try Out The Python Coding Place Photo by Dan Cristian Pădureț: https://www.pexels.com/photo/photo-of-multicolored-abstract-painting-1193743/ Code in this article uses Python 3.13 The code images used in this article are created using Snappify. [Affiliate link] You can also support this publication by making a one-off contribution of any amount you wish. Support The Python Coding Stack For more Python resources, you can also visit Real Python—you may even stumble on one of my own articles or courses there! Also, are you interested in technical writing? You’d like to make your own writing more narrative, more engaging, more memorable? Have a look at Breaking the Rules. And you can find out more about me at stephengruppetta.com Further reading related to this article’s topic: Do You Really Know How `or` And `and` Work in Python? Python Quirks? Party Tricks? Peculiarities Revealed If You Haven't Got A Clue What \"Pass By Value\" or \"Pass By Reference\" mean, read on For more Python resources, you can also visit Real Python—you may even stumble on one of my own articles or courses there! Also, are you interested in technical writing? You’d like to make your own writing more narrative, more engaging, more memorable? Have a look at Breaking the Rules. And you can find out more about me at stephengruppetta.com August 03, 2025 07:54 PM UTC For July 2025, we welcome Jake Howard as our DSF member of the month! â­\nJake actively shares his knowledge through blog posts and community talks. He is part of the Security Team Working Group and he created the DEP 14. He has been a DSF member since June 2024. \nYou can learn more about Jake by visiting Jake's website and his GitHub Profile.\nLetâs spend some time getting to know Jake better!\nCan you tell us a little about yourself (hobbies, education, etc)\nIâm Jake. Iâm a Senior Systems Engineer at Torchbox, where Iâve been for a little over 4 years. âSystems Engineerâ is a fairly loaded title, and means different things to different people. I like to describe it as doing everything technical to do with Software Engineering which isnât Programming (Sysadmin, Devops, IT support, Security, Networking), but also doing a fair bit of Programming.\nMost of my hobbies revolve around technology. Iâm an avid self-hoster, running applications on servers both in âthe cloudâ and in my house. Thereâs been a server of some kind in my house for the last 10 years. Iâm generally quite a private person, so I like to know whatâs happening to my data. Since I started working remotely at the start of the 2020 pandemic, Iâve channeled some of this passion into posts on my website, with posts about all manner of things Iâve done from self-hosting to general software engineering.\nAway from my desk (sort of), Iâm a volunteer for Student Robotics, inspiring college students into STEM through competitive robotics (no, not quite like Robot Wars). In school, I was always the quiet one, but now I seem completely at home with public speaking, commentary and otherwise being in front of large crowds of people. I wish I knew the secret - Iâd make millions!\nMy GitHub is also pretty active, with contributions all over the place (OpenZFS, Nebula VPN, Gitea, Plausible Analytics, OpenCV, Ansibleâ¦).\nIâm curious, where your nickname âRealOrangeOneâ comes from?\nBecause a lot of life happens online (especially in the last 5 years), many people havenât even seen pictures of me, let alone met me in person. I am not in fact a talking piece of fruit. For a while, I tried to stay anonymous, avoiding photos or videos of me on the internet. But since I discovered I enjoy public speaking, Iâve sort of given up on that (for the most part).\nBy now, Iâm sure many people have speak. But, for those who donât know: I, like my father before me, am ginger ð¥ (the hair colour, not the plant).\nThe exact specifics of how being ginger lead to âTheOrangeOneâ are sadly lost to time. Iâve owned theorangeone.net for well over a decade at this point. Unfortunately, itâs not a particularly original nickname, and I have to be fast to claim it when signing up to new services. In some places (where I wasnât fast enough) Iâm forced to sub out âTheâ for âRealâ, which has lead to some confusions, but not too many. Canonically, I prefer âTheOrangeOneâ, but as we all know, naming things is hard.\nHow did you start using Django?\nIâve been using Django since around the 1.8 release. My job at the time was at a Django development agency, so it was the first real Python framework Iâd used. The first few weeks there was my first exposure to Django, pip, package management and collaborative software engineering - it was quite a lot to learn at once. I didnât realise it at the time, but I was working working as a junior alongside a couple fairly well-known names in the Django community like Tom Christie (DRF, Starlette, HTTPX) and Jamie Matthews (django-readers, django-zen-queries). We mostly built single-page apps with React, so I learned Django and Django Rest Framework at the same time, which means I now often have to look back at the docs to remember how forms and templates work.\nAs for contributing to Django, that came much later. My first commit to Django was in May 2024. Having used Django for a while, and written plenty of packages, Iâd never stopped to look at how upstream was developed. Around the time of DEP 14 kicking off, I needed to look a bit more at the inner workings of the Django project, to learn what was in store for me. When scrolling through Trac tickets, I found an interesting looking ticket, and got to work. At the time of writing, Iâve now closed 9 Trac tickets across 12 PRs, and some pretty cool features (simple block tags, better Accept header parsing, performance improvements to the URL router) now have my name on them (metaphorically speaking).\nI wouldnât call myself an âactiveâ contributor, but I try and keep an eye on the tickets and forum threads which interest me the most, and chime in when I can.\nWhat other framework do you know and if there is anything you would like to have in Django if you had magical powers?\nSince itâs the first framework I learned, and so far has done everything I need, Iâve mostly used Django. For a few smaller services, Iâve leaned more towards Starlette and AIOHTTP, but for anything even slightly large Iâve just used Django - since Iâd end up recreating much of Django using the smaller frameworks anyway. A better (likely official) path for single-file Django (ie without some of the magic module handling) might help draw a few more people in and fill a few more of these âmicro-serviceâ style use-cases.\nIâm a class-based views person - I like the encapsulation and easy extension of base views. As with any opinion on the internet, Iâm sure many people disagree with me, but to me itâs just personal preference. Iâm still surprised itâs a pattern not seen by many other Python frameworks.\nFollowing in the footsteps of Python, I often wonder if Django could also do with some dead battery removal (or at least extracting into separate packages). Django is a pretty big framework, and whilst the contrib apps are intended to be separate, they also require hooks and assumptions in other areas of the codebase. I might be wrong (it happens quite a lot), but I suspect some of those packages would be better suited externally, perhaps improving some developer momentum - and lightening the load for the Fellows. Djangoâs sitemap and syndication (RSS) frameworks are 2 places I wish would get some more love.\nOutside of Python, Iâm a big fan of Rust (as cliche as it may be). Whilst Rust is a popular language, there isnât really a âDjangoâ like (batteries included) framework - itâs all composing the pieces you need yourself. However, that doesnât stop people being very productive with it. As a result, most of the frameworks have very generic interfaces, letting developers pass state around as needed, rather than trying to do everything themselves. Outside of the obvious static typing debate (which Iâm in favour of), Iâd love to see Django embrace some dependencies, especially if they bring some performance improvements. It may end up being a bad idea, but it might also help those who want to use Djangoâs modules outside of Django.\nMany years ago, I tried to be a polyglot - switching between different programming languages (and frameworks) to find new ways of working and match the problem to the correct solution. Now, Iâve settled mostly on Python and Rust. They fit my needs well, Iâm very productive in them, and between the 2 thereâs not much they canât handle. Given my background, and the fact most sysadmin-y tools are written in it, Iâm really not a fan of Go.\nWhat projects are you working on now?\nOver time, Iâve slowly stepped back from having big side projects - being a new dad sure takes up time and energy. Large projects ended up feeling too much like work outside of work, and I end up either getting distracted or bored. After work, I want to do something fun, not that seems like yet another job. Iâm the kind of person who gets the sudden urge to research something interesting for an evening, dive in, then not think about it again for several weeks. Itâs not the most productive way of doing things, which is why my posts are all over the place, but it doesnât feel much like work for me - I lean heavily on what interests me at any time to drive what I want to do.\nWith that said, Iâm currently in the process of rebuilding my website. Of course, both the current and new versions are built on Django, but the new build should be easier to maintain, faster, and hopefully wonât need rewriting again in just a couple years. Most of my other projects have been small tools to make my home server that bit nicer.\nProfessionally, Iâm not really a developer anymore. As a sysadmin (ish), much of my day-to-day doesnât involve much programming. I spend much more of my time deploying, monitoring and administering Django applications than I do writing them. My main project at the moment is helping port a large Java / JS deployment over to Django and Wagtail, running on Kubernetes with some very high and interesting stability and scaling requirements. Since most of my professional live has been at software agencies, Iâve tended to bounce between different projects, rather than sitting on a single one. So Iâm also supporting on a few other smaller projects as and when Iâm needed.\nWhich Django libraries are your favorite (core or 3rd party)?\ndjango-tasks, of course!\nâ¦\nOh right, a serious answerâ¦\nI have to say, one of the most underrated modules in Django is django.utils. Itâs not as glamourous as the ORM, forms or cache, but itâs a treasure trove of useful methods. I personally always like looking at the internal helper functions large frameworks use - see the problems theyâve had to solve time and time again. Whilst thereâs not the same stability guarantees, Iâve definitely been helped out on a few occasions by some undocumented functions.\nIn that theme, Iâm a fan of libraries which do one thing and do it well. I quite like small libraries which aim to solve a problem. Thereâs definitely a line before that becomes a problem (anyone remember left-pad?), but libraries which scope creep are often harder to work with than the more narrow-scoped ones, whilst the smaller ones just keep on working and making my life easier. For example, django-environ makes reading and parsing environment variables into settings really easy and clean, and django-decorator-include helps including other urlpatterns whilst wrapping them in a decorator - particularly helpful for 3rd-party packageâs URLs.\nFinally, Iâve got a real soft-spot for whitenoise (and ServeStatic for ASGI users). Djangoâs documentation deters people pretty hard from serving media and static files using Django - and rightly so in performance-critical environments. However, for most people, having to additionally maintain (and secure) nginx is more maintenance than necessary. whitenoise serves static files using Django directly, without any extra configuration, whilst also pre-compressing files for a nice performance boost. To me, itâs such a universally-useful library, Iâd love to see it it included in Django itself someday.\nIâll throw a bonus shout out for granian, a new (ish) WSGI / ASGI server written in Rust. gunicorn has a near monopoly on running Python apps in production, especially in the WSGI space, so itâs nice to see a newcomer. granian isnât always faster, but doing the HTTP handling in Rust (and using popular libraries to do it) can improve stability and throughput, without holding the GIL. Iâve not run anything in production with it yet, but Iâve been using it on personal projects for almost a year without issue.\nWhat are the top three things in Django that you like?\nContrary to what Iâve already said, I actually like Djangoâs batteries. Sure, thereâs quite a few âdeadâ ones in need of some cleaning up and TLC, but having most of what I need already installed makes me far more productive. I donât need to think about how to render my form on the page, save the results as a model, or properly handle errors - everything âjust worksâ, and works together. Sure, batteries have their downsides - it makes swapping them out rather difficult, but Iâd rather ship my feature sooner than compare the trade-offs of different ORMs. The auto-reloading in django-tasks is only around 8 lines of code thanks to django.utils.autoreload being so easy to hook in to.\nSecondly: Forms, but not for the reasons you might think. Most forms are created to take submissions from the user, validate them, then probably save them to a model. However, theyâre great as general data validation. Iâve written plenty of views with complex querystring requirements, and leaning on forms to validate them saves a lot of boilerplate code. Sure, pydantic might be a bit faster and have more features, but given Iâm already productive with django.forms, and itâs already installed and well understood by other developers in my team, I donât feel the need to reach for something else.\nFinally, I wouldnât say itâs quite a âfavouriteâ, and itâs well-known as being far-from-perfect, but Iâve got a real soft-spot for the Django Admin. It lets me focus on building the core of an application, rather than the internal interface - particularly when there are no strong requirements for it, or itâs only going to be used by me and a few others. Since itâs a fair raw view of the database by default, Iâve definitely been bitten by some less-than-restrictive permissions, but thereâs generally all the hooks I need. I donât like building frontends, so only needing to build 1 rather than 2 makes me a lot happier, especially if it comes with authentication, permissions, read-only views and a dark mode ð!\nHow did you join the security team?\nIâd love to say itâs an interesting story, stroking my ego that I saved the day. But the reality is, as usual, far less glamorous.\nAs an engineer, Iâve tended towards 2 specialties: Security and Performance, which usually go hand-in-hand. In early 2023, I was invited to join the Wagtail CMS Security team after reporting and subsequently helping fix a memory exhaustion issue. I was already involved in all things security at Torchbox, especially our ISO-27001 certification, so I was already known when I submitted a vulnerability report.\nThibaud mentioned to me late last year that the project potentially looking for new members of the security team, to help with resourcing and some potential process improvements within the foundation. I naturally jumped at the opportunity - since the team is generally closed to new members and âfully-staffedâ. After a few gentle reminders (heâs a busy guy), I received a message from Sarah formally inviting me in March.\nSince then, Iâve tried to review every report which came through, and helped author a few patches. A few reports even had to be raised upstream with Pythonâs Security Response Team (PSRT). Itâs been an interesting experience, and Iâm looking forward to seeing how the team developers over the coming years.\nIâm aware that you have created DEP 14 on the Background Workers, how the work is going so far? Do you need support from the community on anything?\nDEP 14 (the proposal to add a native background workers API to Django) has been a really interesting journey. Iâm beyond humbled to see the community interest behind it. When I started down this road, Iâd only intended to start the conversations and help rally the community interest. Since then, and 6000 lines of code later, Iâm mostly single-handedly writing a database-backed production-grade task system.\nRight now, weâre at a bit of a cross-roads. Many of the foundational parts work, relatively well. The difficulty comes with the more complex features: Retries, dependencies, robust execution. Building a task system is easy - building a reliable one people want to actually use is incredibly difficult. If anyone out there is interested in getting involved, please do! Report issues, fix bugs, contribute to design discussions. Most of the APIs are based on what I think looks sensible. Software this large, pivotal and complex canât be built in isolation - so it needs a diverse audience to ensure we (I) make the right decisions, and design an API people actually want to use that will last and scale for years to come.\nThe next challenge on my list to tackle is timeouts - a highly requested feature. It sounds simple, but the reality is far from it. Many of those challenges sparked the topic of my upcoming PyCon UK talk later this year.\nDjango is celebrating its 20th anniversary this month. Any nice story to share?\nMy personal highlight was DjangoCon Europe 2024 - my first DjangoCon. I ended up bringing the stereotypically grey British weather with me, but I had a great week chatting Django with some interesting people, and putting faces to the names and handles Iâd seen online. After the talk announcing DEP 14 and background tasks, I was inundated with people voicing their support - many wondering how itâd taken this long.\nBut personally, Iâm more interested in whatâs to come. Of course, thereâs django-tasks, but the next sets of releases are shaping up to be pretty interesting. Over the last 3-4 years or so, Iâve personally noticed a bit of a resurgence in peopleâs appetites for change in Django. The 6.x Steering Council have a lot of interesting ideas, and clearly the community agree. People are happy with what Django can do now, but want to bring it a little more up-to-date - and are happy to put in the work to do it. Only a few weeks ago, django-csp was included in core, making it easier to make more secure applications. Iâm sure thatâs just the start. The fact people are still keen on working on a framework which just celebrated 20 years shows it must be doing something right!\nIs there anything else youâd like to say?\nIâd like to thank whoever nominated me to be a DSF member in the first place. To this date, I have no idea who you are.\nBeyond that, Iâm just looking forward to seeing what comes of Django, and Python in general over the next few years.\n\nThank you for doing the interview, Jake ! For July 2025, we welcome Jake Howard as our DSF member of the month! â­ Jake actively shares his knowledge through blog posts and community talks. He is part of the Security Team Working Group and he created the DEP 14. He has been a DSF member since June 2024. \nYou can learn more about Jake by visiting Jake's website and his GitHub Profile. Letâs spend some time getting to know Jake better! Iâm Jake. Iâm a Senior Systems Engineer at Torchbox, where Iâve been for a little over 4 years. âSystems Engineerâ is a fairly loaded title, and means different things to different people. I like to describe it as doing everything technical to do with Software Engineering which isnât Programming (Sysadmin, Devops, IT support, Security, Networking), but also doing a fair bit of Programming. Most of my hobbies revolve around technology. Iâm an avid self-hoster, running applications on servers both in âthe cloudâ and in my house. Thereâs been a server of some kind in my house for the last 10 years. Iâm generally quite a private person, so I like to know whatâs happening to my data. Since I started working remotely at the start of the 2020 pandemic, Iâve channeled some of this passion into posts on my website, with posts about all manner of things Iâve done from self-hosting to general software engineering. Away from my desk (sort of), Iâm a volunteer for Student Robotics, inspiring college students into STEM through competitive robotics (no, not quite like Robot Wars). In school, I was always the quiet one, but now I seem completely at home with public speaking, commentary and otherwise being in front of large crowds of people. I wish I knew the secret - Iâd make millions! My GitHub is also pretty active, with contributions all over the place (OpenZFS, Nebula VPN, Gitea, Plausible Analytics, OpenCV, Ansibleâ¦). Because a lot of life happens online (especially in the last 5 years), many people havenât even seen pictures of me, let alone met me in person. I am not in fact a talking piece of fruit. For a while, I tried to stay anonymous, avoiding photos or videos of me on the internet. But since I discovered I enjoy public speaking, Iâve sort of given up on that (for the most part). By now, Iâm sure many people have speak. But, for those who donât know: I, like my father before me, am ginger ð¥ (the hair colour, not the plant). The exact specifics of how being ginger lead to âTheOrangeOneâ are sadly lost to time. Iâve owned theorangeone.net for well over a decade at this point. Unfortunately, itâs not a particularly original nickname, and I have to be fast to claim it when signing up to new services. In some places (where I wasnât fast enough) Iâm forced to sub out âTheâ for âRealâ, which has lead to some confusions, but not too many. Canonically, I prefer âTheOrangeOneâ, but as we all know, naming things is hard. Iâve been using Django since around the 1.8 release. My job at the time was at a Django development agency, so it was the first real Python framework Iâd used. The first few weeks there was my first exposure to Django, pip, package management and collaborative software engineering - it was quite a lot to learn at once. I didnât realise it at the time, but I was working working as a junior alongside a couple fairly well-known names in the Django community like Tom Christie (DRF, Starlette, HTTPX) and Jamie Matthews (django-readers, django-zen-queries). We mostly built single-page apps with React, so I learned Django and Django Rest Framework at the same time, which means I now often have to look back at the docs to remember how forms and templates work. As for contributing to Django, that came much later. My first commit to Django was in May 2024. Having used Django for a while, and written plenty of packages, Iâd never stopped to look at how upstream was developed. Around the time of DEP 14 kicking off, I needed to look a bit more at the inner workings of the Django project, to learn what was in store for me. When scrolling through Trac tickets, I found an interesting looking ticket, and got to work. At the time of writing, Iâve now closed 9 Trac tickets across 12 PRs, and some pretty cool features (simple block tags, better Accept header parsing, performance improvements to the URL router) now have my name on them (metaphorically speaking). I wouldnât call myself an âactiveâ contributor, but I try and keep an eye on the tickets and forum threads which interest me the most, and chime in when I can. Since itâs the first framework I learned, and so far has done everything I need, Iâve mostly used Django. For a few smaller services, Iâve leaned more towards Starlette and AIOHTTP, but for anything even slightly large Iâve just used Django - since Iâd end up recreating much of Django using the smaller frameworks anyway. A better (likely official) path for single-file Django (ie without some of the magic module handling) might help draw a few more people in and fill a few more of these âmicro-serviceâ style use-cases. Iâm a class-based views person - I like the encapsulation and easy extension of base views. As with any opinion on the internet, Iâm sure many people disagree with me, but to me itâs just personal preference. Iâm still surprised itâs a pattern not seen by many other Python frameworks. Following in the footsteps of Python, I often wonder if Django could also do with some dead battery removal (or at least extracting into separate packages). Django is a pretty big framework, and whilst the contrib apps are intended to be separate, they also require hooks and assumptions in other areas of the codebase. I might be wrong (it happens quite a lot), but I suspect some of those packages would be better suited externally, perhaps improving some developer momentum - and lightening the load for the Fellows. Djangoâs sitemap and syndication (RSS) frameworks are 2 places I wish would get some more love. Outside of Python, Iâm a big fan of Rust (as cliche as it may be). Whilst Rust is a popular language, there isnât really a âDjangoâ like (batteries included) framework - itâs all composing the pieces you need yourself. However, that doesnât stop people being very productive with it. As a result, most of the frameworks have very generic interfaces, letting developers pass state around as needed, rather than trying to do everything themselves. Outside of the obvious static typing debate (which Iâm in favour of), Iâd love to see Django embrace some dependencies, especially if they bring some performance improvements. It may end up being a bad idea, but it might also help those who want to use Djangoâs modules outside of Django. Many years ago, I tried to be a polyglot - switching between different programming languages (and frameworks) to find new ways of working and match the problem to the correct solution. Now, Iâve settled mostly on Python and Rust. They fit my needs well, Iâm very productive in them, and between the 2 thereâs not much they canât handle. Given my background, and the fact most sysadmin-y tools are written in it, Iâm really not a fan of Go. Over time, Iâve slowly stepped back from having big side projects - being a new dad sure takes up time and energy. Large projects ended up feeling too much like work outside of work, and I end up either getting distracted or bored. After work, I want to do something fun, not that seems like yet another job. Iâm the kind of person who gets the sudden urge to research something interesting for an evening, dive in, then not think about it again for several weeks. Itâs not the most productive way of doing things, which is why my posts are all over the place, but it doesnât feel much like work for me - I lean heavily on what interests me at any time to drive what I want to do. With that said, Iâm currently in the process of rebuilding my website. Of course, both the current and new versions are built on Django, but the new build should be easier to maintain, faster, and hopefully wonât need rewriting again in just a couple years. Most of my other projects have been small tools to make my home server that bit nicer. Professionally, Iâm not really a developer anymore. As a sysadmin (ish), much of my day-to-day doesnât involve much programming. I spend much more of my time deploying, monitoring and administering Django applications than I do writing them. My main project at the moment is helping port a large Java / JS deployment over to Django and Wagtail, running on Kubernetes with some very high and interesting stability and scaling requirements. Since most of my professional live has been at software agencies, Iâve tended to bounce between different projects, rather than sitting on a single one. So Iâm also supporting on a few other smaller projects as and when Iâm needed. django-tasks, of course! â¦ Oh right, a serious answerâ¦ I have to say, one of the most underrated modules in Django is django.utils. Itâs not as glamourous as the ORM, forms or cache, but itâs a treasure trove of useful methods. I personally always like looking at the internal helper functions large frameworks use - see the problems theyâve had to solve time and time again. Whilst thereâs not the same stability guarantees, Iâve definitely been helped out on a few occasions by some undocumented functions. In that theme, Iâm a fan of libraries which do one thing and do it well. I quite like small libraries which aim to solve a problem. Thereâs definitely a line before that becomes a problem (anyone remember left-pad?), but libraries which scope creep are often harder to work with than the more narrow-scoped ones, whilst the smaller ones just keep on working and making my life easier. For example, django-environ makes reading and parsing environment variables into settings really easy and clean, and django-decorator-include helps including other urlpatterns whilst wrapping them in a decorator - particularly helpful for 3rd-party packageâs URLs. Finally, Iâve got a real soft-spot for whitenoise (and ServeStatic for ASGI users). Djangoâs documentation deters people pretty hard from serving media and static files using Django - and rightly so in performance-critical environments. However, for most people, having to additionally maintain (and secure) nginx is more maintenance than necessary. whitenoise serves static files using Django directly, without any extra configuration, whilst also pre-compressing files for a nice performance boost. To me, itâs such a universally-useful library, Iâd love to see it it included in Django itself someday. Iâll throw a bonus shout out for granian, a new (ish) WSGI / ASGI server written in Rust. gunicorn has a near monopoly on running Python apps in production, especially in the WSGI space, so itâs nice to see a newcomer. granian isnât always faster, but doing the HTTP handling in Rust (and using popular libraries to do it) can improve stability and throughput, without holding the GIL. Iâve not run anything in production with it yet, but Iâve been using it on personal projects for almost a year without issue. Contrary to what Iâve already said, I actually like Djangoâs batteries. Sure, thereâs quite a few âdeadâ ones in need of some cleaning up and TLC, but having most of what I need already installed makes me far more productive. I donât need to think about how to render my form on the page, save the results as a model, or properly handle errors - everything âjust worksâ, and works together. Sure, batteries have their downsides - it makes swapping them out rather difficult, but Iâd rather ship my feature sooner than compare the trade-offs of different ORMs. The auto-reloading in django-tasks is only around 8 lines of code thanks to django.utils.autoreload being so easy to hook in to. Secondly: Forms, but not for the reasons you might think. Most forms are created to take submissions from the user, validate them, then probably save them to a model. However, theyâre great as general data validation. Iâve written plenty of views with complex querystring requirements, and leaning on forms to validate them saves a lot of boilerplate code. Sure, pydantic might be a bit faster and have more features, but given Iâm already productive with django.forms, and itâs already installed and well understood by other developers in my team, I donât feel the need to reach for something else. Finally, I wouldnât say itâs quite a âfavouriteâ, and itâs well-known as being far-from-perfect, but Iâve got a real soft-spot for the Django Admin. It lets me focus on building the core of an application, rather than the internal interface - particularly when there are no strong requirements for it, or itâs only going to be used by me and a few others. Since itâs a fair raw view of the database by default, Iâve definitely been bitten by some less-than-restrictive permissions, but thereâs generally all the hooks I need. I donât like building frontends, so only needing to build 1 rather than 2 makes me a lot happier, especially if it comes with authentication, permissions, read-only views and a dark mode ð! Iâd love to say itâs an interesting story, stroking my ego that I saved the day. But the reality is, as usual, far less glamorous. As an engineer, Iâve tended towards 2 specialties: Security and Performance, which usually go hand-in-hand. In early 2023, I was invited to join the Wagtail CMS Security team after reporting and subsequently helping fix a memory exhaustion issue. I was already involved in all things security at Torchbox, especially our ISO-27001 certification, so I was already known when I submitted a vulnerability report. Thibaud mentioned to me late last year that the project potentially looking for new members of the security team, to help with resourcing and some potential process improvements within the foundation. I naturally jumped at the opportunity - since the team is generally closed to new members and âfully-staffedâ. After a few gentle reminders (heâs a busy guy), I received a message from Sarah formally inviting me in March. Since then, Iâve tried to review every report which came through, and helped author a few patches. A few reports even had to be raised upstream with Pythonâs Security Response Team (PSRT). Itâs been an interesting experience, and Iâm looking forward to seeing how the team developers over the coming years. DEP 14 (the proposal to add a native background workers API to Django) has been a really interesting journey. Iâm beyond humbled to see the community interest behind it. When I started down this road, Iâd only intended to start the conversations and help rally the community interest. Since then, and 6000 lines of code later, Iâm mostly single-handedly writing a database-backed production-grade task system. Right now, weâre at a bit of a cross-roads. Many of the foundational parts work, relatively well. The difficulty comes with the more complex features: Retries, dependencies, robust execution. Building a task system is easy - building a reliable one people want to actually use is incredibly difficult. If anyone out there is interested in getting involved, please do! Report issues, fix bugs, contribute to design discussions. Most of the APIs are based on what I think looks sensible. Software this large, pivotal and complex canât be built in isolation - so it needs a diverse audience to ensure we (I) make the right decisions, and design an API people actually want to use that will last and scale for years to come. The next challenge on my list to tackle is timeouts - a highly requested feature. It sounds simple, but the reality is far from it. Many of those challenges sparked the topic of my upcoming PyCon UK talk later this year. My personal highlight was DjangoCon Europe 2024 - my first DjangoCon. I ended up bringing the stereotypically grey British weather with me, but I had a great week chatting Django with some interesting people, and putting faces to the names and handles Iâd seen online. After the talk announcing DEP 14 and background tasks, I was inundated with people voicing their support - many wondering how itâd taken this long. But personally, Iâm more interested in whatâs to come. Of course, thereâs django-tasks, but the next sets of releases are shaping up to be pretty interesting. Over the last 3-4 years or so, Iâve personally noticed a bit of a resurgence in peopleâs appetites for change in Django. The 6.x Steering Council have a lot of interesting ideas, and clearly the community agree. People are happy with what Django can do now, but want to bring it a little more up-to-date - and are happy to put in the work to do it. Only a few weeks ago, django-csp was included in core, making it easier to make more secure applications. Iâm sure thatâs just the start. The fact people are still keen on working on a framework which just celebrated 20 years shows it must be doing something right! Iâd like to thank whoever nominated me to be a DSF member in the first place. To this date, I have no idea who you are. Beyond that, Iâm just looking forward to seeing what comes of Django, and Python in general over the next few years. Thank you for doing the interview, Jake ! August 03, 2025 01:20 PM UTC Do the design patterns learned in other programming languages translate to coding in Python? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder's Weekly articles and projects.\n\n[ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] Do the design patterns learned in other programming languages translate to coding in Python? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder's Weekly articles and projects. [ Improve Your Python With ð Python Tricks ð â Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ] August 01, 2025 12:00 PM UTC 68th issue of Andrei Neagoie's must-read monthly Python Newsletter: Useless Design Patterns, Django turns 20, 330Ã faster Python, and much more. Read the full newsletter to get up-to-date with everything you need to know from last month. August 01, 2025 10:00 AM UTC Wing Python IDE version 11.0.3 has been released.  It improves Python code analysis,\nfixes problems debugging Django templates, fixes refactoring when the target file\nis in a hidden directory, and makes a number of other minor improvements.\nDownloads\nBe sure to Check for Updates in Wing's Help menu after downloading, to make\nsure that you have the latest hot fixes.\nWing Pro 11.0.3\nWing Personal 11.0.3\nWing 101 11.0.3\nWing 10 and earlier versions are not affected by installation of Wing 11 and\nmay be installed and used independently. However, project files for Wing 10\nand earlier are converted when opened by Wing 11 and should be saved under a\nnew name, since Wing 11 projects cannot be opened by older versions of Wing.\n New in Wing 11Improved AI Assisted DevelopmentWing 11 improves the user interface for AI assisted development by introducing two separate\ntools AI Coder and AI Chat. AI Coder can be used to write, redesign, or extend code\nin the current editor. AI Chat can be used to ask about code or iterate in creating a\ndesign or new code without directly modifying the code in an editor.\nWing 11's AI assisted development features now support not just OpenAI but also Claude, Grok,\nGemini, Perplexity, Mistral, Deepseek, and any other OpenAI completions API compatible AI provider.\nThis release also improves setting up AI request context, so that both automatically and\nmanually selected and described context items may be paired with an AI request. AI request\ncontexts can now be stored, optionally so they are shared by all projects, and may be used\nindependently with different AI features.\nAI requests can now also be stored in the current project or shared with all projects, and Wing\ncomes preconfigured with a set of commonly used requests. In addition to changing code in the\ncurrent editor, stored requests may create a new untitled file or run instead in AI Chat. Wing\n11 also introduces options for changing code within an editor, including replacing code,\ncommenting out code, or starting a diff/merge session to either accept or reject changes.\nWing 11 also supports using AI to generate commit messages based on the changes being committed\nto a revision control system.\nYou can now also configure multiple AI providers for easier access to different models.\nFor details see AI Assisted Development under Wing Manual in Wing 11's Help menu.\nPackage Management with uv Wing Pro 11 adds support for the uv package manager in the New Project dialog and the\nPackages tool.\nFor details see Project Manager > Creating Projects > Creating Python Environments and Package\nManager > Package Management with uv under Wing Manual in Wing 11's Help menu.\nImproved Python Code AnalysisWing 11 makes substantial improvements to Python code analysis, with better support for\nliterals such as dicts and sets, parametrized type aliases, typing.Self, type of\nvariables on the def or class line that declares them, generic classes with\n[...], __all__ in *.pyi files, subscripts in typing.Type and similar, type\naliases, type hints in strings, type[...] and tuple[...],\n@functools.cached_property, base classes found also in .pyi files, and\ntyping.Literal[...].\nUpdated LocalizationsWing 11 updates the German, French, and Russian localizations, and introduces a new experimental\nAI-generated Spanish localization. The Spanish localization and the new AI-generated strings in the\nFrench and Russian localizations may be accessed with the new User Interface > Include AI\nTranslated Strings preference.\nImproved diff/mergeWing Pro 11 adds floating buttons directly between the editors to make navigating differences\nand merging easier, allows undoing previously merged changes, and does a better job managing\nscratch buffers, scroll locking, and sizing of merged ranges.\nFor details see Difference and Merge under Wing Manual in Wing 11's Help menu.\nOther Minor Features and ImprovementsWing 11 also improves the custom key binding assignment user interface, adds a Files >\nAuto-Save Files When Wing Loses Focus preference, warns immediately when opening a project with\nan invalid Python Executable configuration, allows clearing recent menus, expands the set of\navailable special environment variables for project configuration, and makes a number of other\nbug fixes and usability improvements.\nChanges and IncompatibilitiesSince Wing 11 replaced the AI tool with AI Coder and AI Chat, and AI\nconfiguration is completely different than in Wing 10, you will need to reconfigure your\nAI integration manually in Wing 11. This is done with Manage AI Providers in the\nAI menu. After adding the first provider configuration, Wing will set that provider as\nthe default. You can switch between providers with Switch to Provider in the AI menu.\nIf you have questions, please don't hesitate to contact us at support@wingware.com. Wing Python IDE version 11.0.3 has been released.  It improves Python code analysis,\nfixes problems debugging Django templates, fixes refactoring when the target file\nis in a hidden directory, and makes a number of other minor improvements. Wing Pro 11.0.3 Wing Personal 11.0.3 Wing 101 11.0.3 Wing 10 and earlier versions are not affected by installation of Wing 11 and\nmay be installed and used independently. However, project files for Wing 10\nand earlier are converted when opened by Wing 11 and should be saved under a\nnew name, since Wing 11 projects cannot be opened by older versions of Wing. Wing 11 improves the user interface for AI assisted development by introducing two separate\ntools AI Coder and AI Chat. AI Coder can be used to write, redesign, or extend code\nin the current editor. AI Chat can be used to ask about code or iterate in creating a\ndesign or new code without directly modifying the code in an editor. Wing 11's AI assisted development features now support not just OpenAI but also Claude, Grok,\nGemini, Perplexity, Mistral, Deepseek, and any other OpenAI completions API compatible AI provider. This release also improves setting up AI request context, so that both automatically and\nmanually selected and described context items may be paired with an AI request. AI request\ncontexts can now be stored, optionally so they are shared by all projects, and may be used\nindependently with different AI features. AI requests can now also be stored in the current project or shared with all projects, and Wing\ncomes preconfigured with a set of commonly used requests. In addition to changing code in the\ncurrent editor, stored requests may create a new untitled file or run instead in AI Chat. Wing\n11 also introduces options for changing code within an editor, including replacing code,\ncommenting out code, or starting a diff/merge session to either accept or reject changes. Wing 11 also supports using AI to generate commit messages based on the changes being committed\nto a revision control system. You can now also configure multiple AI providers for easier access to different models. For details see AI Assisted Development under Wing Manual in Wing 11's Help menu. Wing Pro 11 adds support for the uv package manager in the New Project dialog and the\nPackages tool. For details see Project Manager > Creating Projects > Creating Python Environments and Package\nManager > Package Management with uv under Wing Manual in Wing 11's Help menu. Wing 11 makes substantial improvements to Python code analysis, with better support for\nliterals such as dicts and sets, parametrized type aliases, typing.Self, type of\nvariables on the def or class line that declares them, generic classes with\n[...], __all__ in *.pyi files, subscripts in typing.Type and similar, type\naliases, type hints in strings, type[...] and tuple[...],\n@functools.cached_property, base classes found also in .pyi files, and\ntyping.Literal[...]. Wing 11 updates the German, French, and Russian localizations, and introduces a new experimental\nAI-generated Spanish localization. The Spanish localization and the new AI-generated strings in the\nFrench and Russian localizations may be accessed with the new User Interface > Include AI\nTranslated Strings preference. Wing Pro 11 adds floating buttons directly between the editors to make navigating differences\nand merging easier, allows undoing previously merged changes, and does a better job managing\nscratch buffers, scroll locking, and sizing of merged ranges. For details see Difference and Merge under Wing Manual in Wing 11's Help menu. Wing 11 also improves the custom key binding assignment user interface, adds a Files >\nAuto-Save Files When Wing Loses Focus preference, warns immediately when opening a project with\nan invalid Python Executable configuration, allows clearing recent menus, expands the set of\navailable special environment variables for project configuration, and makes a number of other\nbug fixes and usability improvements. Since Wing 11 replaced the AI tool with AI Coder and AI Chat, and AI\nconfiguration is completely different than in Wing 10, you will need to reconfigure your\nAI integration manually in Wing 11. This is done with Manage AI Providers in the\nAI menu. After adding the first provider configuration, Wing will set that provider as\nthe default. You can switch between providers with Switch to Provider in the AI menu. If you have questions, please don't hesitate to contact us at support@wingware.com. August 01, 2025 01:00 AM UTC In this stream, I worked on a personal AI workflow that I’m building using LangGraph. I discussed human-in-the-loop and how to bring a person into the workflow process. August 01, 2025 12:00 AM UTC August 01, 2025 12:00 AM UTC SHell WIth Me combines magic-wormhole and tty-share for e2ee, p2p terminal sharing August 01, 2025 12:00 AM UTC Functions in Python can be defined within another function.\n\n\n\nTable of contents\n\nA function defined within a function\nA function returned from another function\nThe enclosing scope\nClosures with nested functions\nWhy nest functions within functions?\nDecorators involve nested functions\nNested functions are possible in Python\n\n\n\n\nA function defined within a function\nPython's functions can be defined pretty much anywhere.\nYou can even define a function inside a function:\ndef greet_me(name=\"friend\"):\n    def greet():\n        print(\"Hello\", name)\n    greet()\n\nWhen we call this greet_me function, it defines a greet a function and then calls that function:\n>>> greet_me()\nHello friend\n\nNote that the inner function is allowed to use the name from the outer function.\nA function returned from another function\nInstead of calling our inner â¦\n\nRead the full article: https://www.pythonmorsels.com/nested-functions/ Functions in Python can be defined within another function. Table of contents\n\nA function defined within a function\nA function returned from another function\nThe enclosing scope\nClosures with nested functions\nWhy nest functions within functions?\nDecorators involve nested functions\nNested functions are possible in Python Python's functions can be defined pretty much anywhere. You can even define a function inside a function: When we call this greet_me function, it defines a greet a function and then calls that function: Note that the inner function is allowed to use the name from the outer function. Instead of calling our inner â¦ July 31, 2025 03:30 PM UTC Hello Django ð Universe!\nð°ï¸â This is Djangonaut Space phoning home about Session 5! We're recruiting technical mentors (Navigators) to join our next ðstellarð mission.\nð©âð We are looking for people who regularly contribute to Django or a Django related package, that want to mentor others. Our next session will be Oct-Nov.\nð Come join us and be a cosmic contributor! Express your interest to be a mentor here.\nð Want to learn more about what it means to be a Navigator:\n\nHere's a high-level overview of the role\nHere's the workbook each Navigator is provided\n\nð¤ Interested people will have to complete a 30 minute meet & greet type interview with organizers.\nâ If you're interested in applying to be a Djangonaut, applications will open and close in September (dates to be determined). The latest information will be posted on our site, djangonaut.space. Please follow our social media accounts or subscribe to our newsletter for announcements.\nâï¸ We'll see you around the cosmos!\nDjangonaut Space session organizers Hello Django ð Universe! ð°ï¸â This is Djangonaut Space phoning home about Session 5! We're recruiting technical mentors (Navigators) to join our next ðstellarð mission. ð©âð We are looking for people who regularly contribute to Django or a Django related package, that want to mentor others. Our next session will be Oct-Nov. ð Come join us and be a cosmic contributor! Express your interest to be a mentor here. ð Want to learn more about what it means to be a Navigator: ð¤ Interested people will have to complete a 30 minute meet & greet type interview with organizers. â If you're interested in applying to be a Djangonaut, applications will open and close in September (dates to be determined). The latest information will be posted on our site, djangonaut.space. Please follow our social media accounts or subscribe to our newsletter for announcements. âï¸ We'll see you around the cosmos! Djangonaut Space session organizers July 31, 2025 02:34 PM UTC The Bazel Plugin for IntelliJ IDEA Is Now Generally Available!\nAfter much anticipation, we are finally ready to announce the general availability (GA) of the new Bazel plugin for IntelliJ IDEA, PyCharm, and GoLand â now developed by JetBrains! After months of focused development and valuable feedback from our EAP users, we’re officially launching our revamped Bazel experience.\nWhile we’ve been shipping updates regularly, the leap to our 2025.2 GA release marks a major milestone. Even though our primary focus for this release was on creating the best experience we can for Java, Kotlin, and Scala developers, we also brought support for the Python and Go ecosystems, and we will continue to maintain and improve it in the coming releases.\nIf you’re migrating from the previous plugin originally released by Google, you’ll notice a more straightforward workflow that aligns with the standard JetBrains IDE experience you expect from other build tool integrations such as Maven and Gradle. Now, let’s dive into what’s new!\nKey features in 2025.2\n\nBazel Query in Action\n\nGo is a go. We’re officially rolling out support for Go. You can now import your Go targets in Bazel projects into both IntelliJ IDEA (with the Go plugin) and GoLand. This brings the full IDE experience you rely on: code highlighting, completion, navigation, and the ability to run, debug, and get coverage for your tests.\nBuilt-in Bazel Query tool window: Go beyond sync and build with Bazel queries integrated directly into your IDE via their own dedicated tool window. Craft your queries with syntax completion and a helpful UI for flags to explore your project’s dependency graph without ever leaving the editor.\nDramatically faster indexing: We’ve optimized indexing to get you to your code faster. You can now use the import_depth and import_ijars settings in your .bazelproject file to prevent the indexing of deep transitive dependencies and index only header jars instead of full jars. Whatâs more, only the files directly referenced in your .bazelproject view are fully indexed for code intelligence, which can slash indexing times and memory usage in large projects with many auxiliary files.\n\nNew plugin, new user experience\nBack in December, we publicly announced the EAP (Early Access Program) version of our new plugin and defined what it would take to release it into GA, with an overview of the main differences between the original plugin and the new one.\nHereâs a quick recap for those moving from the older plugin: We’ve smoothed out the rough edges to make Bazel feel like a natural part of the IDE.\n\nSimplified project import: The old import wizard is a thing of the past. Now, simply open a directory containing your MODULE.bazel or WORKSPACE file. For more control, you can open a specific .bazelproject view file. If you manage a large monorepo, you can provide a default template for your team by checking in a template at tools/intellij/.managed.bazelproject.\nRedesigned UI elements: The Bazel tool window is now your central hub for actions like resyncing your project (with a Build and Resync option for generating sources) and keeping track of targets in your working set. We’ve also added a widget listing all targets the currently opened file belongs to. It allows you to run actions on these targets (build / test / jump to BUILD file / copy target label)\nReworked target mapping for JVM projects: A core improvement is the new internal representation for JVM targets, which mirrors the actual Bazel graph. This fundamental change enables more accurate highlighting, more accurate completions and more reliable refactoring.\n\nImprovements since 2025.1\nWindows compatibility\nWe understand that development doesn’t just happen on one OS. Thatâs why we worked on making our plugin compatible with Microsoft Windows, bringing most of the feature set to our Windows-based users.\nEnhanced Bazel configuration support\nWe believe editing your build files should be as easy as editing your source code, which is why we’ve improved the user experience for all Bazel-related configuration files.\nStarlark (.bzl, BUILD)\n\nStarlark Quick Documentation\n\nQuick documentation for Starlark rules: Hover over a Starlark rule or function to see its documentation directly in the editor. You’ll also get documentation as you type, guiding you through available parameters.\nAutomatic formatting: If you have buildifier on your PATH, the plugin will now automatically format your Starlark files on save\n\nBazel module configuration file (MODULE.bazel)\n\nIntelligent editing: The MODULE.bazel editor now offers smart completions for arguments and displays documentation as you edit.\n\nBazel project view file (.bazelproject) \n\n.bazelproject view highlighting and completions\n\nGuided editing: Get completions for section names and known values. The editor will now highlight completely unsupported sections as errors and sections that are supported in the old plugin originally by Google (but not in the new one) as warnings.\nManage directories from the Project view file tree: You can now right-click a directory in the project tree to add or remove it from your .bazelproject file, thus loading or unloading that directory in IntelliJ.\n\nBazelisk configuration file (.bazelversion):\n\nStay up to date: The editor will now highlight outdated Bazel versions specified in your .bazelversion file and offer a quick-fix to update to the latest release.\n\nLanguage ecosystem enhancements\n\nJVM:\n\nThe underlying project model mapping has been further improved, resulting in better performance during sync and more reliable refactorings for targets where glob patterns match the whole directory.\n\n\nScala:\n\nThe Bazel plugin now respects the scalacopts parameter in your scala_* targets, which unlocks Scala 3 highlighting features with the -Xsource:3 flag. At the same time, we’ve updated the Scala plugin to provide native integration with the Bazel plugin out of the box.\n\n\nPython:\n\nRun from the gutter: py_test and py_binary targets now get the familiar green Run arrow in the editor gutter.\nImproved dependency resolution: Python dependencies are now resolved correctly, enabling code navigation and eliminating false error highlighting.\nInterpreter from MODULE.bazel: The plugin now sets the Python interpreter based on what is defined in MODULE.bazel. This includes support for hermetic toolchains downloaded by rules_python â meaning you don’t need to have Python installed locally on your machine.\nDebugging: You can now attach the debugger to py_test targets.\n\n\n\nWhat happens to the Bazel plugin by Google?\nThe Bazel for IntelliJ plugin (also known as IJwB) by Google is being deprecated. Google has transferred the code ownership and maintenance to JetBrains. We will keep providing compatibility updates for new IntelliJ versions and critical fixes only throughout the year of 2025, but will be fully deprecating it in 2026. All our development effort for IntelliJ IDEA, GoLand, and PyCharm is now focused on the new plugin.\nThe Bazel for CLion plugin (CLwB) has also been transferred to JetBrains, and will continue to be actively developed. Learn more in the post Enhancing Bazel Support for CLion on the CLion Blog.\nGot feedback? Weâre listening!\nWe’re committed to making this the best Bazel experience possible. Please report any issues, ideas, or improvements straight to our issue tracker.\nFixed the problem yourself? We accept PRs on our hirschgarten repository.\nYou’ll also find us on the Bazel Community Slack, in the #intellij channel.\nHappy building! After much anticipation, we are finally ready to announce the general availability (GA) of the new Bazel plugin for IntelliJ IDEA, PyCharm, and GoLand â now developed by JetBrains! After months of focused development and valuable feedback from our EAP users, we’re officially launching our revamped Bazel experience. While we’ve been shipping updates regularly, the leap to our 2025.2 GA release marks a major milestone. Even though our primary focus for this release was on creating the best experience we can for Java, Kotlin, and Scala developers, we also brought support for the Python and Go ecosystems, and we will continue to maintain and improve it in the coming releases. If you’re migrating from the previous plugin originally released by Google, you’ll notice a more straightforward workflow that aligns with the standard JetBrains IDE experience you expect from other build tool integrations such as Maven and Gradle. Now, let’s dive into what’s new! Key features in 2025.2 Bazel Query in Action Back in December, we publicly announced the EAP (Early Access Program) version of our new plugin and defined what it would take to release it into GA, with an overview of the main differences between the original plugin and the new one. Hereâs a quick recap for those moving from the older plugin: We’ve smoothed out the rough edges to make Bazel feel like a natural part of the IDE. We understand that development doesn’t just happen on one OS. Thatâs why we worked on making our plugin compatible with Microsoft Windows, bringing most of the feature set to our Windows-based users. We believe editing your build files should be as easy as editing your source code, which is why we’ve improved the user experience for all Bazel-related configuration files. Starlark Quick Documentation .bazelproject view highlighting and completions The Bazel for IntelliJ plugin (also known as IJwB) by Google is being deprecated. Google has transferred the code ownership and maintenance to JetBrains. We will keep providing compatibility updates for new IntelliJ versions and critical fixes only throughout the year of 2025, but will be fully deprecating it in 2026. All our development effort for IntelliJ IDEA, GoLand, and PyCharm is now focused on the new plugin. The Bazel for CLion plugin (CLwB) has also been transferred to JetBrains, and will continue to be actively developed. Learn more in the post Enhancing Bazel Support for CLion on the CLion Blog. We’re committed to making this the best Bazel experience possible. Please report any issues, ideas, or improvements straight to our issue tracker. Fixed the problem yourself? We accept PRs on our hirschgarten repository. You’ll also find us on the Bazel Community Slack, in the #intellij channel. Happy building! July 31, 2025 01:40 PM UTC July 31, 2025 10:20 AM UTC"
  },
  {
    "url": "https://www.python.org/events/",
    "title": "Our Events | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. 08 Aug.\n        \n            2025\n        \n\n            2025\n        \n\nBuea, Cameroon 11 Aug.\n        \n            2025\n        \n\n         –\n            15 Aug.\n        \n\n        \n            2025\n        \n\nArusha, Tanzania 13 Aug.\n        \n            2025\n        \n\n         –\n            14 Aug.\n        \n\n        \n            2025\n        \n\nMogadishu, Somalia 15 Aug.\n        \n            2025\n        \n\n         –\n            17 Aug.\n        \n\n        \n            2025\n        \n\nSeoul, South Korea 18 Aug.\n        \n            2025\n        \n\n         –\n            22 Aug.\n        \n\n        \n            2025\n        \n\nKraków, Poland 23 Aug.\n        \n            2025\n        \n\n         –\n            24 Aug.\n        \n\n        \n            2025\n        \n\nHaringhata Farm, West Bengal, India 23 Aug.\n        \n            2025\n        \n\n            2025\n        \n\nLomé, Togo 26 Aug.\n        \n            2025\n        \n\n            2025\n        \n\n        \n            4pm UTC\n                 – 7pm\n                    UTC\n                \n        \n    \nAmsterdam, The Netherlands and Online 28 Aug.\n        \n            2025\n        \n\n         –\n            30 Aug.\n        \n\n        \n            2025\n        \n\nNairobi, Kenya 28 Aug.\n        \n            2025\n        \n\n         –\n            31 Aug.\n        \n\n        \n            2025\n        \n\nGliwice, Poland 29 Aug.\n        \n            2025\n        \n\n         –\n            30 Aug.\n        \n\n        \n            2025\n        \n\nAthens, Greece 01 Sept.\n        \n            2025\n        \n\n            2025\n        \n\nLimbe, Cameroon 01 Sept.\n        \n            2025\n        \n\n         –\n            03 Sept.\n        \n\n        \n            2025\n        \n\nBerlin, Germany 01 Sept.\n        \n            2025\n        \n\n         –\n            05 Sept.\n        \n\n        \n            2025\n        \n\nAbraka, Nigeria 04 Sept.\n        \n            2025\n        \n\n            2025\n        \n\n        \n            6pm UTC\n                 – 8pm\n                    UTC\n                \n        \n    \nLeiden, The Netherlands 06 Sept.\n        \n            2025\n        \n\n         –\n            07 Sept.\n        \n\n        \n            2025\n        \n\nTaipei City, Taiwan 09 Sept.\n        \n            2025\n        \n\n            2025\n        \n\nCinema City, Israel 10 Sept.\n        \n            2025\n        \n\n            2025\n        \n\n        \n            4pm UTC\n                 – 7pm\n                    UTC\n                \n        \n    \nDüsseldorf, Germany 12 Sept.\n        \n            2025\n        \n\n         –\n            14 Sept.\n        \n\n        \n            2025\n        \n\nTřeštice, Czechia 12 Sept.\n        \n            2025\n        \n\n         –\n            16 Sept.\n        \n\n        \n            2025\n        \n\nMelbourne, Australia 12 Sept.\n        \n            2025\n        \n\n            2025\n        \n\nAbraka, Nigeria 12 Sept.\n        \n            2025\n        \n\n         –\n            15 Sept.\n        \n\n        \n            2025\n        \n\nBengaluru, India 13 Sept.\n        \n            2025\n        \n\n         –\n            15 Sept.\n        \n\n        \n            2025\n        \n\nDosso, Niger 19 Sept.\n        \n            2025\n        \n\n         –\n            22 Sept.\n        \n\n        \n            2025\n        \n\nManchester, United Kingdom 26 Sept.\n        \n            2025\n        \n\n         –\n            27 Sept.\n        \n\n        \n            2025\n        \n\nHiroshima, Japan 27 Sept.\n        \n            2025\n        \n\n            2025\n        \n\nKano, Nigeria 27 Sept.\n        \n            2025\n        \n\n            2025\n        \n\nSanta Monica, CA, USA 30 Sept.\n        \n            2025\n        \n\n         –\n            01 Oct.\n        \n\n        \n            2025\n        \n\nParis, France 01 Oct.\n        \n            2025\n        \n\n            2025\n        \n\nYaounde, Cameroon 02 Oct.\n        \n            2025\n        \n\n         –\n            04 Oct.\n        \n\n        \n            2025\n        \n\nLagos, Nigeria 02 Oct.\n        \n            2025\n        \n\n         –\n            03 Oct.\n        \n\n        \n            2025\n        \n\nTallinn, Estonia 04 Oct.\n        \n            2025\n        \n\n            2025\n        \n\nAba, Abia State, Nigeria 06 Oct.\n        \n            2025\n        \n\n         –\n            08 Oct.\n        \n\n        \n            2025\n        \n\nOnline 08 Oct.\n        \n            2025\n        \n\n         –\n            10 Oct.\n        \n\n        \n            2025\n        \n\nOnline 08 Oct.\n        \n            2025\n        \n\n         –\n            12 Oct.\n        \n\n        \n            2025\n        \n\nJohannesburg, South Africa 11 Oct.\n        \n            2025\n        \n\n         –\n            12 Oct.\n        \n\n        \n            2025\n        \n\nKowloon, Hong Kong 13 Oct.\n        \n            2025\n        \n\n         –\n            19 Oct.\n        \n\n        \n            2025\n        \n\nJyväskylä, Finland 14 Oct.\n        \n            2025\n        \n\n         –\n            16 Oct.\n        \n\n        \n            2025\n        \n\nBrighton, UK 16 Oct.\n        \n            2025\n        \n\n            2025\n        \n\nUtrecht, The Netherlands 16 Oct.\n        \n            2025\n        \n\n         –\n            17 Oct.\n        \n\n        \n            2025\n        \n\nRapperswil, Switzerland 17 Oct.\n        \n            2025\n        \n\n         –\n            18 Oct.\n        \n\n        \n            2025\n        \n\nBangkok, Thailand 17 Oct.\n        \n            2025\n        \n\n         –\n            19 Oct.\n        \n\n        \n            2025\n        \n\nSevilla, Spain 17 Oct.\n        \n            2025\n        \n\n            2025\n        \n\nJyväskylä, Finland 18 Oct.\n        \n            2025\n        \n\n         –\n            19 Oct.\n        \n\n        \n            2025\n        \n\nSan Francisco, CA, USA 21 Oct.\n        \n            2025\n        \n\n         –\n            27 Oct.\n        \n\n        \n            2025\n        \n\nSao Paulo, Brazil 22 Oct.\n        \n            2025\n        \n\n         –\n            23 Oct.\n        \n\n        \n            2025\n        \n\nSan Francisco, USA 30 Oct.\n        \n            2025\n        \n\n         –\n            02 Nov.\n        \n\n        \n            2025\n        \n\nLyon, France 30 Oct.\n        \n            2025\n        \n\n         –\n            31 Oct.\n        \n\n        \n            2025\n        \n\nClarion Hotel Skanstull, Stockholm, Sweden 03 Nov.\n        \n            2025\n        \n\n         –\n            05 Nov.\n        \n\n        \n            2025\n        \n\nSan Diego, USA 15 Nov.\n        \n            2025\n        \n\n         –\n            16 Nov.\n        \n\n        \n            2025\n        \n\nDublin, Ireland 19 Nov.\n        \n            2025\n        \n\n         –\n            20 Nov.\n        \n\n        \n            2025\n        \n\nAbraka, Nigeria 20 March\n        \n            2026\n        \n\n         –\n            21 March\n        \n\n        \n            2026\n        \n\nVancouver, British Columbia, Canada 27 May\n        \n            2026\n        \n\n         –\n            30 May\n        \n\n        \n            2026\n        \n\nBologna, Italy 26 July\n        \n            2025\n        \n\n         –\n            27 July\n        \n\n        \n            2025\n        \n\nCleveland, USA 25 July\n        \n            2025\n        \n\n         –\n            26 July\n        \n\n        \n            2025\n        \n\nMoscow, Russia For Python events near you, please have a look at the Python events map. The Python events calendars are maintained by the events calendar team. Please see the events calendar project page for details on how to submit events, subscribe to the calendars, get Twitter feeds or embed them. Thank you. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/events/python-events/",
    "title": "Our Events | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. More 11 Aug.\n        \n            2025\n        \n\n         –\n            15 Aug.\n        \n\n        \n            2025\n        \n\nArusha, Tanzania 13 Aug.\n        \n            2025\n        \n\n         –\n            14 Aug.\n        \n\n        \n            2025\n        \n\nMogadishu, Somalia 15 Aug.\n        \n            2025\n        \n\n         –\n            17 Aug.\n        \n\n        \n            2025\n        \n\nSeoul, South Korea 18 Aug.\n        \n            2025\n        \n\n         –\n            22 Aug.\n        \n\n        \n            2025\n        \n\nKraków, Poland 23 Aug.\n        \n            2025\n        \n\n            2025\n        \n\nLomé, Togo 23 Aug.\n        \n            2025\n        \n\n         –\n            24 Aug.\n        \n\n        \n            2025\n        \n\nHaringhata Farm, West Bengal, India Subscribe to Python Event Calendars: For Python events near you, please have a look at the Python events map. The Python events calendars are maintained by the events calendar team. Please see the events calendar project page for details on how to submit events, subscribe to the calendars, get Twitter feeds or embed them. Thank you. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/events/python-user-group/",
    "title": "Our Events | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. More 08 Aug.\n        \n            2025\n        \n\n            2025\n        \n\nBuea, Cameroon 26 Aug.\n        \n            2025\n        \n\n            2025\n        \n\n        \n            4pm UTC\n                 – 7pm\n                    UTC\n                \n        \n    \nAmsterdam, The Netherlands and Online 01 Sept.\n        \n            2025\n        \n\n            2025\n        \n\nLimbe, Cameroon 01 Sept.\n        \n            2025\n        \n\n         –\n            05 Sept.\n        \n\n        \n            2025\n        \n\nAbraka, Nigeria 04 Sept.\n        \n            2025\n        \n\n            2025\n        \n\n        \n            6pm UTC\n                 – 8pm\n                    UTC\n                \n        \n    \nLeiden, The Netherlands 10 Sept.\n        \n            2025\n        \n\n            2025\n        \n\n        \n            4pm UTC\n                 – 7pm\n                    UTC\n                \n        \n    \nDüsseldorf, Germany Subscribe to Python Event Calendars: For Python events near you, please have a look at the Python events map. The Python events calendars are maintained by the events calendar team. Please see the events calendar project page for details on how to submit events, subscribe to the calendars, get Twitter feeds or embed them. Thank you. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/events/python-events/past/",
    "title": "Our Events | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. More 26 July\n        \n            2025\n        \n\n         –\n            27 July\n        \n\n        \n            2025\n        \n\nCleveland, USA 25 July\n        \n            2025\n        \n\n         –\n            26 July\n        \n\n        \n            2025\n        \n\nMoscow, Russia 14 July\n        \n            2025\n        \n\n         –\n            17 July\n        \n\n        \n            2025\n        \n\nSeattle, USA 14 July\n        \n            2025\n        \n\n         –\n            20 July\n        \n\n        \n            2025\n        \n\nPrague, Czech Republic 07 July\n        \n            2025\n        \n\n         –\n            13 July\n        \n\n        \n            2025\n        \n\nTacoma, WA, USA 04 July\n        \n            2025\n        \n\n         –\n            06 July\n        \n\n        \n            2025\n        \n\nBelém, Pará, Brazil Subscribe to Python Event Calendars: For Python events near you, please have a look at the Python events map. The Python events calendars are maintained by the events calendar team. Please see the events calendar project page for details on how to submit events, subscribe to the calendars, get Twitter feeds or embed them. Thank you. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/events/python-user-group/past/",
    "title": "Our Events | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. More 22 July\n        \n            2025\n        \n\n         –\n            23 July\n        \n\n        \n            2025\n        \n\nIndianapolis, IN, USA and Online 15 July\n        \n            2025\n        \n\n            2025\n        \n\n        \n            4pm UTC\n                 – 7pm\n                    UTC\n                \n        \n    \nAmsterdam, The Netherlands, and Online 10 July\n        \n            2025\n        \n\n            2025\n        \n\n        \n            6pm UTC\n                 – 8pm\n                    UTC\n                \n        \n    \nLeiden, The Netherlands 03 July\n        \n            2025\n        \n\n            2025\n        \n\n        \n            2am UTC\n                 – 4am\n                    UTC\n                \n        \n    \nOnline 29 June\n        \n            2025\n        \n\n            2025\n        \n\nSerekunda, Gambia 28 June\n        \n            2025\n        \n\n         –\n            29 June\n        \n\n        \n            2025\n        \n\nLeipzig, Germany Subscribe to Python Event Calendars: For Python events near you, please have a look at the Python events map. The Python events calendars are maintained by the events calendar team. Please see the events calendar project page for details on how to submit events, subscribe to the calendars, get Twitter feeds or embed them. Thank you. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://wiki.python.org/moin/PythonEventsCalendar#Submitting_an_Event",
    "title": "PythonEventsCalendar - Python Wiki",
    "content": "Python Events Calendar\n\nIntroduction\nThe Python events calendar is a combination of Google calendars maintained by the Python Calendar Team and published on the following sites: http://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) https://twitter.com/PythonEvents (@PythonEvents) http://legacy.python.org/ (in the side bar on the left of all pages) As of January 2020, we have more then 520 events listed and the calendars are proving to be a really useful resource for the Python community. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Introduction\nThe Python events calendar is a combination of Google calendars maintained by the Python Calendar Team and published on the following sites: http://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) https://twitter.com/PythonEvents (@PythonEvents) http://legacy.python.org/ (in the side bar on the left of all pages) As of January 2020, we have more then 520 events listed and the calendars are proving to be a really useful resource for the Python community. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. The Python events calendar is a combination of Google calendars maintained by the Python Calendar Team and published on the following sites: http://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) https://twitter.com/PythonEvents (@PythonEvents) http://legacy.python.org/ (in the side bar on the left of all pages) As of January 2020, we have more then 520 events listed and the calendars are proving to be a really useful resource for the Python community. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. http://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) https://twitter.com/PythonEvents (@PythonEvents) http://legacy.python.org/ (in the side bar on the left of all pages) As of January 2020, we have more then 520 events listed and the calendars are proving to be a really useful resource for the Python community. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources  \nSubmitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Contents\nPython Events Calendar\nIntroduction\nSubmitting an Event\nBulk Submission of Events\nAvailable Calendars\niCal Downloads\nRSS Feeds\nTwitter Feed\nEmbedding Calendars\nKnown sites embedding the calendars\nPython Calendar Team\nMailing List\nGuidelines for entries\nGeneral Requirements\nCalendar Choice\nNotes regarding calendar entries\nCalendar embedding code\nResources Submitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Submitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Submitting an Event\nIf you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. If you would like to get new events listed on these calendars, please write to events@python.org using the following email template: Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Please add the following event:\n\n * name of the event: \n * type of event: \n * focus on Python: \n * approximate number of attendees: \n * location (incl. country): \n * dates/times/recurrence (incl. time zone): \n * HTML link using the format <a href=\"http://url/\">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. the location (venue address, including city and country) a link with more details for the event (using HTML format \"<a href=\"http://url/\">name of the event</a>\"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. \"monthly, every second Thursday\". Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Notes: For online events, please use \"Online Event\" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. \nBulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these. Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. Bulk Submission of Events\nIn some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. In some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Please attach the event data as iCal file events.ics using the following entry format: title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. title: name of the event start and end dates: start day and end day of the event, entered as \"all day events\" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city, [state,] country description: <a href=\"http://url/\">name of the event</a> The same notes as above apply to bulk submissions. \nAvailable Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Available Calendars\nPython Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget \niCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Python Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget iCal Downloads\nPython Events Calendar Python User Group Calendar \nRSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Python Events Calendar Python User Group Calendar RSS Feeds\nNote: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Note: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar \nTwitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Python Events Calendar Python User Group Calendar Twitter Feed\n@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. \nEmbedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. @PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. Embedding Calendars\nIf you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. If you'd like to embed the calendar into your site, please ping us at events@python.org before doing so. We'd like to keep a list of sites where the calendars are displayed. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. You can find the embedding code further below on this page. \nKnown sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Known sites embedding the calendars\nhttps://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) \nPython Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. https://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) http://legacy.python.org/ (in the side bar on the left of all pages) https://pythonz.net/events (a Russian site) Python Calendar Team\nThe following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. The following people are team members with admin rights to the calendars: Marc-Andre Lemburg These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. These are our team members with editing rights: Helio Loureiro Abdur-Rahmaan Janhangeer Olivia Sauls If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. If you want to join the team, please sign up to the python-events ML and send a short intro about yourself together with a Google compatible email address to the list. Thanks. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. The following people are inactive team members: Mayank Pathak Giri Prasath Dinakaran Sergey Sokolov Anton Caceres Marcelo Elizeche Landó Richard Jones Mike Müller Tarek Ziade Tetsuya Morimoto Skip Montanaro Tim Golden Mats Wichmann Laura Creighton Carol Willing Oier Etxaniz \nMailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Mailing List\nThe team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. The team uses the python-events mailing list for discussion and to process events. The events@python.org address is an alias for the python-events mailing list. https://mail.python.org/mailman/listinfo/python-events  As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. https://mail.python.org/mailman/listinfo/python-events As team member, it is vital for you to subscribe to this list, otherwise you won't get the incoming event notifications. \nGuidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Guidelines for entries\nIn order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. In order to make the decision of whether to add an event and where to add it easier, we've setup a few guidelines: \nGeneral Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. General Requirements\nEvents have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. \nCalendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar, or even just the start date and then mention the end in the description. The same criteria for calendars apply to online events as well. Please add these using Online or Online Event as location. For hybrid events (both in-person and virtual), mentioning and Online after the in-person location is possible as well. Calendar Choice\nPython Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. \nNotes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Python Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Notes regarding calendar entries\nSome notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Some notes regarding entries for the admins: Please add the conference/event year to the title, if available. For user group meetings or other events that occur more often that's probably not necessary. For conference events please use \"All day\" entries (even for one day events), for user group events please add the start time and end time, if known. Full day user group events can also be added as \"All day\" event to give them a little more attention in the calendar. We use this for e.g. Django Girls workshops or similar full day events. Please include the location as \"City, Country\", not with the full address, since this can often be inaccurate and confused the Google maps mashup. For online events, please use \"Online\" or \"Online from City, Country\" (not sure whether this will work with mapping tool, but worth a try). Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. Please test the provided link and make sure that it's not a URL shortener URL or one which redirects to an unrelated website. We have had situations where the added events later linked to unrelated or spam pages. For familiar sounding event names, please check whether the requests are genuine. In case of naming collisions, try to get the organizers to talk to each other and sort out the issue. Please don't add more than the link to the description. If an event does not have a website, it's fine to add a one line text description. Background: The entries should not be used as advertisement text for events, only as reference. Please don't select an event color. People who subscribe to the calendars will have their own color preferences, so it's better to leave the default color set for all events. Reminders should not be setup for the events. They can be annoying for users subscribing to the calendars. We've always used \"Show me as: Available\" for new entries. No idea whether that matters or not. Please select \"Privacy: Default\" for new entries. This makes the entries public, since that's the default setting. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Please add a link to the event as description. We have standardized on using HTML links for this, e.g. <a href=\"http://www.pycon.fr/2012/>PyCon FR 2012</a>. Note that the Google calendar UI was changed some time ago to no longer accept HTML as input. Instead, you have to paste the HTML link directly into the description box. Calendar interfaces using iCal typically require adding the full HTML. All calendar admins can invite more people as calendar admins. When doing so, please add the new admins to the above list and ping the team by writing to events@python.org and also to get their email address added to the python-events mailing list. \nCalendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Calendar embedding code\nThis iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. This iframe code is used on pycon.org to display the calendar: <iframe src=\"https://www.google.com/calendar/embed?showTitle=0&amp;showCalendars=0&amp;height=400&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com&amp;color=%23125A12&amp;src=3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com&amp;color=%232F6309&amp;ctz=Europe%2FLondon\" style=\" border-width:0 \" width=\"800\" height=\"450\" frameborder=\"0\" scrolling=\"no\">\n  <a href=\"https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics\">Python Events iCal Calendar</a><br/>\n  <a href=\"https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics\">Python User Group iCal Calendar</a>\n</iframe>\nResources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Resources\nGoogle Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. Google Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. PythonEventsCalendar  (last edited 2025-07-26 09:09:05 by MarcAndreLemburg) Unable to edit the page? See the FrontPage for instructions."
  },
  {
    "url": "http://legacy.python.org/Algorithms",
    "title": "Page Not Found",
    "content": "Add an event to this calendar. Times are shown in UTC/GMT. Add an event to this calendar. The URL you requested was not found on this server. Try our home page, or our search engines - or use one of\nthe other links on the left hand navigation."
  },
  {
    "url": "https://www.python.org/dev/",
    "title": "Python Developer's Guide | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Python's Developer Guide can be found at https://devguide.python.org/. The pieces of documentation hosted here are: The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://github.com/python/cpython/issues",
    "title": "GitHub · Where software is built",
    "content": "We read every piece of feedback, and take your input very seriously. To see all available qualifiers, see our documentation. There was an error while loading. Please reload this page. There was an error while loading. Please reload this page. There was an error while loading. Please reload this page. There was an error while loading. Please reload this page."
  },
  {
    "url": "https://mail.python.org/mailman/listinfo/python-dev",
    "title": "Mailman 3 \nInfo | python-dev@python.org - python.org",
    "content": "Python core developers The discussions around the core Python development have moved on to our Discourse forum server: Core Development category Do not post general Python questions to this list.  For help with Python please see the Python help page. On this list the key Python developers discuss the future of the language and its implementation.  Topics include Python design issues, release mechanics, and maintenance of existing releases. More information on Python's development process can be found in the Python Developer's Guide. This is a fairly high volume mailing list so even the digests can result in substantial amounts of email occasionally.  Consider using\nGmane. To contact the list owners, use the following email address: python-dev-owner@python.org Archives To subscribe or unsubscribe from this list, please sign in first.\n        If you have not previously signed in, you may need to set up an account\n        with the appropriate email address. Sign In Postorius Documentation\n                    •\n                    GNU Mailman\n                    •\n                    Postorius Version 1.3.13"
  },
  {
    "url": "https://www.python.org/dev/core-mentorship/",
    "title": "Python Core Mentorship | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. The Python Core Mentorship Program is predicated on\nthe idea that Python core, and Python as a whole would be served by\nfurther lowering the barrier to entry of contribution to Python core\n(original proposal) The mission of the Python Core Mentor Program is to provide an open\nand welcoming place to connect students, programmers â and\nanyone interested in contributing to the Python core\ndevelopment. This project is based on the idea that the best way to\nwelcome new people into any project is a venue which connects them to\na variety of mentors who can assist in guiding them through the\ncontribution process, including discussions on lists such as python-dev,\nand python-ideas, the bug tracker, Git questions, code reviews, etc. Additionally, mentors assist in something incredibly critical to\nmaintain contributor interest: getting patches through the process and actually\ncommitted. We all know â not everyone who is mentor will have all the\nanswers, so mentors also act as conduits to others who will have the\nanswer. The most important point to make is that everyone is welcome and no\none, no matter who they are, is turned away. Keep to the code of conduct, and\nhelp those around you. The following code of conduct is not meant as a means for punishment, action\nor censorship for the mailing list or project. Instead, it is meant to set the\ntone and expectations and comfort level for mentors and those wishing to be\nmentored on the list. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/dev/security/",
    "title": "Python Security | Python.org",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. See the security issue information for pypi.org\nhere. The Python Software Foundation and the Python developer community take\nsecurity vulnerabilities very seriously.  A Python Security Response Team (PSRT) has\nbeen formed that does triage on all reported vulnerabilities and works to resolve them.  To reach the response team, send email to\nsecurity at python dot org. Only the response team members will see your\nemail, and it will be treated confidentially. The PSRT mailing list is tightly controlled, so you can have confidence that\nyour security issue will only be read by a highly trusted cabal of Python\ndevelopers.  If for some reason you wish to further encrypt your message to this mailing list\n(for example, if your mail system does not use TLS),\nyou can use our shared OpenPGP key which is also available on the public\nkeyservers. The PSRT accepts security reports for the following projects: The PSRT does not accept reports for third-party redistributions of Python or pip.\nThose reports should be directed towards their corresponding distribution security contact. The following is an overview of the vulnerability handling process from reporting to disclosure: While we sincerely appreciate and encourage reports of suspected security problems in supported Python releases and the PSF web infrastructure, please note that the Python Software Foundation does not run any bug bounty programs. We are a nonprofit organization, depending on donation and support from the community. Security advisories are published to multiple public locations. Advisories are sent via email to the\nsecurity-announce@python.org mailing list. Subscribe to the mailing list if you'd like to be updated\non newly published security advisories. The mailing list has a public archive including all historical advisories sent to the list. There is also an advisory database published to GitHub using the Open Source Vulnerability (OSV) format which can be consumed\nusing automated tooling. If you need to contact the Python Software Foundation CNA directly, such as for updating or disputing a CVE record,\nyou can send an email to cna at python dot org. Be sure that the CVE record in question was\nissued by the PSF CNA and not a different CNA. Key fingerprint: Key data: The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://github.com/python/pythondotorg/issues",
    "title": "GitHub · Where software is built",
    "content": "We read every piece of feedback, and take your input very seriously. To see all available qualifiers, see our documentation. There was an error while loading. Please reload this page. There was an error while loading. Please reload this page."
  },
  {
    "url": "https://status.python.org/",
    "title": "Python Infrastructure Status",
    "content": "Resend OTP in:  seconds Didn't receive the OTP?\n                    Resend OTP Resend OTP in: 30 seconds Didn't receive the OTP?\n                      Resend OTP The URL we should send the webhooks to We'll send you email if your endpoint fails No incidents or maintenance related to this downtime. No incidents reported today. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported. No incidents reported."
  },
  {
    "url": "https://www.python.org/psf-landing/",
    "title": "Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. In 2024, the PSF awarded $655,000 USD to 257 groups or individuals in 61 countries around the world. We support and maintain python.org,\r\n          The Python Package Index,\r\n          Python Documentation,\r\n          and many other services the Python Community relies on. We produce and underwrite the\r\n          PyCon US Conference,\r\n          the largest annual gathering for the Python community.\r\n         Support from sponsors, attendees, PyLadies, and CPython enabled us to award more than $384,000 USD in travel grants to 254 attendees for PyCon US 2025. Help the PSF promote, protect, and advance the Python programming language and community! Membership FAQ Assist the foundation's goals with a donation. The PSF is a recognized 501(c)(3) non-profit organization. How to Contribute Learn how you can help the PSF and the greater Python community! How to Volunteer Without our sponsors we wouldn't be able to help the Python community grow and prosper. Sponsorship Possibilities The Python Software Foundation welcomes grant proposals for projects related to the development of Python, Python-related technology, and educational resources. Proposal Guidelines, FAQ and Examples Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://www.python.org/about/legal/",
    "title": "Legal Statements | Python Software Foundation",
    "content": "Notice: While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience. Trademarks Python and PyCon are trademarks or registered trademarks of the\nPython Software Foundation. All other trademarks mentioned on this website are the property of their\nrespective owners. Copyright Except where otherwise specified, the contents of this website are\ncopyright Â© 1990-2014, Python Software Foundation,\n9450 SW Gemini Dr., ECM# 90772, Beaverton, OR 97008, USA.  All rights reserved. Licenses Python, its standard libraries, and Jython, are distributed under the\nPython License. The intellectual property rights behind\nPython and Jython are held and managed by the Python Software Foundation. The licenses, trademarks, and copyrights for other implementations of Python\n(such as IronPython, Stackless Python, and PyPy) may vary and are managed by\ntheir respective owners. Third-Party Content The Python Software Foundation (âPSFâ) does not claim ownership of any\nthird-party code or content (âthird party contentâ) placed on the web\nsite and has no obligation of any kind with respect to such third\nparty content. Any third party content provided in connection with\nthis web site is provided on a non-confidential basis. The PSF is free\nto use or disseminate such content on an unrestricted basis for any\npurpose, and third party content providers grant the PSF and all other\nusers of the web site an irrevocable, worldwide, royalty-free,\nnonexclusive license to reproduce, distribute, transmit, display,\nperform, and publish such content, including in digital form. Third party content providers represent and warrant that they have\nobtained the proper governmental authorizations for the export and\nreexport of any software or other content contributed to this web site\nby the third-party content provider, and further affirm that any\nUnited States-sourced cryptographic software is not intended for use\nby a foreign government end-user. Individuals and organizations are advised that the PyPI website is hosted in\nthe US, with mirrors in several countries outside the US (see\nhttp://www.pypi-mirrors.org/).  Any uploads of packages must comply\nwith United States export controls under the Export Administration\nRegulations. Legal Mailing List If you have any questions, please send them to the legal mailing list at:  legal@python.org. The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. Copyright ©2001-2025.\n                             Python Software Foundation\n                             Legal Statements\n                             Privacy Notice"
  },
  {
    "url": "https://policies.python.org/python.org/Privacy-Notice/",
    "title": "Privacy Notice - Python Software Foundation Policies",
    "content": "Last updated October 4, 2024 This privacy notice describes what personal information the Python Software Foundation (“PSF”)\ncollects from  users,\nwhen and how we share that information,\nand why.\nThis notice is an addendum to the PSF Privacy Notice,\nwhich also applies to  users. PSF may collect the following information from  users: The PSF uses some third party services to assist with operating online services supporting . Specifically, we use: Amazon Web Services (AWS) to host the PyCon US website. We store your registration information on AWS servers. Their use of this information is subject to the Data Processing Addendum between AWS and PSF and the AWS Privacy Notice (https://aws.amazon.com/privacy/).] Fastly to host the  website and services. Your information transits their servers. Their use of this information is subject to the Data Processing Terms between Fastly and PSF and the Fastly Privacy Policy. Sentry to aggregate error information from the  website and services. Some personal information may be stored on their servers. Their use of this information is subject to the Data Processing Addendum between Sentry and PSF and the Sentry Privacy Policy. Google Analytics to aggregate traffic analytics. Some personal information may be transited to their servers. Their use of this information is subject to the Google Ads Data Processing Terms between Google and PSF and the Google Privacy Policy. Plausible to aggregate traffic analytics. Some personal information may be stored on ther servers. Their use of this information is subject to the Plausible Analytics Data Processing Agreement between Plausible and PSF asnd the Plausible Privacy Policy. We use the information you provide in the following ways, in addition to the uses described in the PSF Privacy Notice:"
  },
  {
    "url": "http://legacy.python.org/Natural_language_processing",
    "title": "Page Not Found",
    "content": "Add an event to this calendar. Times are shown in UTC/GMT. Add an event to this calendar. The URL you requested was not found on this server. Try our home page, or our search engines - or use one of\nthe other links on the left hand navigation."
  },
  {
    "url": "https://developer.mozilla.org/en-US/",
    "title": "MDN Web Docs",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Documenting web technologies, including CSS, HTML, and JavaScript, since 2005. A new way to handle dates and times is being added to JavaScript. Let's take a look at Temporal, what problems it solves, the current state, and what you'll find in the new documentation about it on MDN. The CSS anchor positioning module defines features that allow you to tether elements together. Certain elements are defined as anchor elements; anchor-positioned elements can then have their size and position set based on the size and location of the anchor elements to which they are bound. This article explains the theory behind how the View Transition API works, how to create view transitions and customize the transition animations, and how to manipulate active view transitions. This covers view transitions for both DOM state updates in a single-page app (SPA), and navigating between documents in a multi-page app (MPA). The Temporal object enables date and time management in various scenarios, including built-in time zone and calendar representation, wall-clock time conversions, arithmetics, formatting, and more. It is designed as a full replacement for the Date object. MDN 2024 content projectsdeveloper.mozilla.org A new learning experience on MDNdeveloper.mozilla.org Introducing the new MDN Community pagedeveloper.mozilla.org [es] auto-fix content issuesmdn/translated-content [ru] sync translated contentmdn/translated-content 2025/07/10 æç¹ã®è±èªçã«åæmdn/translated-content Fix typo `Scx`->`scx` for short name of `Script_Extensions` propmdn/content 2025/07/10 æç¹ã®è±èªçã«åæmdn/translated-content 2025/07/29 æç¹ã®è±èªçã«åæmdn/translated-content the example comment is out of date, now Chrome give the same message with Firefox/Safarimdn/content Fix hyperlinkmdn/content Feat/property examplemdn/content <selectedcontent>: update to description and specificationmdn/content Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web",
    "title": "Web technology for developers | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support The open Web presents incredible opportunities for developers. To take full advantage of these technologies, you need to know how to use them. Below you'll find links to our Web technology documentation. The Web Developer Guides provide practical, how-to content to help you use Web technologies for your goals or needs. Tutorials to take you step-by-step through learning HTML, CSS, JavaScript, and Web APIs. Enabling as many people as possible to use websites, even when those people's abilities are limited in some way. Making content as available and interactive as possible, as soon as possible. Protecting users' personal data. Protecting users from data leaks and data theft, side-channel attacks, and attacks such as cross-site scripting, content injection, and click-jacking. Definitions of Web-related terms. JavaScript programming APIs you can use to build apps on the Web. HTML provides the fundamental building blocks for structuring Web documents and apps. Cascading Style Sheets are used to describe the appearance of Web documents and apps. JavaScript is the Web's native programming language. WebAssembly allows programs written in C, C++, Rust, Swift, C#, Go, and more to run on the Web. HTTP is the fundamental Internet protocol for fetching documents, stylesheets, scripts, images, videos, fonts, and other resources over the Web â and for sending data back to Web servers. Formats, codecs, protocols, APIs, and techniques for embedding and streaming video, audio, and image content in Web documents and apps. Scalable Vector Graphics lets you create images that scale smoothly to any size. MathML lets you display complex mathematical notation on the Web. Uniform Resource Identifiers are used by various technologies, including the browser itself via the address bar, to identify resources in various ways. WebDriver is a browser-automation mechanism for remotely controlling a browser by emulating the actions of a real person using the browser. It's widely used for cross-browser testing of Web apps. Web Extensions are a way for you to give users enhanced capabilities in their browsers â for doing things such as blocking ads and other content, customizing the appearance of pages, and more. Web App Manifests let you enable users to install Web apps to their device home screens, with aspects such as portrait/landscape screen orientation and display mode (e.g., full screen) pre-set. Progressive Web Apps provide a user experience similar to native mobile apps. OpenSearch allows a website to describe a search engine for itself, so that a browser or other client application can use that search engine. The Extensible Markup Language is a strict serialization of the Document Object Model. Extensible Stylesheet Language Transformations is an XML-based language used, in conjunction with specialized processing software, for the transformation of XML documents. XPath uses a non-XML syntax to provide a flexible way of addressing (pointing to) different parts of an XML document. It can also be used to test addressed nodes within a document to determine whether they match a pattern or not. EXSLT a set of extensions to XSLT. Documentation for the set of web-developer tools built into Firefox. Documentation for the set of web-developer tools built into Chrome. Documentation for the set of web-developer tools built into Safari. Documentation for the set of web-developer tools built into Edge. This page was last modified on Jul 29, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML",
    "title": "HTML: HyperText Markup Language | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support HTML (HyperText Markup Language) is the most basic building block of the Web. It defines the meaning and structure of web content. Other technologies besides HTML are generally used to describe a web page's appearance/presentation (CSS) or functionality/behavior (JavaScript). \"Hypertext\" refers to links that connect web pages to one another, either within a single website or between websites. Links are a fundamental aspect of the Web. By uploading content to the Internet and linking it to pages created by other people, you become an active participant in the World Wide Web. HTML uses \"markup\" to annotate text, images, and other content for display in a Web browser. HTML markup includes special \"elements\" such as <head>, <title>, <body>, <header>, <footer>, <article>, <section>, <p>, <div>, <span>, <img>, <aside>, <audio>, <canvas>, <datalist>, <details>, <embed>, <nav>, <search>, <output>, <progress>, <video>, <ul>, <ol>, <li> and many others. An HTML element is set off from other text in a document by \"tags\", which consist of the element name surrounded by < and >. The name of an element inside a tag is case-insensitive. That is, it can be written in uppercase, lowercase, or a mixture. For example, the <title> tag can be written as <Title>, <TITLE>, or in any other way. However, the convention and recommended practice is to write tags in lowercase. The articles below can help you learn more about HTML. This article provides a brief tour of what HTML is and how to use it, aimed at people who are completely new to web development. Our Learn web development section's HTML module teaches all the HTML fundamentals from the ground up. The HTML guides help you build with HTML on the web, covering topics such as forms, CORS, content preloading, and responsive images. Forms are a very important part of the Web â these provide much of the functionality you need for interacting with websites, e.g., registering and logging in, sending feedback, buying products, and more. This module gets you started with creating the client-side/front-end parts of forms. The crossorigin attribute, in combination with an appropriate CORS header, allows images defined by the <img> element to be loaded from foreign origins and used in a <canvas> element as if they were being loaded from the current origin. Some HTML elements that provide support for CORS, such as <img> or <video>, have a crossorigin attribute (crossOrigin property), which lets you configure the CORS requests for the element's fetched data. The preload value of the <link> element's rel attribute allows you to write declarative fetch requests in your HTML <head>, specifying resources that your pages will need very soon after loading, which you therefore want to start preloading early in the lifecycle of a page load, before the browser's main rendering machinery kicks in. This ensures that they are made available earlier and are less likely to block the page's first render, leading to performance improvements. This article provides a basic guide to how preload works. In this article, we'll learn about the concept of responsive images â images that work well on devices with widely differing screen sizes, resolutions, and other such features â and look at what tools HTML provides to help implement them. This helps to improve performance across different devices. HTML consists of elements, each of which may be modified by some number of attributes. HTML documents are connected to each other with links. Browse a list of all HTML elements. Elements in HTML have attributes. These are additional values that configure the elements or adjust their behavior in various ways. Global attributes may be specified on all HTML elements, even those not specified in the standard. This means that any non-standard elements must still permit these attributes, even though those elements make the document HTML5-noncompliant. HTML elements are usually \"inline-level\" or \"block-level\" elements. An inline-level element occupies only the space bounded by the tags that define it. A block-level element occupies the entire space of its parent element (container), thereby creating a \"block box\". HTML comments are used to add explanatory notes to the markup or to prevent the browser from interpreting specific parts of the document. The <audio> and <video> elements allow you to play audio and video media natively within your content without the need for external software support. HTML is comprised of several kinds of content, each of which is allowed to be used in certain contexts and is disallowed in others. Similarly, each context has a set of other content categories it can contain and elements that can or can't be used in them. This is a guide to these categories. Historical information on quirks mode and standards mode. This article covers most of the ways you use CSS to add color to HTML content, listing what parts of HTML documents can be colored and what CSS properties to use when doing so. This page was last modified on Jul 9, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS",
    "title": "CSS: Cascading Style Sheets | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media. CSS is among the core languages of the open web and is standardized across Web browsers according to W3C specifications. Previously, the development of various parts of CSS specification was done synchronously, which allowed the versioning of the latest recommendations. You might have heard about CSS1, CSS2.1, or even CSS3. There will never be a CSS3 or a CSS4; rather, everything is now just \"CSS\" with individual CSS modules having version numbers. After CSS 2.1, the scope of the specification increased significantly and the progress on different CSS modules started to differ so much, that it became more effective to develop and release recommendations separately per module. Instead of versioning the CSS specification, W3C now periodically takes a snapshot of the latest stable state of the CSS specification and individual modules progress. CSS modules now have version numbers, or levels, such as CSS Color Module Level 5. This article provides a brief tour of what CSS is and how to use it, aimed at people who are completely new to web development. Our Learn web development section's CSS basics module teaches CSS fundamentals from the ground up. Here we look at fundamentals including setting font, boldness, italics, line and letter spacing, drop shadows, and other text features. We round off the module by looking at applying custom fonts to your page, and styling lists and links. Now it's time to look at how to correctly lay out your boxes in relation to one another, and the browser viewport. This module looks at floats, positioning, other modern layout tools, and building responsive designs that will adapt to different devices, screen sizes, and resolutions. The CSS reference is an exhaustive reference for seasoned Web developers, describing every property and concept of CSS, including: The CSS layout cookbook aims to bring together recipes for common layout patterns, things you might need to implement in your sites. In addition to providing code you can use as a starting point in your projects, these recipes highlight the different ways layout specifications can be used and the choices you can make as a developer. This page was last modified on Jul 14, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
    "title": "JavaScript | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support JavaScript (JS) is a lightweight interpreted (or just-in-time compiled) programming language with first-class functions. While it is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat. JavaScript is a prototype-based, garbage-collected, dynamic language, supporting multiple paradigms such as imperative, functional, and object-oriented. JavaScript's dynamic capabilities include runtime object construction, variable parameter lists, function variables, dynamic script creation (via eval), object introspection (via for...in and Object utilities), and source-code recovery (JavaScript functions store their source text and can be retrieved through toString()). This section is dedicated to the JavaScript language itself, and not the parts that are specific to Web pages or other host environments. For information about APIs that are specific to Web pages, please see Web APIs and DOM. The standards for JavaScript are the ECMAScript Language Specification (ECMA-262) and the ECMAScript Internationalization API specification (ECMA-402). As soon as one browser implements a feature, we try to document it. This means that cases where some proposals for new ECMAScript features have already been implemented in browsers, documentation and examples in MDN articles may use some of those new features. Most of the time, this happens between the stages 3 and 4, and is usually before the spec is officially published. Do not confuse JavaScript with the Java programming language â JavaScript is not \"Interpreted Java\". Both \"Java\" and \"JavaScript\" are trademarks or registered trademarks of Oracle in the U.S. and other countries. However, the two programming languages have very different syntax, semantics, and use. JavaScript documentation of core language features (pure ECMAScript, for the most part) includes the following: For more information about JavaScript specifications and related technologies, see JavaScript technologies overview. Learn how to program in JavaScript from the ground up with our beginner's tutorials. This article provides a brief tour of what JavaScript is and how to use it, aimed at people who are completely new to web development. Our Learn web development section's JavaScript module teaches all the JavaScript fundamentals from the ground up. JavaScript frameworks are an essential part of modern front-end web development, providing developers with tried and tested tools for building scalable, interactive web applications. Many modern companies use frameworks as a standard part of their tooling, so many front-end development jobs now require framework experience. In this set of articles, we aim to give you a comfortable starting point to help you begin learning frameworks. A much more detailed guide to the JavaScript language, aimed at those with previous programming experience either in JavaScript or another language. The object-oriented nature of JavaScript is important to understand if you want to go further with your knowledge of the language and write more efficient code, therefore we've provided this module to help you. In this module, we take a look at asynchronous JavaScript, why it is important, and how it can be used to effectively handle potential blocking operations, such as fetching resources from a server. Explores what APIs are, and how to use some of the most common APIs you'll come across often in your development work. An overview of the basic syntax and semantics of JavaScript for those coming from other programming languages to get up to speed. Overview of available data structures in JavaScript. JavaScript provides three different value comparison operations: strict equality using ===, loose equality using ==, and the Object.is() method. How different methods that visit a group of object properties one-by-one handle the enumerability and ownership of properties. A closure is the combination of a function and the lexical environment within which that function was declared. Explanation of the widely misunderstood and underestimated prototype-based inheritance. Memory life cycle and garbage collection in JavaScript. Browse the complete JavaScript reference documentation. Get to know standard built-in objects: Array, Boolean, Error, Function, JSON, Math, Number, Object, RegExp, String, Map, Set, WeakMap, WeakSet, and others. Learn more about the behavior of JavaScript's operators instanceof, typeof, new, this, the operator precedence, and more. Learn how do-while, for-in, for-of, try-catch, let, var, const, if-else, switch, and more JavaScript statements and keywords work. Learn how to work with JavaScript's functions to develop your applications. JavaScript classes are the most appropriate way to do object-oriented programming. This page was last modified on Jul 8, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP",
    "title": "HTTP: Hypertext Transfer Protocol | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support HTTP is an application-layer protocol for transmitting hypermedia documents, such as HTML.\nIt was designed for communication between web browsers and web servers, but it can also be used for other purposes, such as machine-to-machine communication, programmatic access to APIs, and more. HTTP follows a classical client-server model, with a client opening a connection to make a request, then waiting until it receives a response from the server.\nHTTP is a stateless protocol, meaning that the server does not keep any session data between two requests, although the later addition of cookies adds state to some client-server interactions. The HTTP reference documentation contains detailed information about headers, request methods, status responses, and lists relevant specifications and standards documents. Message headers are used to send metadata about a resource or a HTTP message, and to describe the behavior of the client or the server. Request methods indicate the purpose of the request and what is expected if the request is successful.\nThe most common methods are GET and POST for retrieving and sending data to servers, respectively, but there are other methods which serve different purposes. Response status codes indicate the outcome of a specific HTTP request.\nResponses are grouped in five classes: informational, successful, redirections, client errors, and server errors. This page lists relevant resources about HTTP since it was first specified in the early 1990s. The following subsections are also notable: The Content-Security-Policy (CSP) response header allows website administrators to specify which resources the user agent is allowed to load for a given page.\nThis section lists directives that can be used in a CSP header, with individual documentation pages that describe how the directives work and how to use them. The Permissions-Policy response header provides a mechanism to allow or deny the use of browser features in a document or within any <iframe> element in the document.\nThis section lists directives that can be used in a Permissions-Policy header, with individual documentation pages that describe how the directives work and how to use them. HTTP is an extensible protocol that relies on concepts like resources and Uniform Resource Identifiers (URIs), a basic message structure, and client-server communication model.\nOn top of these concepts, numerous extensions have been developed over the years that add functionality and updated semantics, including additional HTTP methods and headers. The HTTP guides are listed in order from general overviews to specialized, use-case-driven topics.\nBeginners are encouraged to start with the foundational guides before exploring more focused articles. The basic features of HTTP, what it can do, its intended use in web architecture, and its position in the protocol stack. HTTP was created in the early 1990s and has been extended several times.\nThis article goes through its history and describes HTTP/0.9, HTTP/1.0, HTTP/1.1, through HTTP/2 and HTTP/3, as well as novelties introduced over the years. Describes the flow of an HTTP session, from establishing a connection, sending a request, to receiving a response. HTTP messages transmitted as requests and responses have a defined structure.\nThis article describes this general structure, its purpose, and the different types of messages. Since HTTP/1.0, different types of content can be transmitted.\nThis article explains how this is accomplished using the Content-Type header and the MIME standard.\nA shortlist of common types used by web developers can be found in Common MIME types. Browsers and servers compress their messages before sending them over the network to reduce the amount of data that needs to be transmitted, improving transfer speed and bandwidth utilization. Caching is a highly important mechanism for delivering fast experiences on the Web and for efficient use of resources.\nThis article describes different methods of caching and how to use HTTP headers to control them. Authentication is a way to verify the identity of a client when making requests to a server.\nIt ensures that only authorized users or systems can access certain resources. Although HTTP is a stateless protocol, a server can send a Set-Cookie header with the response.\nThe client then returns the cookie's value with every subsequent request to the server in the form of a Cookie request header.\nThis adds the ability to store and exchange a small amount of data which effectively adds state to some client-server interactions. URL redirection, also known as URL forwarding, is a technique to give more than one URL address to a page, a form, a whole website, or a web application.\nHTTP has a special kind of response, called a HTTP redirect, for this operation. In conditional requests, the outcome of a request depends on the value of a validator in the request.\nThis method is used heavily in caching and use cases such as resuming a download, preventing lost updates when modifying a document on the server, and more. A range request asks the server to send a specific part (or parts) of a resource back to a client instead of the full resource.\nRange requests are useful for cases when a client knows they need only part of a large file, or for cases where an application allows the user to pause and resume a download. HTTP defines a set of message headers, starting with Accept as a way for a browser to announce the format, language, or encoding it prefers.\nThis article explains how this advertisement happens, how the server is expected to react, and how it chooses the most adequate response to a request. HTTP/1.1 was the first version of HTTP to support persistent connections and pipelining.\nThis article explains both concepts, including the pros and cons of each. HTTP/1.1 provides a mechanism to upgrade an already-established connection to a different protocol using the Upgrade header.\nA client can upgrade a connection from HTTP/1.1 to HTTP/2, or an HTTP(S) connection to a WebSocket (ws / wss). A proxy can be on the user's local computer, or anywhere between the user's computer and a destination server on the Internet.\nThis page outlines some basics about proxies and introduces a few configuration options. Client Hints are a set of response headers that a server can use to proactively request information from a client about the device, network, user, and user-agent-specific preferences.\nThe server can then determine which resources to send, based on the information that the client chooses to provide. Network Error Logging is a mechanism that can be configured via the NEL HTTP response header.\nThis experimental header allows websites and applications to opt-in to receive reports about failed (or even successful) network fetches from supporting browsers. It's very rarely a good idea to use user agent sniffing to detect a browser, but there are edge cases that require it.\nThis document will guide you in doing this as correctly as possible when this is necessary, with an emphasis on considerations to make before embarking on this route. Permissions Policy provides mechanisms for web developers to explicitly declare what functionality can and cannot be used on a website.\nYou define a set of \"policies\" that restrict what APIs the site's code can access or modify the browser's default behavior for certain features. Cross-site HTTP requests are requests for resources from a different domain than that of the resource making the request.\nWeb pages today very commonly load cross-site resources, for example, a page 'Domain A' (http://domaina.example/) requests an image on 'Domain B' (http://domainb.foo/image.jpg) via the img element.\nCORS allows web developers to control how their site reacts to cross-site requests. CSP allows website administrators to use the Content-Security-Policy response header to control which resources the client is allowed to load for a given page.\nThe CSP guide describes the overall Content Security Policy mechanism which helps detect and mitigate certain types of attacks, including Cross-Site Scripting (XSS) and data injection attacks. CORP lets websites and applications opt in to protection against specific requests from other origins (such as those issued with elements like <script> and <img>), to mitigate speculative side-channel attacks. A collection of tips to help operational teams with creating secure web applications. Uniform Resource Identifiers (URIs) are used to describe and locate resources on the web and are an essential component in HTTP requests. This guide covers a few server configuration changes that may be necessary for your web server to correctly serve Ogg media files.\nThis information may also be useful if you encounter other media types your server isn't already configured to recognize. Helpful tools and resources for understanding and debugging HTTP. Network monitor A project designed to help developers, system administrators, and security professionals configure their sites safely and securely. Tools to check your cache-related headers. An HTTP/2 client, server and proxy implementation written in C with load test and benchmarking tools and an HPACK encoder and decoder. A command-line tool for transferring data specified with URL syntax.\nSupports HTTP, HTTPS, WS, WSS, among many other protocols. A very comprehensive article on browser internals and request flow through HTTP protocol. This page was last modified on Jul 4, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web/API",
    "title": "Web APIs | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support When writing code for the Web, there are a large number of Web APIs available. Below is a list of all the APIs and interfaces (object types) that you may be able to use while developing your Web app or site. Web APIs are typically used with JavaScript, although this doesn't always have to be the case. This is a list of all the APIs that are available. This is a list of all the interfaces (that is, types of objects) that are available. This page was last modified on Jul 29, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions",
    "title": "Browser extensions - Mozilla | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Extensions, or add-ons, can modify and enhance the capability of a browser. Extensions for Firefox are built using the WebExtensions API cross-browser technology. The technology for extensions in Firefox is, to a large extent, compatible with the extension API supported by Chromium-based browsers (such as Google Chrome, Microsoft Edge, Opera, Vivaldi). In most cases, extensions written for Chromium-based browsers run in Firefox with just a few changes. Whether you're just beginning or looking for more advanced advice, learn about how extensions work and use the WebExtensions API from our extensive range of tutorials and guides. Get comprehensive details about the methods, properties, types, and events of the WebExtensions APIs and full details about the manifest keys. Discover how to build and publish extensions for Firefox: get the lowdown on developer tools, publication and distribution, and porting on Extension Workshop. Note:\nIf you have ideas or questions or need help, you can reach us on the community forum or in the Add-ons Room on Matrix. Discover what extensions can do before building your first extension and your second extension. Learn about the anatomy of an extension and get an overview of the extension development and publication workflow, Firefox style. Explore a little deeper with a comprehensive selection of example extensions that you can run right in Firefox. Continue your learning by discovering a list of resources to follow. Get detailed information on the concepts that underpin extensions. Discover all the user interface components you can use in your extensions, with coding examples and tips. A range of tutorials to get you started on specific aspects of extension development. When you are ready to create your extension for Firefox or port your Chrome extension, head over to Extension Workshop. It has details on: Get comprehensive details about the methods, properties, types, and events for all the JavaScript APIs. There is also detailed information about the compatibility of each API with the major browsers. Most reference pages also include coding examples and links to the extension examples that use the API. Get full details about the manifest keys, including all their properties and settings. This page was last modified on Jul 17, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility",
    "title": "Accessibility | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Accessibility (often abbreviated to A11y â as in, \"a\", then 11 characters, and then \"y\") in web development means enabling as many people as possible to use websites, even when those people's abilities are limited in some way. For many people, technology makes things easier. For people with disabilities, technology makes things possible. Accessibility means developing content to be as accessible as possible, no matter an individual's physical and cognitive abilities and how they access the web. The Web is fundamentally designed to work for all people, whatever their hardware, software, language, location, or ability.\nWhen the Web meets this goal, it is accessible to people with a diverse range of hearing, movement, sight, and cognitive ability. \nâ (W3C - Accessibility) The Accessibility guides cover authoring principles, WCAG compliance, accessible widgets and navigation, mobile accessibility, and other key topics that will help you understand why accessibility is crucial for the web and how to improve it in your projects. This document lists guidelines and regulations, how-to's, and tools for checking and repairing accessibility problems with websites. This article discusses making web content accessible for those with vestibular disorders, and those who support them, by taking advantage of personalization and accessibility settings built into the operating systems. Most JavaScript libraries offer a library of client-side widgets that mimic the behavior of familiar desktop interfaces.\nWhile this results in a widget that looks like its desktop counterpart, there usually isn't enough semantic information in the markup to be usable by an assistive technology.\nThis document describes techniques to improve accessibility of such widgets. Until now, web developers who wanted to make their styled <div> and <span> based widgets accessible have lacked proper techniques.\nKeyboard accessibility is part of the minimum accessibility requirements, which a developer should be aware of.\nThis document describes techniques to make JavaScript widgets accessible with the keyboard. This document provides a concise checklist of accessibility requirements for mobile app developers. A set of articles that provide quick explanations to help you understand the steps that need to be taken to conform to the recommendations outlined in the Web Content Accessibility Guidelines (WCAG). Cognitive accessibility covers accessibility considerations for people with cognition and learning disabilities.\nThis document introduces cognitive accessibility and improving accessibility of the web for people with cognitive and learning differences. This document describes visual patterns that can induce physical symptoms in people who have photosensitive epilepsy, vestibular disorders, or other perceptual issues. While understanding color, luminance, and saturation is important for design and readability for all sighted users, they are essential for those with reduced vision and color-deficient vision and those with specific neurological, cognitive, and other impairments. Some types of visual web content can induce seizures in people with certain brain disorders.\nThis article helps you understand the types of content that can be problematic and find tools and strategies to help you avoid them. This is a collection of articles to learn how to use Accessible Rich Internet Applications (ARIA) to make your HTML documents more accessible. The MDN Accessibility Learning Area contains modern, up-to-date tutorials covering the following accessibility essentials: This article starts off the module with a good look at what accessibility actually is â this includes what groups of people we need to consider and why, what tools different people use to interact with the Web, and how we can make accessibility part of our web development workflow. A great deal of web content can be made accessible just by making sure that the correct HTML elements are used for the correct purpose at all times. This article looks in detail at how HTML can be used to ensure maximum accessibility. CSS and JavaScript, when used properly, also have the potential to allow for accessible web experiences. They can significantly harm accessibility if misused. This article outlines some CSS and JavaScript best practices that should be considered to ensure that even complex content is as accessible as possible. Following on from the previous article, sometimes making complex UI controls that involve unsemantic HTML and dynamic JavaScript-updated content can be difficult. WAI-ARIA is a technology that can help with such problems by adding in further semantics that browsers and assistive technologies can recognize and let users know what is going on. Here we'll show how to use it at a basic level to improve accessibility. Another category of content that can create accessibility problems is multimedia â video, audio, and image content need to be given proper textual alternatives so that they can be understood by assistive technologies and their users. This article shows how. With web access on mobile devices being so popular and popular platforms such as iOS and Android having fully-fledged accessibility tools, it is important to consider the accessibility of your web content on these platforms. This article looks at mobile-specific accessibility considerations. Reference documentation for Accessible Rich Internet Applications (ARIA) attributes and roles. This page was last modified on May 7, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development",
    "title": "Learn web development | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Welcome to MDN Learning Web Development (also known as Learn). This resource provides a structured set of tutorials teaching the essential skills and practices for being a successful front-end developer, along with challenges and further recommended resources. Teaches the essential skills and knowledge every front-end developer needs for career success and industry relevance, as defined in the MDN Curriculum. Created by the MDN community and refined with insights from students, educators, and developers from the broader web community. Designed to take you from \"beginner\" to \"comfortable\" (not \"beginner\" to \"expert\"), giving you enough knowledge to use more advanced resources (such as the rest of MDN). Note:\nLast updated: December 2024 (see changelog). Our Getting started modules provide setup tutorials and essential concepts and background information for complete beginners. You should start here if you are a complete beginner (i.e., you've not installed a code editor or written any code yet). Our Core modules provide a structured set of tutorials teaching the essential skills and practices for being a successful front-end developer. Our Extension modules cover useful additional skills to learn as you start to expand your knowledge and develop specialisms. Go onto these after you finish our Core. Use our modules to guide your teaching, check out our Educators page for more ideas, or enroll your students in Scrimba's Frontend Developer Career PathMDN learning partner. Throughout the course, you'll find several articles designed to help you assess whether you have understood what we are teaching you in the course. There are two types: Most of the questions feature HTML/CSS/JavaScript code blocks that show the starting code for each task. The recommended way to complete each one is to press the \"Play\" button in one of the code blocks to open the example in the MDN Playground and then edit the code according to the question instructions. If you make a mistake, you can clear your work using the Reset button in the MDN Playground. If you get really stuck, you can (usually) view the solution at the bottom of each question section, or reach out for help. Note:\nIf you'd prefer to work in your own editor or in an online editor (such as CodePen or JSFiddle), you can copy the code from the MDN Playground into your chosen environment. Some questions don't include code blocks to start from, and instead ask you to download starter files to work on your local machine with. Sometimes this is due to the complex nature of the question, and sometimes we just wanted to change things up a bit. The code examples you'll encounter in the Learning Area are all available on GitHub: If you want to get in touch with us about anything, use the communication channels. We'd love to hear from you about anything you think is wrong or missing on the site, requests for new learning topics, requests for help with items you don't understand, or any other questions or concerns. If you're interested in helping develop/improve the content, take a look at how you can help and get in touch! We are more than happy to talk to you, whether you are a learner, teacher, experienced web developer, or someone else interested in helping to improve the learning experience. Scrimba's Frontend Developer Career Path teaches all you need to know to be a competent front-end web developer, with fun interactive lessons and challenges, knowledgeable teachers, and a supportive community. Go from zero to landing your first front-end job! Many of the course components are available as standalone free versions. A great interactive site for learning programming languages from scratch. Interactive site with tutorials and projects to learn web development. An excellent resource for aspiring web developers â Learn JavaScript in an interactive environment, with short lessons and interactive tests, guided by automated assessment. The first 40 lessons are free, and the complete course is available for a small one-time payment. This page was last modified on Jul 24, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Structuring_content",
    "title": "Structuring content with HTML - Learn web development | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support HTML is the technology that defines the content and structure of any website. Written properly, it should also define the semantics (meaning) of the content in a machine-readable way, which is vital for accessibility, search engine optimization, and making use of the built-in features browsers provide for content to work optimally. This module covers the basics of the language, before looking at key areas such as document structure, links, lists, images, forms, and more. Before starting this module, you don't need any previous HTML knowledge, but you should have at least basic familiarity with using computers and using the web passively (i.e., just looking at it and consuming content). You should have a basic work environment set up (as detailed in Installing basic software), and understand how to create and manage files (as detailed in Dealing with files). Both are parts of our Getting started with the web complete beginner's module. Note:\nIf you are working on a computer, tablet, or another device where you can't create files, you can try running the code in an online editor such as CodePen or JSFiddle. Covers the absolute basics of HTML, to get you started â we define elements, attributes, and other important terms, and show where they fit in the language. We also show how a typical HTML page is structured and how an HTML element is structured, and explain other important basic language features. Along the way, we'll play with some HTML to get you interested! The head of an HTML document is the part that is not displayed in the web browser when the page is loaded. It contains metadata information such as the page <title>, links to CSS (if you want to style your HTML content with CSS), links to custom favicons, and metadata (data about the HTML, such as who wrote it, and important keywords that describe the document). One of HTML's main jobs is to give text structure so that a browser can display an HTML document the way its developer intends. This article explains how HTML can be used to provide fundamental page structure by defining headings and paragraphs. The previous article looked at why semantics are important in HTML, and focused on headings and paragraphs. This article continues on the theme of semantics, looking at HTML elements that apply emphasis and importance to text (parallel to italics and bold text in print media). Lists are everywhere in lifeâfrom your shopping list to the list of directions you subconsciously follow to get to your house every day, to the lists of instructions you are following in these tutorials! It may not surprise you that HTML has a convenient set of elements that allows us to define different types of list. On the web, we have three types of lists: unordered, ordered, and description lists. This lesson shows you how to use the different types. In addition to defining individual parts of your page (such as \"a paragraph\" or \"an image\"), HTML also boasts a number of block level elements used to define areas of your website (such as \"the header\", \"the navigation menu\", \"the main content column\"). This article looks into how to plan a basic website structure, and write the HTML to represent this structure. There are many other elements in HTML for defining text semantics, which we didn't get to in the Emphasis and importance article. The elements described in this article are less known, but still useful to know about (and this is still not a complete list by any means). Here you'll learn about marking up quotations, computer code and other related text, subscript and superscript, contact information, and more. Links (also known as hyperlinks) are really important â they are what makes the Web a web. This article shows the syntax required to make a link, and discusses link best practices. We all learn to write a letter sooner or later; it is also a useful example to test our text formatting skills. In this challenge, you'll have a letter to mark up as a test for your HTML text formatting skills, as well as hyperlinks and proper use of the HTML <head> element. Structuring a page of content ready for laying it out using CSS is a very important skill to master, so in this challenge you'll be tested on your ability to think about how a page might end up looking, and choose appropriate structural semantics to build a layout on top of. In the beginning, the web was just text, and it was really quite boring. Fortunately, it wasn't too long before the ability to embed images (and other more interesting types of content) inside web pages was added. In this article we'll look at how to use the <img> element in depth, including the basics, annotating it with captions using <figure>, and detailing how it relates to CSS background images. Now that we are comfortable with adding simple images to a webpage, the next step is to start adding video and audio players to your HTML documents! In this article we'll look at doing just that with the <video> and <audio> elements; we'll then finish off by looking at how to add captions/subtitles to your videos. In this challenge, we'll test your knowledge of some of the techniques discussed in the last couple of lessons, getting you to add some images and video to a funky splash page all about Mozilla! This article gets you started with HTML tables, covering the very basics such as rows, cells, headings, making cells span multiple columns and rows, and how to group together all the cells in a column for styling purposes. In this article we look at more HTML table accessibility features such as captions/summaries, grouping your rows into table head, body and footer sections, and scoping columns and rows. In this challenge, we provide you with some data on the planets in our solar system. Your job is to structure it into an accessible HTML table. HTML forms and buttons are powerful tools for interacting with users â most commonly they are used for collecting data from users or allowing them to control a user interface. In this article we provide an introduction to the basics of forms and buttons. Writing HTML is fine, but what if something goes wrong, and you can't work out where the error in the code is? This article will introduce you to some tools that can help you find and fix errors in HTML. This page lists HTML tests you can try so you can verify if you've understood the content in this module. These tutorials are not part of the learning pathway, but they are interesting nonetheless â you should consider these as stretch goals, to optionally study when you are done with the main Core articles. Vector graphics are very useful in many circumstances â they have small file sizes and are highly scalable, so they don't pixelate when zoomed in or blown up to a large size. In this article we'll show you how to include one in your webpage. Developers commonly think of embedding media such as images, video and audio into web pages. In this article we take somewhat of a sideways step, looking at some elements that allow you to embed a wide variety of content types into your webpages: the <iframe>, <embed> and <object> elements. <iframe>s are for embedding other web pages, and the other two allow you to embed external resources such as PDF files. Scrimba's Learn HTML and CSS course teaches you HTML and CSS through building and deploying five awesome projects, with fun interactive lessons and challenges taught by knowledgeable teachers. Another useful resource for learning HTML basics. This interactive lesson provides a useful description of HTML, with particular emphasis on why the semantic aspect of it is important. This page was last modified on Jul 3, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics",
    "title": "CSS styling basics - Learn web development | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support CSS (Cascading Style Sheets) is used to style and layout web pages â for example, to alter the font, color, size, and spacing of your content, split it into multiple columns, or add animations and other decorative features. This module provides all the CSS fundamentals you'll need for now, including syntax, features, and techniques. Before starting this module, you should have a basic work environment set up (as detailed in Installing basic software), and understand how to create and manage files (as detailed in Dealing with files). You should also be familiar with HTML (work through our Structuring content with HTML module if not). Note:\nIf you are working on a computer, tablet, or another device where you can't create files, you can try running the code in an online editor such as CodePen or JSFiddle. CSS allows you to create great-looking web pages, but how does it work under the hood? This article explains what CSS, what the basic syntax looks like, and how your browser applies CSS to HTML to style it. In this article, we will take a simple HTML document and apply CSS to it, learning some practical details of the language along the way. We will also review the CSS syntax features you've not looked at yet. In this challenge you will style a simple bio page, testing you on some of the skills you learned in the last couple of lessons including writing selectors and text styling. In this article we'll recap some selector fundamentals, including the basic type, class, and ID selectors. As you know from your study of HTML, elements can have attributes that give further detail about the element being marked up. In CSS you can use attribute selectors to target elements with certain attributes. This lesson will show you how to use these very useful selectors. The next set of selectors we will look at are referred to as pseudo-classes and pseudo-elements. There are a large number of these, and they often serve quite specific purposes. Once you know how to use them, you can look through the different types to see if there is something which works for the task you are trying to achieve. The final selectors we will look at are called combinators. Combinators are used to combine other selectors in a way that allows us to select elements based on their location in the DOM relative to other elements (for example, child or sibling). Everything in CSS has a box around it, and understanding these boxes is key to being able to create more complex layouts with CSS, or to align items with other items. In this lesson, we will take a look at the CSS Box model. You'll get an understanding of how it works and the terminology that relates to it. The aim of this lesson is to develop your understanding of some of the most fundamental concepts of CSS â the cascade, specificity, and inheritance â which control how CSS is applied to HTML and how conflicts between style declarations are resolved. CSS rules contain declarations, which in turn are composed of properties and values. Each property used in CSS has a value type that describes what kind of values it is allowed to have. In this lesson, we will take a look at some of the most frequently used value types, what they are, and how they work. Understanding how big the different features in your design will be is important. In this lesson we will summarize the various ways elements get a size via CSS and define a few terms about sizing that will help you in the future. In this lesson, we will take a look at some of the creative things you can do with CSS backgrounds and borders. From adding gradients, background images, and rounded corners, backgrounds and borders are the answer to a lot of styling questions in CSS. Overflow is what happens when there is too much content to fit inside an element box. In this lesson, you will learn how to manage overflow using CSS. In this lesson we will take a look at how certain special elements are treated in CSS. Images, other media, and form elements behave a little differently from regular boxes in terms of your ability to style them with CSS. Understanding what is and isn't possible can save some frustration, and this lesson will highlight some of the main things that you need to know. Styling an HTML table isn't the most glamorous job in the world, but sometimes we all have to do it. This article explains how to make HTML tables look good, with some specific table styling techniques highlighted. This article will give you guidance on how to go about debugging a CSS problem, and show you how the DevTools included in all modern browsers can help you to find out what is going on. This challenge provides a number of related exercises that must be completed in order to create the final design â a business card/gamer card/social media profile. If you want to make the right impression, writing a letter on nice letterheaded paper can be a really good start. In this challenge you will create an online template to achieve such a look. In this challenge, you'll get some more practice in creating cool-looking boxes by trying to create an eye-catching box. These tutorials are not part of the learning pathway, but they are interesting nonetheless â you should consider these as stretch goals, to optionally study when you are done with the main Core articles. This article acts as a box of tricks, providing an introduction to some interesting advanced styling features such as box shadows, blend modes, and filters. This lesson aims to introduce you to cascade layers, a more advanced feature that builds on the fundamental concepts of the CSS cascade and CSS specificity. In recent years, CSS has evolved in order to better support different directionality of content, including right-to-left but also top-to-bottom content (such as Japanese) â these different directionalities are called writing modes. As you progress in your study and begin to work with layout, an understanding of writing modes will be very helpful to you, therefore we will introduce them in this article. As you start to work on larger stylesheets and big projects you will discover that maintaining a huge CSS file can be challenging. In this article we will take a brief look at some best practices for writing your CSS to make it easily maintainable, and some of the solutions you will find in use by others to help improve maintainability. Scrimba's Learn HTML and CSS course teaches you HTML and CSS through building and deploying five awesome projects, with fun interactive lessons and challenges taught by knowledgeable teachers. This interactive lesson provides a useful introduction to CSS syntax. This page was last modified on Jul 3, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Scripting",
    "title": "Dynamic scripting with JavaScript - Learn web development | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support JavaScript is a huge topic, with so many different features, styles, and techniques to learn, and so many APIs and tools built on top of it. This module focuses mostly on the essentials of the core language, plus some key surrounding topics â learning these topics will give you a solid basis to work from. Before starting this module, you don't need any previous JavaScript knowledge, but you should have worked through the previous modules in the course. You should at least know HTML and the basic fundamentals of CSS. Note:\nIf you are working on a computer, tablet, or another device where you can't create files, you can try running the code in an online editor such as CodePen or JSFiddle. Welcome to the MDN beginner's JavaScript course! In this first article we will look at JavaScript from a high level, answering questions such as \"what is it?\", and \"what is it doing?\", and making sure you are comfortable with JavaScript's purpose. Now you've learned something about the theory of JavaScript, and what you can do with it, we are going to give you a crash course on the basic features of JavaScript via a completely practical tutorial. Here you'll build up a simple \"Guess the number\" game, step by step. When you built up the \"Guess the number\" game in the previous article, you may have found that it didn't work. Never fear â this article aims to save you from tearing your hair out over such problems by providing you with some simple tips on how to find and fix errors in JavaScript programs. After reading the last couple of articles you should now know what JavaScript is, what it can do for you, how you use it alongside other web technologies, and what its main features look like from a high level. In this article, we will get down to the real basics, looking at how to work with the most basic building blocks of JavaScript â Variables. At this point in the course, we discuss maths in JavaScript â how we can combine operators and other features to successfully manipulate numbers to do our bidding. Next, we'll turn our attention to strings â this is what pieces of text are called in programming. In this article, we'll look at all the common things that you really ought to know about strings when learning JavaScript, such as creating strings, escaping quotes in strings, and joining them together. Now we've looked at the very basics of strings, let's move up a gear and start thinking about what useful operations we can do on strings with built-in methods, such as finding the length of a text string, joining and splitting strings, substituting one character in a string for another, and more. In this lesson we'll look at arrays â a neat way of storing a list of data items under a single variable name. Here we look at why this is useful, then explore how to create an array, retrieve, add, and remove items stored in an array, and more besides. In this challenge, you'll be tasked with taking some of the knowledge you've picked up in this module's articles and applying it to creating a fun app that generates random silly stories. Have fun! In any programming language, the code needs to make decisions and carry out actions accordingly depending on different inputs. For example, in a game, if the player's number of lives is 0, then it's game over. In a weather app, if it is being looked at in the morning, show a sunrise graphic; show stars and a moon if it is nighttime. In this article, we'll explore how so-called conditional statements work in JavaScript. Programming languages are very useful for rapidly completing repetitive tasks, from multiple basic calculations to just about any other situation where you've got a lot of similar items of work to complete. Here we'll look at the loop structures available in JavaScript that handle such needs. Another essential concept in coding is functions, which allow you to store a piece of code that does a single task inside a defined block, and then call that code whenever you need it using a single short command â rather than having to type out the same code multiple times. In this article we'll explore fundamental concepts behind functions such as basic syntax, how to invoke and define them, scope, and parameters. With most of the essential theory dealt with in the previous article, this article provides practical experience. Here you will get some practice building your own, custom function. Along the way, we'll also explain some useful details of dealing with functions. There's one last essential concept about functions for us to discuss â return values. Some functions don't return a significant value, but others do. It's important to understand what their values are, how to use them in your code, and how to make functions return useful values. We'll cover all of these below. In this article, we discuss some important concepts surrounding events, and look at the fundamentals of how they work in browsers. This article introduces the concepts of event bubbling, event capture, and event delegation, which are all about what happens when you add a listener to an element that contains another element, and an event then happens to the contained element. Now that we've looked at the fundamental building blocks of JavaScript, we'll test your knowledge of loops, functions, conditionals and events by getting you to build a fairly common item you'll see on a lot of websites â a JavaScript-powered image gallery. In this article, we'll look at fundamental JavaScript object syntax, and revisit some JavaScript features that we've already seen earlier in the course, reiterating the fact that many of the features you've already dealt with are objects. When writing web pages and apps, one of the most common things you'll want to do is change the document structure in some way. This is usually done by manipulating the Document Object Model (DOM) via a set of built-in browser APIs for controlling HTML and styling information. In this article we'll introduce you to DOM scripting. Another very common task in modern websites and applications is making network requests to retrieve individual data items from the server to update sections of a webpage without having to load an entire new page. This seemingly small detail has had a huge impact on the performance and behavior of sites, so in this article, we'll explain the concept and look at technologies that make it possible. JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. It is commonly used for transmitting data in web applications (e.g., sending some data from the server to the client, so it can be displayed on a web page, or vice versa). You'll come across it quite often, so in this article, we give you all you need to work with JSON using JavaScript, including parsing JSON so you can access data within it, and creating JSON. In this lesson, we will return to the subject of debugging JavaScript (which we first looked at in What went wrong?). Here we will delve deeper into techniques for tracking down errors, but also look at how to code defensively and handle errors in your code, avoiding problems in the first place. This page lists JavaScript tests you can try so you can verify if you've understood the content in this module. Scrimba's Learn JavaScript course teaches you JavaScript through solving 140+ interactive coding challenges, building projects including a game, a browser extension, and even a mobile app. Scrimba features fun interactive lessons taught by knowledgeable teachers. An excellent resource for aspiring web developers â Learn JavaScript in an interactive environment, with short lessons and interactive tests, guided by automated assessment. The first 40 lessons are free, and the complete course is available for a small one-time payment. This page was last modified on Jul 3, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Accessibility",
    "title": "Accessibility on the web - Learn web development | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Access to web content such as public services, education, e-commerce sites, and entertainment is a human right. No one should be excluded based on disability, race, geography, or other human characteristics. This module discusses the best practices and techniques you should learn to make your websites as accessible as possible. You should be familiar with HTML, CSS, and JavaScript before starting this module. Note:\nIf you are working on a computer, tablet, or another device where you can't create files, you can try running the code in an online editor such as CodePen or JSFiddle. This article starts off the module with a good look at what accessibility is â this includes what groups of people we need to consider and why, what tools different people use to interact with the web, and how we can make accessibility part of our web development workflow. Next we turn our attention to accessibility tooling, providing information on the kinds of tools you can use to help solve accessibility issues, and the assistive technologies used by people with disabilities as they browse the web. You'll be using these tools throughout subsequent articles. A great deal of web content can be made accessible just by making sure the correct HTML elements are always used for the correct purpose. This article looks in detail at how HTML can be used to ensure maximum accessibility. CSS and JavaScript, when used properly, also have the potential to allow for accessible web experiences, but if misused they can significantly harm accessibility. This article outlines some CSS and JavaScript best practices that should be considered to ensure that even complex content is as accessible as possible. Following on from the previous article, sometimes making complex UI controls that involve unsemantic HTML and dynamic JavaScript-updated content can be difficult. WAI-ARIA is a technology that can help with such problems by adding in further semantics that browsers and assistive technologies can recognize and use to let users know what is going on. Here we'll show how to use it at a basic level to improve accessibility. Another category of content that can create accessibility problems is multimedia â video, audio, and image content need to be given proper textual alternatives, so they can be understood by assistive technologies and their users. This article shows how. With web access on mobile devices being so popular, and popular platforms such as iOS and Android having fully-fledged accessibility tools, it is important to consider the accessibility of your web content on these platforms. This article looks at mobile-specific accessibility considerations. In this challenge, we present to you a simple site with several accessibility issues that you need to diagnose and fix. An excellent series of video tutorials by Marcy Sutton. Includes code examples, screen reader references, and other useful resources. Includes guides, checklists, tools, and more. Includes a list of web accessibility evaluation tools. Scrimba's Learn Accessible Web Design course teaches you how to write accessible HTML by solving interactive coding challenges and fixing a real-world website. This page was last modified on Jul 3, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/plus",
    "title": "MDN Plus",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Support MDN and enjoy a focused, ad-free experience alongside other features such as curated collections, custom web platform updates, and more. Subscribers to paid tiers of MDN Plus have the option to browse MDN without ads. No need to scroll through page after page to find your answers. Introducing an AI assistant that can answer all your web development questions in real time. Powered by OpenAI GPT-4o and GPT-4o mini. Your playground to learn and share your amazing work with the world. By simply logging in, you can now spread your creativity far and wide. The Web doesn't have a changelog, but MDN can help. You can personalize and filter compatibility changes based on browsers or the tech category you are interested in whether that is JavaScript, CSS, etc. No more haphazard hunting through the vast virtual library: unleash your inner curator and collect your favorite articles in one place for convenient consultation. * Do you need MDN Plus for your company? Let us know and weâll get back to you when it becomes available. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/plus/ai-help",
    "title": "AI Help | MDN Plus",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/plus/updates",
    "title": "Updates | MDN Plus",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/plus/docs/features/overview",
    "title": "Feature Overview | MDN Plus",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support More MDN. Your MDN. Get started. This page is an overview of the MDN Plus documentation and related resources. MDN Plus is a premium subscription service launched by Mozilla. The service\nallows users to customize their MDN Web Docs experience through premium features\nsuch as Collections, filtering Updates and MDN Offline. Learn more about MDN Plus on our website or in this\nblogpost. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/plus/docs/faq",
    "title": "FAQ | MDN Plus",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support MDN Plus is a premium subscription service launched in March 2022 by Mozilla.\nThe service allows users to customize their MDN Web Docs experience through\npremium features such as Updates,\nCollections and\nMDN Offline. The extensive research we have done in 2020 and 2021 showed us that MDN users\nwould appreciate a customized experience on MDN. Weâve got information on what\nyou would find useful and what you would be interested in. All the premium\nfeatures we propose today reflect that feedback. MDN Plus is an initial step\ntowards making the experience on the site more interactive and helpful for our\nusers. A three-tiered pricing model has been put in place in order to try and\naccommodate our usersâ needs as much as possible: Subscribing for a yearly plan activates a 20% discount for all the paid options. Currently, you can only upgrade your plan. For getting a downgrade, please\ncancel your current subscription first and then activate the new one. Nothing. We will continue to develop & maintain our web documentation that will\nremain free and accessible for everyone. There will be no change there. Even\nmore, we believe that MDN Web Docs will benefit from MDN Plus, as we plan to\nreinvest part of the gains from MDN Plus and improve our documentation as well\nas the overall user experience on the website. MDN content is made available under a CC BY-SA 2.5 license. That license doesn't\npreclude Mozilla (or other users of MDN content) from having a paid product. MDN\nPlus adds premium features like updates and collections on top of the free\ncontent. Regular users can still access and reuse MDN content under the Creative\nCommons license. Since its beginning in 2005, MDN Web Docs has been a project hosted and provided\nby Mozilla. Mozilla covers the cost of infrastructure, development and\nmaintenance of the MDN platform, including a team of engineers and its own team\nof dedicated writers. Mozilla wants MDN Plus to help ensure that MDN's open source content continues\nto be supported into the future. MDN Plus has been built only with Mozilla\nresources, and any revenue generated by MDN Plus will stay within Mozilla. We\nare looking into ways to reinvest some of these additional funds into open\nsource projects contributing to MDN but it is still in the early stages. The existence of a new subscription model will not detract from MDN's current\nfree Web Docs offering in any way. The current experience of accessing web\ndocumentation will not change for users who do not wish to sign up for a premium\nsubscription. Open Web Docs (OWD) and Mozilla will continue to work closely\ntogether on MDN for the best possible web platform documentation for everyone.\nFor more information about how our organizations work together, please check\nthis article. The free version of MDN Plus is available worldwide. Anyone can create an MDN\nPlus account and try out a limited version of the premium features. As for the\npaid plans, they are currently available as follows: in the United States,\nCanada (since March 24th, 2022), Austria, Belgium, Finland, France, the United\nKingdom, Germany, Ireland, Italy, Malaysia, the Netherlands, New Zealand, Puerto\nRico, Sweden, Singapore, Switzerland, Spain (since April 28th, 2022), Estonia,\nGreece, Latvia, Lithuania, Portugal, Slovakia and Slovenia (since June 15th,\n2022). We are working on expanding this list even further. In case you have an idea you would like to share about MDN Plus, you can add\nyour suggestions to our mdn-community\nrepo. If a subscriber, you can also leave us feedback by accessing the âFeedbackâ\noption in the user menu. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/curriculum/",
    "title": "MDN Curriculum | MDN Curriculum",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support The MDN Curriculum provides a structured guide to the essential skills and practices for being a successful front-end developer, along with recommended learning resources. Last updated: February 2024 Defines the essential skills and knowledge every front-end developer needs for career success and industry relevance. Created by Mozilla and refined with insights from students, educators, and developers from the broader web community. Includes learning resource recommendations covering every curriculum topic, helping you become job-ready. Learn more Learn our curriculum with Scrimba's interactive Frontend Developer Career Path. Develop a great attitude towards learning, researching, and collaborating to enhance your chances of success. Best Practices Familiarize yourself with your development environment and the tools you'll use to build websites. Tooling Understand how the web works at a high level, and the process for creating web technologies. Web Standards & Semantics Learn the fundamentals of HTML, the language used to define and structure web content. Web Standards & Semantics Dive into the fundamentals of CSS, the language you'll use to style and layout websites. Styling Focus on using CSS to style text and apply custom web fonts. Styling Learn modern techniques for creating flexible layouts that work on a wide variety of devices. Styling Focus on the core JavaScript language and fundamental surrounding topics. Scripting Understand the need for universal access to web content and how to write accessible code. Best Practices Appreciate basic design theory, how to speak design language, and what makes websites look good. Best Practices Understand why version control is necessary, and use GitHub to store code and collaborate with others. Tooling Add animations to your toolbox to enhance user experience and perceived performance. Web Standards & Semantics Create custom JavaScript objects to gain a deeper understanding of object-oriented programming. Scripting Study common WebAPIs in depth to appreciate how WebAPIs work in general. Scripting Explore how to create performant, fast-loading websites and enhance perceived performance. Best Practices Learn how to protect data from unauthorized access and how to treat user data responsibly. Best Practices Explore the need for testing, and learn how to implement common test types. Best Practices Study the features of popular JavaScript frameworks, and use them to implement common use cases. Tooling Look at popular CSS tooling and understand what code problems they can solve. Tooling Understand the purpose and usage of other tooling types commonly found in a web project. Tooling Scrimba's Frontend Developer Career Path teaches the MDN Curriculum Core with fun interactive lessons and challenges, knowledgeable teachers, and a supportive community. Go from zero to landing your first front-end job! How can youboost your employability with the MDNCurriculum? Learn about research collaboration and other essential soft skills.Balance between modern tooling and long-term best practices.Get access to high-quality recommended resources.Get guidance from trusted voices. Begin with our \"Getting started\" and \"Core\" modules to grasp the essential skills for web development. Core modules Dive deeper with our \"Extensions\" modules to develop specialized skills. Extensions modules Our \"Soft skills\" module, part of \"Getting started\", offers crucial insights to help you land your job. Getting started modules Use our modules to guide your teaching, or enroll your students in Scrimba's Frontend Path. Frontend Path Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/blog/",
    "title": "MDN Blog",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support From individual pixels to fully decoded images on your screen, raw pixel data gets transformed, compressed, and efficiently delivered. Learn about the techniques and optimizations that shrink image information without any perceivable loss in quality. MDN turns 20! Let's look at how we started, how MDN became the most trusted resource for web developers, the impact it's had on the open web, and yes, there's cake, too. Images help bring more color and life to the web. This post describes how images are represented by humans and on different devices, with details about color spaces and vision theory. Browsers are starting to roll out changes in default UA styles for nested section headings. This post describes the incoming changes, how to identify if it's an issue on your websites, and hints for conformant and better-structured pages. Global Privacy Control (GPC) is on the way to becoming a formal privacy standard with the recent publication of its first working draft. Let's take a look at what the implications are for developers and users. A new way to handle dates and times is being added to JavaScript. Let's take a look at Temporal, what problems it solves, the current state, and what you'll find in the new documentation about it on MDN. Learn techniques to improve the Largest Contentful Paint metric, a part of Core Web Vitals, for your website. Let's have a look at MDN Web Docs content projects in 2024, with highlights of our top picks and recommended reading, and at what's next on MDN for 2025. There's a new Learn Web Development section on MDN that merges the MDN Curriculum with the Learn section. Here's the background to these changes, what's new, and what you can expect to see in the future. Join JavaScriptmas this December for daily coding challenges designed to boost your skills and bring festive fun. Solve challenges on Scrimba, learn something new, and take part for a chance to win exciting prizes! Learn about reading network request waterfalls, identifying common network performance issues, and optimizing page rendering. Here are six effective strategies for landing your first developer job. These are especially relevant if you're self-taught or breaking into the tech industry without a traditional CS degree. We are thrilled to announce the new MDN community page that will be a hub to recognize our contributors and a place for contributors to get involved. Learn about lesser-known web performance bottlenecks connected to excessive JavaScript usage, like long tasks, large bundle sizes, and hydration issues. For many of us, the holidays are over, and the time has come to focus.  Now is an ideal time to dive into learning web development, and you're in luck â MDN and Scrimba are offering a 30% discount on select courses for the next month! This post demonstrates how to use the Streams API in a web application to fetch and transform text on the fly.  By processing the data as it arrives, this approach enhances performance, responsiveness, and resource efficiency. Learn how to use Intl.Segmenter for locale-sensitive text segmentation in JavaScript to simplify localization, count words or sentences in different languages, and more. Learn how to use Git stash to break down large commits. Discover a better approach for saving work when switching branches. This post explores what mobile app debugging is, commonly used techniques, and how you can debug mobile apps on multiple devices. The 'name' attribute of the HTML details element is gaining more support across browsers. Learn how this feature allows creating exclusive accordions without scripting widgets from scratch. This article explains how to use the Broadcast Channel API to build synchronized and interconnected web applications. We have chosen Scrimba as a course partner for the MDN Curriculum. This blog post explores what the partnership means practically, and how we will provide an even better web education experience together. First released in 2016, the HTTP Observatory became popular in the web community with a combination of helpful security audits and educational material. Fast forward to 2024, and we are delighted to announce that Observatory's new home is MDN. Read on to find out more about what this entails, and give the HTTP Observatory a warm welcome! This guide explains how to use Static Site Generation in Next.js to build scalable and secure web applications with fast loading times and a focus on performance. New JavaScript Set methods are landing across browsers. Learn about sets, how you can use these methods to compare different sets, create new sets with specific properties, and more. This guide introduces you to rate limits and slow down mechanisms. Learn how to apply slow down and rate limit mechanisms in Express applications. This post takes a look at what page visibility is, how you can use the Page Visibility API in your applications, and describes pitfalls to avoid if you build features around this functionality. We've been writing about web development and the web platform on the MDN Blog since May 2023. Here's our highlights and top posts along with our favorites. This guide introduces you to service workers and their lifecycle. Learn how to deploy a project using service workers with HTTPS on Vultr. Interop 2023 has successfully concluded, and the Interop 2024 project is now officially underway. Learn what Interop is, discover the updates from Interop 2023 now on MDN, and find out what's coming to the web next. This guide introduces you to the common types of tests and the testing conventions. Learn how to test JavaScript with Jest on Vultr. Working with colors on the web just got more interesting! In this article, weâll explore how to use the CSS color-mix() function to create variations in color palettes. This post reflects on the conventional test automation methods using Selenium and Appium. Learn how you can use TestGrid's unified testing platform to enhance the conventional methods and also leverage the modern codeless testing techniques. The long-awaited MDN Curriculum is now live on MDN, providing a structured guide to the essential front-end development skills and best practices for industry newcomers. Learn all the key details in this article. This article provides an overview of the core components required for creating effective technical documentation. Learn the best practices to make your documentation clear, consistent, and well-structured. This guide explains Bun functionalities as a runtime package manager and a bundler. It also explains the benefits of built-in Bun APIs and how to use Bun's Vultr marketplace application. Aligning with Interop 2023's emphasis on cross-browser consistency, this post walks you through various `border-image` properties that you can control to create captivating web designs. Learn how to use custom graphics for enhancing the look of your websites that appear consistent across different browsers. Learn how to build AI-powered apps using OpenLLM and Vultr Cloud GPU. This guide shows how to generate API responses using a Large Language Model. It also covers instructions for setting up an Nginx server and implementing SSL security. The tail end of 2023 welcomes positive news for web privacy, as Chrome announces it is to join Firefox and Safari in deprecating third-party cookies in 2024. Find out more details about these changes, and what they mean for web developers. Today we're updating the Baseline widgets and introducing a new one, along with the updated definition of Baseline. The JavaScript console is an essential tool for web development. Learn new and fun ways to use the console to display data and debug your code. CSS container queries are a powerful new tool for our CSS layout toolbox. In this post we'll dive into the practicalities of building a layout with container queries. Learn how to deploy a Node.js application on Vultr using PM2 to create persistent services. This guide shows how to efficiently use resources via PM2 cluster mode. It also covers Nginx server setup and SSL security. Discover essential tips and tricks for using Visual Studio Code (VS Code), a powerful IDE. Learn how to leverage its integrated editing features and Git support, and explore a few extensions. Observatory 2.0 is launching soon as part of the Mozilla Developer Network as the MDN Observatory with new security scoring standards and other exciting updates. This guide explores the various types of CI/CD pipelines and helps you understand their specific use cases. Learn how to leverage rules to create highly efficient DevSecOps workflows. What can web designers and developers do to build a more sustainable web? This post explores the environmental impacts of web technologies and looks at some of the ways we can build greener websites. Thinking about making the move from GitHub to GitLab? This guide demystifies the migration process, addressing common concerns for DevSecOps teams that are looking to seamlessly transition between the two platforms. This post provides a step-by-step guided tutorial on how to migrate your data from GitHub into GitLab. MDN has created a curriculum for aspiring front-end developers to build a rewarding and successful career. Take a look at the curriculum, who it's for, and the research it's based on. The new CSS linear() timing function enables custom easing in animations. Explore how linear() works compared with other timing functions used for easing, with practical examples. Relying on external resources for your website is always fraught with risks. Learn how to protect your website and its visitors by using SRI to secure third-party content. Scroll-driven animations are coming to CSS! In this post, we'll look at a few types of animations and learn how to link them to the scroll progress of a container. We recently launched a feature called AI Explain, but we have rolled this back for now. In this post, we look into the story behind AI Explain: its development, launch, and the reasons that led us to press the pause button. grep is a powerful tool for searching code from the terminal. This post will show you how to use grep and why it's an essential developer tool. We're introducing an AI assistant powered by MDN and OpenAI GPT 3.5 to answer all your web development questions in real time. Hues are a bright way to define colors in CSS. Learn about hues, color wheels, how to use color functions, and how you can create vibrant color palettes for your website using hue. MDN is launching a code Playground. Users can prototype ideas and expand all live samples into an interactive experience. Discover CSS :lang(), experimental media queries, manipulating graphics with WebGPU, client-server communication with WebTransport, ECMAScript module support, and more. Learn how to use JavaScript to draw any regular shape to a HTML canvas with a single function, and how to modify it to draw multiple shapes. See the latest updates to the MDN reference pages about JavaScript regular expressions, including new sections on sub-features and browser compatibility information. In celebration of Global Accessibility Awareness Day in 2023, we share some tools and guidelines to help you make the web more accessible. Learn what HTML landmark roles are, how they improve accessibility, and how you can include them on your website effectively. MDN leads the way in implementing WebDX community group's efforts, delivering a clear and simple baseline for the web platform to developers. Learn how the CSS `:not()` pseudo-class behaves when multiple selectors are passed as argument. Learn what's new in CSS Colors Module Level 4, including color spaces, color functions, fancy gradients, and support for wide-gamut displays. The MDN blog publishes web development news, tutorials, and insights as an extension of MDN Web Docs, helping you discover, learn, and create for the web. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/play",
    "title": "Playground | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/observatory",
    "title": "HTTP Header Security Test - HTTP Observatory | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/",
    "title": "MDN Web Docs",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Documenting web technologies, including CSS, HTML, and JavaScript, since 2005. A new way to handle dates and times is being added to JavaScript. Let's take a look at Temporal, what problems it solves, the current state, and what you'll find in the new documentation about it on MDN. The CSS anchor positioning module defines features that allow you to tether elements together. Certain elements are defined as anchor elements; anchor-positioned elements can then have their size and position set based on the size and location of the anchor elements to which they are bound. This article explains the theory behind how the View Transition API works, how to create view transitions and customize the transition animations, and how to manipulate active view transitions. This covers view transitions for both DOM state updates in a single-page app (SPA), and navigating between documents in a multi-page app (MPA). The Temporal object enables date and time management in various scenarios, including built-in time zone and calendar representation, wall-clock time conversions, arithmetics, formatting, and more. It is designed as a full replacement for the Date object. MDN 2024 content projectsdeveloper.mozilla.org A new learning experience on MDNdeveloper.mozilla.org Introducing the new MDN Community pagedeveloper.mozilla.org [es] auto-fix content issuesmdn/translated-content [ru] sync translated contentmdn/translated-content 2025/07/10 æç¹ã®è±èªçã«åæmdn/translated-content Fix typo `Scx`->`scx` for short name of `Script_Extensions` propmdn/content 2025/07/10 æç¹ã®è±èªçã«åæmdn/translated-content 2025/07/29 æç¹ã®è±èªçã«åæmdn/translated-content the example comment is out of date, now Chrome give the same message with Firefox/Safarimdn/content Fix hyperlinkmdn/content Feat/property examplemdn/content <selectedcontent>: update to description and specificationmdn/content Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://bsky.app/profile/developer.mozilla.org",
    "title": "@developer.mozilla.org on Bluesky",
    "content": "This is a heavily interactive web application, and JavaScript is required. Simple HTML interfaces are possible, but that is not what this is.\n    Learn more about Bluesky at bsky.social and atproto.com.\n    \nProfile\nMDN Web Docs\ndeveloper.mozilla.org\ndid:plc:a4klb3lge3phlc4az4uspfpo\nThe official MDN Web Docs account, now on Bluesky. We deliver the best web docs around.\n\nVisit → https://mdn.dev\nContribute → https://mdn.dev/community Learn more about Bluesky at bsky.social and atproto.com.\n    \nProfile\nMDN Web Docs\ndeveloper.mozilla.org\ndid:plc:a4klb3lge3phlc4az4uspfpo\nThe official MDN Web Docs account, now on Bluesky. We deliver the best web docs around.\n\nVisit → https://mdn.dev\nContribute → https://mdn.dev/community MDN Web Docs developer.mozilla.org did:plc:a4klb3lge3phlc4az4uspfpo The official MDN Web Docs account, now on Bluesky. We deliver the best web docs around.\n\nVisit → https://mdn.dev\nContribute → https://mdn.dev/community"
  },
  {
    "url": "https://github.com/mdn/",
    "title": "MDN Web Docs · GitHub",
    "content": "We read every piece of feedback, and take your input very seriously. To see all available qualifiers, see our documentation. MDN Web Docs is an open-source, collaborative project that documents web platform technologies, including CSS, HTML, JavaScript, and Web APIs. We also provide extensive 🧑‍🎓 learning resources for beginning developers and students. Note: By participating in and contributing to our projects and discussions, you acknowledge that you have read and agree to the Mozilla community participation guidelines. MDN's mission is to provide a blueprint for a better internet and empower a new generation of developers and content creators to build it. The power of MDN Web Docs lies in its vast community of active readers and contributors. Since 2005, approximately 45,000 contributors have created the documentation we know and love. Together, contributors have created over 45,000 documents that make up an up-to-date, comprehensive, and free resource for web developers worldwide. In addition to English-language articles, over 35 volunteers lead translation and localization efforts for Chinese, French, Japanese, Korean, Portuguese, Russian, and Spanish. You can be part of MDN Web Docs, whether it be through ✍️ content contributions, ⚙️ engineering, or ↔️ translation work. The MDN Web Docs project welcomes contributions from everyone who shares our goals and wants to contribute constructively and respectfully within our community. 🧘‍♂️ We're proud to have a global community of contributors and developers, who also want to say 👋 You can ask questions or get in touch with the MDN Web Docs team and community through any of our communication channels. Browser compatibility data for Web technologies as displayed on MDN JSON\n\n\n\n\n\n            5.3k\n          \n\n\n\n\n            2.3k The content behind MDN Web Docs Markdown\n\n\n\n\n\n            9.7k\n          \n\n\n\n\n            22.8k The source repository of all translated content for MDN Web Docs Markdown\n\n\n\n\n\n            1.9k\n          \n\n\n\n\n            8.3k The platform code behind MDN Web Docs TypeScript\n\n\n\n\n\n            1.2k\n          \n\n\n\n\n            537 A place to provide feedback and suggestions for MDN Web Docs 140\n          \n\n\n\n\n            45 Planning and proposals for MDN Web Docs content 1.3k\n          \n\n\n\n\n            182 The source repository of all translated content for MDN Web Docs The content behind MDN Web Docs The platform code behind MDN Web Docs Browser compatibility data for Web technologies as displayed on MDN MDN's next fr(ont)e(n)d Experimental German locale for MDN, aimed at German-speaking users that prefer to read MDN Web Docs in their native language Sample todo app built with the Vue framework Small app to display bugzilla bugs which need dev docs"
  },
  {
    "url": "https://developer.mozilla.org/en-US/about",
    "title": "About MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Empowering developers worldwide to build a better, open web MDN is an open-source, collaborative project owned by Mozilla Corporation and\ndeveloped by Mozilla, in partnership with a global community of volunteers and\npartners. Mozillaâs MDN team leads the platformâs development, content strategy,\nand overall direction, while the community actively\ncontributes to content creation, translations, and browser compatibility\nimprovements, ensuring MDN remains a vital and evolving resource for all. Your comprehensive resource for web development documentation, covering\neverything from CSS, HTML,\nJavaScript, Web APIs, and\nother web technologies. Ideal for beginners, MDN Learn offers guides and a\nstructured curriculum to kickstart your web development\njourney. Enhance your learning with interactive courses from our partner,\nScrimba. Stay updated with the latest in web development. Our blog\nfeatures updates, tips, tutorials from web experts, MDN announcements, and\ncurated sponsored content. Experience a personalized MDN with our premium subscription service. Enjoy\nfeatures like AI-powered assistance and\nCollections to streamline your workflow. Experiment and learn with tools like Playground for live coding\nand HTTP Observatory for analyzing website security,\ndesigned to enhance your development experience. From our beginnings to becoming the go-to resource for web developers worldwide,\nhere's how we've evolved: Launched as\nDevMo by Mozilla,\na community-driven wiki dedicated to documenting open web standards. Rebranded as\nMozilla Developer Network (MDN),\nreinforcing our commitment to the developer community. Achieved a milestone when major tech companies began contributing and\nsupporting web documentation on our platform, solidifying MDN as the central\nhub for web development knowledge. Transitioned from its wiki-based origins to a modern,\nGitHub-hosted project with the launch of Yari,\nmodernizing our infrastructure and workflows. Unveiled a\nmajor redesign and\nintroduced\nMDN Plus,\noffering personalized features for an enhanced user experience. Launched new tools, including Playground for coding experiments, AI Help for\neasier content discovery, and HTTP Observatory for website security scans. We\nalso introduced a Blog to cover interesting topics beyond MDNâs core focus,\nand a Curriculum to provide a structured approach to learning web development. We had fun exploring the\ninternet archives\nand putting together a fast-forward trip through our transformation! MDN is built on the fundamental principle of accuracy, which has established\nit as the trusted source of web documentation globally. We are committed to\nproviding expertly curated and rigorously reviewed content to maintain the\nhighest standards of quality and accuracy. Our dedication is backed by the\nbest developer community in the worldâa passionate group of contributors who\nhelp us enhance and refine our documentation. We welcome the knowledge and\nexperience of our diverse developer community to ensure that millions of users\ncan rely on MDN daily for up-to-date and accurate information. MDN is a Mozilla project that is powered by its global community. We are a\ndiverse group of developers, writers, and technologists working together to\nbuild resources for a better web. Our open-source approach welcomes\ncontributions from anyone. Each of the individuals who have\ncontributed over the past decades has strengthened MDN. Through our GitHub\nrepository, contributors can make changes and get their work reviewed and\nintegrated into MDNâs content. MDN is committed to providing documentation for a wide range of web\ntechnologies while continuously adapting to the changing landscape of web\ndevelopment. We strive to create content thatâs relevant and valuable to\ndevelopers working across different browsers and platforms. We are dedicated\nto regularly updating our resources to reflect the latest standards and best\npractices, helping developers stay current in a rapidly changing field. At MDN, our mission is to provide developers with the resources they need to\ncreate innovative and accessible web experiences. We offer a free,\nhigh-quality, and comprehensive platform that includes documentation on\nessential web technologies like CSS,\nHTML, JavaScript, and\nWeb APIs. Our learning materials\nare tailored for a diverse audienceâfrom beginners and students to professors\nteaching web development. From technical writers and engineers to product and community managers, we are a\ndiverse group dedicated to driving MDNâs mission, growth, and success. Get to\nknow the people behind MDN and discover what motivates us to keep you at the\nforefront of web development! Technical Writer @dletorey Based in London, UK, Dave has been with MDN since 2022 where he's been focused\non Firefox release documentation, particularly HTML, CSS and SVG updates. He's\npassionate about web standards, accessibility, performance and digital\ninclusion. He is constantly learning about new web technologies and standards. Outside of work he loves live music and tries to attend as many gigs and music\nfestivals as he can. He particularly loves post-punk, indie, house and techno.\nHe also attends many conferences and meetups and is an organizer of\nLondon Web Standards &\nState of the Browser. He also has a large\ncollection of red hats, so is easy to spot in the wild. He is never happier\nthan when in a field with his friends. Open Web Docs (OWD), an independent open source organization, is one of the most productive contributors to MDN Web Docs. OWD contributes as part of their mission to support âweb platform documentation for the benefit of web developers & designers worldwide.â The team at OWD has led or contributed to many projects to improve documentation on MDN. They're an invaluable partner in the day-to-day work of making MDN. Read more about OWDâs activities in their 2024 Impact and Transparency Report and get continuous updates on their Mastodon account. Serving over 15 million users monthly from around the globe, MDN connects\ndevelopers with the tools and information they need to easily build projects on\nthe open web. Educational influence: Our resources are integral to many coding bootcamps and\nuniversity courses worldwide. Trusted reference: Platforms like freeCodeCamp and Codecademy frequently link\nto MDN articles as authoritative references. Industry standard: Tools like Can I use leverage\nMDNâs browser compatibility data\nfor up-to-date information on web feature support across browsers. Collaborative partnerships: We work closely with partners such as\nOpen Web Docs,\nMicrosoft,\nGoogle, Igalia,\nW3C, and others to drive web innovation and serve the\ncommon good. Be a part of our mission to foster innovation and inclusivity on the web.\nStart contributing today and make a lasting impact\non the global developer community. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.mozilla.org/en-US/careers/listings/?team=ProdOps",
    "title": "Mozilla Careers — All open positions at Mozilla",
    "content": "In addition to Cookies necessary for this site to function, we’d like your permission to set some additional Cookies to better understand your browsing needs and improve your experience. Rest assured — we value your privacy. All products Our Mission Our Work Bring your drive, your creativity, your big ideas and your new perspectives to make the difference we’re aiming for. No jobs found that match the selected filters. Subscribe to our open positions RSS feed Privacy-first advertising solutions for brands, publishers, and platforms. Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation.\n          Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/advertising",
    "title": "Advertise with us",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://support.mozilla.org/products/mdn-plus",
    "title": "MDN Plus Help",
    "content": "Popular Searches:\nUpdate Firefox\nProfiles\nFirefox Sync Explore the knowledge base. We’re here for you! If you haven’t found a solution after exploring our help articles, you can get in touch with our support team. MDN offline allows you to browse MDN without an internet connection. It can also enable you to have a faster experience while saving data. Learn how to help submit and resolve bugs in the MDN content repo. Learn how to contact support if you lost access to Mozilla account and MDN Plus. This article shows MDN Plus subscribers the steps to enjoy an ad-free experience. Grow and share your expertise with others. Answer questions and improve our knowledge base. Learn More Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation. Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/MDN/Community/Issues",
    "title": "Creating and working on issues - MDN Web Docs | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support As a contributor, you can report and work on issues.\nAfter you report an issue, the issue gets triaged. Issue triaging is typically done by people assigned the role of a maintainer or an owner. While reporting an issue or participating in a conversation in an issue, always ensure that your inputs are contributing to the overall progress of the project. Consider whether the issues you open and your comments in an issue are constructive and on topic and are not just adding noise. Do the following: Avoid doing the following: If you want to suggest new documentation or ways to improve the website, see Proposing new content or features. Issues are used to track bugs. An issue must be a single actionable task or a collection of related actionable tasks and must have a clear outcome. If you think you've found a bug with the content on MDN Web Docs or with the look and feel of the website, search the current open issues in the relevant repository and make sure nobody else has reported the issue. Depending on the type of problem you've discovered, you can report it by filing an issue on one of the main MDN GitHub repositories.\nIf the information you provide in the issue is incomplete, you might be asked to provide more details during the issue triaging process. Here are some hints for opening issues: If the issue you're opening is not to report a bug but to perform a series of tasks, you can create the issue as a task list.\nExplain the context or reason for performing the tasks in the description.\nEnsure that you list all the actionable tasks as a checklist. For example: Remember that if you take on an issue, the expectation is for the work to be completed in a timely manner. If you're not able to make any progress for a week after being assigned or can no longer complete the required task, leave a comment and unassign yourself from the issue. These are the general steps for working on an issue: Find an issue: If you're looking to contribute, search for issues with good first issue, help wanted or p3 label. Most repositories have issues with these labels. You are welcome to browse and pick an issue that is suitable for your skill set. Another useful place to look for issues to work on is the MDN Contributors Task Board. This project view lists open issues from multiple repositories. You can filter the list based on the topics (Labels column) you're interested in. See the description of some of the labels that get applied during the issue triage process. Note:\nAn issue with the needs triage label indicates that the MDN Web Docs core team has not reviewed the issue yet, and you shouldn't begin work on it. Assign the issue to yourself: After finding an issue you'd like to work on, make sure that the issue is not assigned to anybody else. Add a comment saying you would like to work on the issue, and if you are able to, assign the issue to yourself. Do the research: Most issues need some investigation before work can start. Make the changes: Fork and branch the repository. Do your work and open a pull request in the repository. Reference the issue in the pull request description. Depending on the files you've updated in the pull request, a reviewer will be assigned to your pull request automatically. (Teams per topic area are defined in the CODEOWNERS file). After opening the pull request, if you find you no longer have the time to make changes or incorporate review feedback, let the team know as soon as possible in a comment in the pull request. This will help the team assign another interested contributor to complete the work on the pull request and close the linked issue. After your pull request has been reviewed and merged, you can mark the linked issue as closed. If you opened the pull request with Fixes #<issue> verbiage, the issue will be closed automatically when the pull request is merged. If you spot a bug â whether it's a problem with the website's look and feel or an error in documentation â you can try to fix it yourself in a pull request.\nIf the bug is small (such as a typo or a minor sentence improvement) or involves a quick fix, you can submit a pull request with the appropriate changes. For any other type of bug, begin by opening an issue.\nAdd a comment about your intent to work on the issue and, if possible, describe your proposed solution or steps to fix it. Note:\nYour time and effort might go waste if you open a pull request without opening an issue first.\nWait for the issue to be triaged, so that the MDN Web Docs team can verify that the issue is legit and approve your proposed solution. Using the guidelines on working on an issue, try to fix the problem by updating the appropriate source, such as: Each repository includes useful information to guide you on how to contribute.\nFor more information, see our main GitHub repositories. If you are a maintainer or an owner in the MDN Web Docs GitHub organization, you are responsible for triaging issues in one or more MDN Web Docs repository. The overall process for triaging includes some general and some issue-specific tasks. When an issue is opened, the needs triage label is set on the issue automatically. You can search for this label to look for issues that need to be triaged. Contributors or anybody else should not work on the issue until the issue has been triaged. (Triagers should remember to remove the needs triage label after triaging the issue.) In the mdn/content repository, an additional Content: label, such as Content:CSS or Content:WebAPI, is set on the issue automatically. This gets set based on the MDN URL mentioned in the issue. You can use the content-specific label to look for issues to be triaged in your specific topic area. If an issue concerns an active, non-en-US locale, set the appropriate label, such as l10n-fr, l10n-zh, or l10n-ja. The teams for those locales will pick these issues up and triage them. You don't need to actively triage issues all the time. Set aside time, say 30 minutes every week, to triage issues on a regular basis in your area of responsibility. Triaging doesn't have to be done as part of a synchronous meeting or even at the same time as everyone else, but it should be done regularly to make sure that the backlog of untriaged bugs doesn't get too high. Apart from triaging incoming issues every week, review the list of old bugs to see if there are any that are stalled, need closing, or are no longer relevant. The idle label is automatically set on issues that have had no activity for 30 days. These are the guidelines to follow while triaging each issue. These are some of the things to keep in mind while reviewing the validity of an issue: Review each issue against the following checklist to ensure that the issue contains the described information for someone to start working on the bug: If any of the above information is not present, then you should ask the author of the issue to provide these details, and add the needs info label to the issue. Resume triaging the issue only after those details have been provided (after which, you can remove the needs info label). It is okay to wait for up to a week to get a response from the author. For each bug, set a priority label based on the severity of the issue to help people who want to work on the most important issues or areas. Critical issue: This type of issue needs to be fixed as soon as possible, regardless of where it appears on the site. This type of issue could damage MDN's reputation severely and/or harm users. Examples of this issue include an incorrect code snippet, which if used in production, could create a severe security problem and undesirable content such as malware, profanity, pornography, hate speech, or links to such content. Major issue: This type of issue could severely affect a page's usefulness. For example, a significant amount of out-of-date information, a complex and important code example that doesn't work, a significant amount of prose that is badly written and hard to understand, or a large number of broken links. Minor issue: This is a type of improvement issue that can make the existing content better but does not affect learning or only has a minor effect on learning. Since these types of issues are not actively planned for, help from contributors to fix these issues is welcome and much appreciated. Fixing some of these issues can also provide the necessary practice to beginner contributors who are starting to get familiar with the contribution process. Examples include typos, bad grammar, a broken link, a small amount of out-of-date information or badly-written prose, or a code snippet that doesn't work. In general, critical issues should be fixed immediately and are most likely handled by MDN Web Docs staff and peers. If possible, add information that can help contributors to fix the issue. The information can be in the form of steps, general approach, links to other similar fixed issues, or reading resources. A well-laid out plan or steps is especially required in issues that are labeled good first issue and can help ramp up new contributors quickly. You can time-box this task to 5-10 minutes. For example, as a triager, you can add the following information to the issue you are triaging: Next, set the following labels as appropriate: effort: small, effort: medium, effort: large: Some contributors like to search for bugs based on the time and effort that will be needed to fix the bug. So where possible, you should try to provide an estimate of the required effort. good first issue: Set this label on the issue if the fix for the issue is really simple and if fixing the issue would provide good practice for a newcomer who is getting used to the process. help wanted: Set this label if the issue requires help from someone who knows about or is familiar with the topic. This is a popular label and some contributors use it to search for issues to work on in open source projects in their areas of familiarity or expertise. broken link external: Set this label if the issue involves a broken link to an external page. document not written: Set this label if the issue involves a necessary document that has not been written yet, usually because a link points to it. needs content update: Set this label if the issue fix in another repository will need an equivalent fix in the mdn/content repository. Note:\nAfter the triage process is complete, remove the needs triage label. This page was last modified on Jun 23, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/community",
    "title": "Contribute to MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Where web enthusiasts learn, collaborate, and create MDNâs strength comes from the passion and dedication of our global community.\nSince our founding in 2005, weâve grown into a thriving network. Together, weâve\ncreated a comprehensive, open, and free resource that serves web developers\nacross the globe. With volunteers leading translation efforts in\n7 languages, weâre\ntruly international. We are an open-source community dedicated to building resources for a better\nweb. Our diverse contributors, including developers, technical writers,\nstudents, educators, designers, and more, come from various backgrounds and\nplatforms. Anyone can contribute, and each contribution strengthens our\ncommunity, driving innovation and improving this vital resource for developers\nworldwide. There are many other things I like about MDN: the openness of its\ngovernance, the respect for contributors' work, the professional\nconversations, and the always timely reviews. MDN has consistently\ndemonstrated the ideal form of an open-source project. Joshua Chen (MDN contributor) MDN Web Docs has the most up-to-date and accurate information and the\ncontent is presented in an easy-to-understand manner. I also like that it's\navailable in many languages (very important!). Yuji (MDN contributor) There are millions of web developers in China, and many of them begin their\ndeveloper journey at MDN Web Docs. Contributing to MDN Web Docs is an\nexcellent way to help people who are starting out. YiTao Yin (MDN contributor) If you wish to be a part of the featured contributors here,\nlet us know. If youâre featured here\nand would like to opt-out,\nplease file an issue on GitHub. We collaborate on GitHub, our project's home, on\nvarious tasks such as writing and improving documentation, fixing bugs, and\nproviding review feedback. It starts here, with you. Want to start right away,\nbut not sure how? Follow\nour guide\nto make your first contribution. Watch this video on\nhow to get started with contributing to MDN. Video from the community team on contributing to MDN Become part of this globally cherished group thatâs dedicated to documenting web\ntechnologies. Whether youâre an expert or a beginner, thereâs a place for you in\nour inclusive community. Check out some of the ways you can contribute and\nengage. Submit pull requests to fix reported issues. Squash bugs Fix inaccuracies and fill in missing information. Start writing Participate in translating content into one of our supported languages. Find your locale Share your knowledge and expertise and guide fellow learners. Help on Discord New to MDN or open-source projects? Tackle our beginner-friendly issues to help\nimprove MDN. Connect with the community. Engage with domain experts. Help others learn. Join MDN Discord Every month, get exclusive updates from the MDN team. Share your ideas and\ncontributions. RSVP to the next community call While working in Mozilla spaces and communities, please adhere to the\nMozilla Community Participation Guidelines,\nwhich promote respect, inclusion, and a harassment-free environment for all\ncommunity members. MDN's resources are freely available under various open-source licenses. For\ndetailed information on reusing MDN content, check out our\nAttribution and Copyright Licensing\npage. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://discourse.mozilla.org/c/mdn/236",
    "title": "Latest MDN topics - Mozilla Discourse",
    "content": "Several MDN readers have a similar problem: They want to read MDN content in English, but instead are getting pages in a different language. This is a hard problem to solve, but there are some things you can do to see mo… Powered by Discourse, best viewed with JavaScript enabled"
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/Learn",
    "title": "Learn web development | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support Welcome to MDN Learning Web Development (also known as Learn). This resource provides a structured set of tutorials teaching the essential skills and practices for being a successful front-end developer, along with challenges and further recommended resources. Teaches the essential skills and knowledge every front-end developer needs for career success and industry relevance, as defined in the MDN Curriculum. Created by the MDN community and refined with insights from students, educators, and developers from the broader web community. Designed to take you from \"beginner\" to \"comfortable\" (not \"beginner\" to \"expert\"), giving you enough knowledge to use more advanced resources (such as the rest of MDN). Note:\nLast updated: December 2024 (see changelog). Our Getting started modules provide setup tutorials and essential concepts and background information for complete beginners. You should start here if you are a complete beginner (i.e., you've not installed a code editor or written any code yet). Our Core modules provide a structured set of tutorials teaching the essential skills and practices for being a successful front-end developer. Our Extension modules cover useful additional skills to learn as you start to expand your knowledge and develop specialisms. Go onto these after you finish our Core. Use our modules to guide your teaching, check out our Educators page for more ideas, or enroll your students in Scrimba's Frontend Developer Career PathMDN learning partner. Throughout the course, you'll find several articles designed to help you assess whether you have understood what we are teaching you in the course. There are two types: Most of the questions feature HTML/CSS/JavaScript code blocks that show the starting code for each task. The recommended way to complete each one is to press the \"Play\" button in one of the code blocks to open the example in the MDN Playground and then edit the code according to the question instructions. If you make a mistake, you can clear your work using the Reset button in the MDN Playground. If you get really stuck, you can (usually) view the solution at the bottom of each question section, or reach out for help. Note:\nIf you'd prefer to work in your own editor or in an online editor (such as CodePen or JSFiddle), you can copy the code from the MDN Playground into your chosen environment. Some questions don't include code blocks to start from, and instead ask you to download starter files to work on your local machine with. Sometimes this is due to the complex nature of the question, and sometimes we just wanted to change things up a bit. The code examples you'll encounter in the Learning Area are all available on GitHub: If you want to get in touch with us about anything, use the communication channels. We'd love to hear from you about anything you think is wrong or missing on the site, requests for new learning topics, requests for help with items you don't understand, or any other questions or concerns. If you're interested in helping develop/improve the content, take a look at how you can help and get in touch! We are more than happy to talk to you, whether you are a learner, teacher, experienced web developer, or someone else interested in helping to improve the learning experience. Scrimba's Frontend Developer Career Path teaches all you need to know to be a competent front-end web developer, with fun interactive lessons and challenges, knowledgeable teachers, and a supportive community. Go from zero to landing your first front-end job! Many of the course components are available as standalone free versions. A great interactive site for learning programming languages from scratch. Interactive site with tutorials and projects to learn web development. An excellent resource for aspiring web developers â Learn JavaScript in an interactive environment, with short lessons and interactive tests, guided by automated assessment. The first 40 lessons are free, and the complete course is available for a small one-time payment. This page was last modified on Jul 24, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://hacks.mozilla.org/",
    "title": "Home - Mozilla Hacks - the Web developer blog",
    "content": "Beginning in version 138, Firefox will offer an alternative to DLL injection for Data Loss Prevention (DLP) deployments in enterprise environments. DLL Injection DLL injection into Firefox is a topic we’ve covered on the Hacks blog before. In 2023, we blogged about the Firefox capability to let users block third-party DLLs from being loaded. We […] Sign up for the Mozilla Developer Newsletter: If you haven’t previously confirmed a subscription to a Mozilla-related newsletter you may have to do so. Please check your inbox or your spam filter for an email from us. Interop 2025 continues the mission to make the web more consistent across browsers, building on 2024’s 95% interoperability score. This year, 19 focus areas target key developer needs and long-standing issues, including WebRTC improvements, Storage Access API, and CSS Zoom. Mozilla and Filament have introduced Uniffi for React Native, a tool that allows developers to leverage the safety and performance benefits of Rust in cross-platform React Native apps. Discover the latest release of Llamafile 0.8.14, an open-source AI tool by Mozilla Builders. With a new command-line chat interface, enhanced performance, and support for powerful models, Llamafile makes it easy to run large language models (LLMs) on your own hardware. Learn more about the updates and how to get involved with this cutting-edge project. As AI continues to evolve, so do the threats against it. As these GenAI systems become more sophisticated and widely adopted, ensuring their security and ethical use becomes paramount. 0Din is a groundbreaking GenAI bug bounty program dedicated specifically to help secure GenAI systems and beyond. In this blog, you'll learn about 0Din, how it works, and how you can participate and make a difference in securing our AI future. We’re pleased to announce that, as of version 23, the Puppeteer browser automation library now has first-class support for Firefox. This means that it’s now easy to write automation and perform end-to-end testing using Puppeteer, and run against both Chrome and Firefox. Process separation remains one of the most important parts of the Firefox security model and securing our IPC (Inter-Process Communication) interfaces is crucial to keep privileges in the different processes separated. We take a more detailed look at our newest tool for finding vulnerabilities in these interfaces – snapshot fuzzing. Today we’re proud to announce the next Mozilla Builders project: sqlite-vec. Led by independent developer Alex Garcia, this project brings vector search functionality to the beloved SQLite embedded database. Alex has been working on this problem for a while, and we think his latest approach will have a great impact by providing application developers with a powerful new tool for building Local AI applications. Firefox 130 will introduce an experimental new capability to automatically generate alt-text for images using a fully private on-device AI model. The feature will be available as part of Firefox’s built-in PDF editor, and our end goal is to make it available in general browsing for users with screen readers. When Mozilla’s Innovation group first launched the llamafile project late last year, we were thrilled by the immediate positive response from open source AI developers. It’s become one of Mozilla’s top three most-favorited repositories on GitHub, attracting a number of contributors, some excellent PRs, and a growing community on our Discord server. In this blog post, we delve into the motivations for choosing Rust for our crash reporter, outline the unique challenges of designing an application that operates when the main browser has failed, and discuss the new architecture we've implemented. We also share insights into the technical nuances of the implementation, demonstrating how Rust's features are leveraged to handle crashes more effectively and securely. Except where otherwise noted, content on this site is licensed\n          under the\n          Creative Commons Attribution Share-Alike License v3.0\n          or any later version."
  },
  {
    "url": "https://www.mozilla.org/",
    "title": "Internet for people, not profit — Mozilla Global",
    "content": "In addition to Cookies necessary for this site to function, we’d like your permission to set some additional Cookies to better understand your browsing needs and improve your experience. Rest assured — we value your privacy. All products Our Mission Our Work It is available in the following languages: Privacy-first advertising solutions for brands, publishers, and platforms. Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation.\n          Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.mozilla.org/privacy/websites/",
    "title": "Websites, Communications & Cookies Privacy Notice — Mozilla",
    "content": "In addition to Cookies necessary for this site to function, we’d like your permission to set some additional Cookies to better understand your browsing needs and improve your experience. Rest assured — we value your privacy. All products Our Mission Our Work We care about your privacy. When Mozilla (that’s us) collects information about you, our Mozilla Privacy Policy describes how we handle that information. This privacy notice applies to Mozilla operated websites and mobile apps, which include the domains mozilla.org, and firefox.com, among others. This includes, for example, addons.mozilla.org, bugzilla.mozilla.org, careers.mozilla.org, community.mozilla.org, developer.mozilla.org, mozillafoundation.org, people.mozilla.org, support.mozilla.org, and wiki.mozilla.org. We may receive personal information from you based on your interaction with us on social media platforms, if you submit a job, intern, grant or fellow application, if you volunteer as a Mozilla community member, if you submit user feedback or a request to us, if you sign up for an account or for a subscription, or if you engage with a product or policy campaign. Social Media: If you engage with our accounts on external social media platforms, such as X (formerly Twitter) and Facebook, we may receive personal information about you. If you use these networks, their privacy policies apply, and you are encouraged to read them. Job, Intern, Grant & Fellow Applicants: Applicants for employment, internship, grant, or fellowship opportunities with Mozilla are required to give us a name, street address, telephone number, email address, and resume, and sometimes additional information as well. We use this information to process and evaluate applications and to communicate with applicants about opportunities. We use Greenhouse to handle employment and intern applications, and Fluxx.io to handle fellowship and MOSS grant applications. Contributors: Volunteering for Mozilla as a community contributor may require Mozilla and others to communicate with you at the email address that you provide in connection to your contribution and to recognize your efforts. If you contribute to Bugzilla, or our code bases, then your email address and possibly your name will be publicly available to all internet users. If you create an account on Mozilla Connect (platform powered by Khoros, which has its own privacy notice), your name, your avatar, your posts and replies and other information you share will be accessible to Mozilla and other community members. If you create a profile at people.mozilla.org, it will be accessible to Mozilla employees and Mozilla contributors; you can edit your profile data at Profile Settings. We sometimes use contributor information from sources (such as Bugzilla) in dashboards to visually share aggregated data on the Mozilla community. An example is https://wiki.mozilla.org/Contribute/Dashboards. Where possible, we try to minimize contact information that is publicly displayed. User Feedback: You can provide feedback to us on our products and services on webpages like connect.mozilla.org, through an in-product experience, or through channels such as email, Bugzilla, Matrix, a social media account, our Get Involved page, or through a group like Student Ambassadors. Please minimize the personal information you choose to share on these forums because your comments may be accessible to the public. Accounts & Subscriptions: Some websites, for example Add-Ons for Firefox, Relay, Monitor, and MDN, require account creation. For account management we use Mozilla accounts, GitHub, or custom systems; learn more about how to manage your Mozilla account data. You may periodically receive emails in connection with your account or through subscriptions. Our email management vendors are SalesForce Marketing Cloud, Amazon Simple Email Service, Mailchimp, SocketLabs, Campaign Monitor, or Braze, and you can unsubscribe using the link at the bottom of the relevant email. Product & Policy Campaigns: Some of our webpages host product or policy campaigns. For example, you can request a link by email or SMS to install Firefox on your mobile device or petition your legislators on internet issues. We may use third parties to manage these campaigns and handle any data that you choose to submit. We may use cookies, clear GIFs, third-party web analytics, device information, and IP addresses for functionality and to better understand user interaction with our products, services, and communications. Functionality: We may use information such as cookies, device information, and IP addresses to enhance functionality of certain products, services, and communications. For example: Metrics: We may also use cookies, device information, and IP addresses, along with clear GIFs, cookies and third-party services to help us understand in the aggregate how users engage with our products, services, communications, websites, online campaigns, snippets, devices, and other platforms. We use: Fraud Prevention: Mozilla has implemented third-party technology, Google’s Invisible reCAPTCHA, that operates in the background on some of our websites in order to identify fraudulent activity. Use of the Invisible reCAPTCHA is governed by the Google Privacy Policy and Terms of Use. You can control individual cookie preferences, indicate your cookie preferences to others, and opt out of web analytics and optimization tools. Cookie History: You can accept or decline individual cookies in your preferences in the Tools/Options/Privacy history section. Note that certain features of our products and services may not function properly without the aid of cookies. Do Not Track: Mozilla does not track users across third-party websites to provide targeted advertising. In addition, if you have configured your browser to send a “Do Not Track” signal when accessing our websites, Mozilla will not utilize any of the tools described in the Metrics section. Email: Our marketing communications are optional to receive and you can unsubscribe from the footer of the email or by updating your Mozilla email preferences, or for Thunderbird’s newsletter, on the Thunderbird website. Analytics & Optimization: Follow the instructions below to prevent data collection about your visits to Mozilla websites: Social Media: The social sharing buttons on Mozilla websites are designed not to share data with the applicable social media provider until you specifically click the relevant social media icon. Some Mozilla websites allow you to make purchases (such as apps or gear), contribute funds to specific Mozilla projects, or make donations in support of Mozilla public and charitable programs. These transactions are often handled by Mozilla’s third-party vendors. Payment Processing: When you purchase something via a Mozilla website, contribute funds or make donations, you will send payment through one of our third-party payment providers: Stripe, Apple Pay, PayPal, Venmo or Google Pay. Mozilla receives a record of your account (including your billing address and the last four digits of your payment method) and (where relevant) the status of your account’s subscription; we may also receive your name, mailing address, and/or email address. This data is used for payment processing, fraud detection and record-keeping purposes. Contact and Donation Information: We use Acoustic, Salesforce, Fundraise Up and Campaign Monitor to email receipts and store records, which are retained for 10 years from the date of last payment. If you make a donation to the Mozilla Foundation or Thunderbird, we use Fundraise Up to manage our donations and provide transactional receipts to donors. To make requests regarding your personal data, please contact us through our Data Subject Access Request Portal. If you have any other questions regarding personal data or our privacy practices, please contact us at compliance@mozilla.com. We respond to all requests we receive from individuals wishing to exercise their data protection rights in accordance with applicable data protection laws. Privacy-first advertising solutions for brands, publishers, and platforms. Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation.\n          Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.mozilla.org/about/legal/terms/mozilla",
    "title": "Websites & Communications Terms of Use — Mozilla",
    "content": "In addition to Cookies necessary for this site to function, we’d like your permission to set some additional Cookies to better understand your browsing needs and improve your experience. Rest assured — we value your privacy. All products Our Mission Our Work June 23, 2016 Please read the terms of this entire document  (“Terms”) carefully because it explains your rights and responsibilities when you visit any of Mozilla’s websites (“Websites”), or related feeds, social media, newsletters, source code repositories, and emails (together with Websites, these are collectively referred to as “Communications”). By accessing or signing up to receive Communications, you agree to be bound by these Terms. Our Websites include multiple domains such as mozilla.org, mozillians.org, firefox.com, mozillafestival.org, openstandard.com, openbadges.org and webmaker.org. You may also recognize our Websites by nicknames such as Bugzilla@Mozilla, BMO, MozWiki, MoPad, MozReps, MDN, Marketplace, One and Done, SUMO, and AMO.\nSome of our Websites connect you with links, apps or add-ons that are provided by other parties and are subject to separate Terms. Some Websites require you to register for an account in order to access additional features of a Website or another Mozilla service. If applicable, additional terms will be presented to you. You are responsible for all activities under your account. Some Websites allow you to create a username during registration. Your use of a username must comply with our Acceptable Use Policy. Our Communications include content such as articles, images, photographs, comments, software code, audio and video clips, and other materials (collectively, “Content”).  Content is authored by Mozilla, contributors to Mozilla projects, and other sources. Content authored by Mozilla is generally made available for public sharing and reuse through open licenses such as Creative Commons (for expressive material) or the Mozilla Public License (for software code).  In most cases we ask Mozilla contributors to release Content under open licenses. Some Content in our Communications is acquired from sources that prohibit further use of their Content without advance permission.  Where possible, the Content or Website footer will display a notice with the applicable license. You agree to abide by such notices.  Note the following specifics: You may contribute Content when interacting with our Communications, including but not limited to commenting on an article, blogging, contributing code, or contributing graphics or written material (each a “Submission”). Unless your Submission is made under a separate agreement with Mozilla, in which case that agreement will govern, then For Submissions to Mozilla's open source projects: For all other Submissions, you agree to the following in connection with each: The Mozilla Websites, Communications & Cookies Privacy Notice describes how we handle information that we receive from you in connection with our Communications. The Privacy Notice explains, for example, that we place certain cookies on our Websites and how you can opt-out. If you subscribe to receive our newsletters or register for an account in connection with any of our Websites, you may receive transactional emails from us in connection with your account (for example, legal, privacy, and security updates). Some of our Websites have online tools that allow you to send emails to others. For example, you can invite your contacts to events on Mozillians.  You agree not to misuse others’ email addresses (for example, by spamming them). Other Websites, like MozReps, provide tools that enable users to arrange physical events for anyone to attend. Please exercise caution and good judgment when attending events. For more information on how to report claims of copyright or trademark infringement, please see: https://www.mozilla.org/about/legal/report-infringement/. These Terms will continue to apply until ended by either you or Mozilla. You can choose to end them at any time for any reason by discontinuing your use of our Communications and, if applicable, deleting your account. We may suspend or terminate your access to our Communications at any time for any reason, including, but not limited to, if we reasonably believe: (i) you have violated these Terms, our Acceptable Use Policy, or other relevant policy; (ii) you create risk or possible legal exposure for us; or (iii) our provision of the Communications to you is no longer commercially viable. In all such cases, these Terms shall terminate, except that the following sections shall continue to apply: Indemnification, Disclaimer; Limitation of Liability, Miscellaneous. You agree to defend, indemnify and hold harmless Mozilla, its contractors, contributors, licensors, and partners; and the respective directors, officers, employees and agents of the foregoing (\"Indemnified Parties\") from and against any and all third party claims and expenses, including attorneys' fees, arising out of or related to your use of our Communications (including, but not limited to, from your Submissions or from your violation of any these Terms). THE COMMUNICATIONS ARE PROVIDED \"AS IS\" WITH ALL FAULTS. TO THE EXTENT PERMITTED BY LAW, MOZILLA AND THE INDEMNIFIED PARTIES HEREBY DISCLAIM ALL WARRANTIES, WHETHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION WARRANTIES THAT THE COMMUNICATIONS ARE FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, AND NON-INFRINGING. YOU BEAR THE ENTIRE RISK AS TO USING THE COMMUNICATIONS FOR YOUR PURPOSES AND AS TO THE QUALITY AND PERFORMANCE OF THE COMMUNICATIONS, INCLUDING WITHOUT LIMITATION THE RISK THAT YOUR HARDWARE, SOFTWARE, OR CONTENT IS DELETED OR CORRUPTED, THAT SOMEONE ELSE GAINS UNAUTHORIZED ACCESS TO YOUR INFORMATION, OR THAT ANOTHER USER MISUSES OR MISAPPROPRIATES YOUR SUBMISSION. THIS LIMITATION WILL APPLY NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE OF ANY REMEDY. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF IMPLIED WARRANTIES, SO THIS DISCLAIMER MAY NOT APPLY TO YOU. EXCEPT AS REQUIRED BY LAW, MOZILLA AND THE INDEMNIFIED PARTIES WILL NOT BE LIABLE FOR ANY INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR EXEMPLARY DAMAGES ARISING OUT OF OR IN ANY WAY RELATING TO THESE TERMS OR THE USE OF OR INABILITY TO USE THE COMMUNICATIONS, INCLUDING WITHOUT LIMITATION DIRECT AND INDIRECT DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, LOST PROFITS, LOSS OF DATA, AND COMPUTER FAILURE OR MALFUNCTION, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES AND REGARDLESS OF THE THEORY (CONTRACT, TORT, OR OTHERWISE) UPON WHICH SUCH CLAIM IS BASED. THE COLLECTIVE LIABILITY OF MOZILLA AND THE INDEMNIFIED PARTIES UNDER THIS AGREEMENT WILL NOT EXCEED $500 (FIVE HUNDRED DOLLARS). SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL, CONSEQUENTIAL, OR SPECIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU. We may update these Terms from time to time to address a new feature of the Communications or to clarify a provision. The updated Terms will be posted online. If the changes are substantive, we will announce the update through our usual channels for such announcements such as blog posts, banners, emails, or forums. Your continued use of our Communications after the effective date of such changes constitutes your acceptance of such changes. To make your review more convenient, we will post an effective date at the top of this page. These Terms constitute the entire agreement between you and Mozilla concerning our Communications and supersede any prior versions of these Terms. The Communications and these Terms are governed by the laws of the state of California, U.S.A., excluding its conflict of law provisions. All claims and disputes arising out of the Communications or these Terms shall be brought exclusively in the courts of Santa Clara County, California, and you consent to personal jurisdiction in those courts. If any portion of these Terms is held to be invalid or unenforceable, the remaining portions will remain in full force and effect. In the event of a conflict between a translated version of these Terms and the English language version, the English language version shall control. In the event of a conflict between these Terms and relevant additional terms, the additional terms shall control. Mozilla \nAttn: Mozilla – Legal Notices\n149 New Montgomery St.\n4th Floor\nSan Francisco, CA 94105\nUSA\nTelephone: 650-903-0800\nFax: 650-903-0875\nLegal-notices at mozilla.com Privacy-first advertising solutions for brands, publishers, and platforms. Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation.\n          Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.mozilla.org/about/governance/policies/participation/",
    "title": "Community Participation Guidelines — Mozilla",
    "content": "In addition to Cookies necessary for this site to function, we’d like your permission to set some additional Cookies to better understand your browsing needs and improve your experience. Rest assured — we value your privacy. All products Our Mission Our Work Software and other innovations designed to advance our mission. Become a volunteer contributor in a number of different areas. Read about our vision for the Web and how we intend to pursue that vision. The heart of Mozilla is people. We put people first and do our best to recognize, appreciate and respect the diversity of our global contributors. The Mozilla Project welcomes contributions from everyone who shares our goals and wants to contribute in a healthy and constructive manner within our community. As such, we have adopted this code of conduct and require all those who participate to agree and adhere to these Community Participation Guidelines in order to help us create a safe and positive community experience for all. These guidelines aim to support a community where all people should feel safe to participate, introduce new ideas and inspire others, regardless of: Openness, collaboration and participation are core aspects of our work — from development on Firefox to collaboratively designing curriculum. We gain strength from diversity and actively seek participation from those who enhance it. These guidelines exist to enable diverse individuals and groups to interact and collaborate to mutual advantage. This document outlines both expected and prohibited behavior. These guidelines outline our behavior expectations as members of the Mozilla community in all Mozilla activities, both offline and online. Your participation is contingent upon following these guidelines in all Mozilla activities, including but not limited to: These guidelines work in conjunction with our Anti-Harassment/Discrimination Policies[1], which sets out protections for, and obligations of, Mozilla employees. The Anti-Harassment/Discrimination Policy is crafted with specific legal definitions and requirements in mind. While these guidelines / code of conduct are specifically aimed at Mozilla’s work and community, we recognize that it is possible for actions taken outside of Mozilla’s online or in person spaces to have a deep impact on community health. (For example, in the past, we publicly identified an anonymous posting aimed at a Mozilla employee in a non-Mozilla forum as clear grounds for removal from the Mozilla community.) This is an active topic in the diversity and inclusion realm. We anticipate wide-ranging discussions among our communities about appropriate boundaries. The following behaviors are expected of all Mozillians: Value each other’s ideas, styles and viewpoints. We may not always agree, but disagreement is no excuse for poor manners. Be open to different possibilities and to being wrong. Be respectful in all interactions and communications, especially when debating the merits of different options. Be aware of your impact and how intense interactions may be affecting people. Be direct, constructive and positive. Take responsibility for your impact and your mistakes – if someone says they have been harmed through your words or actions, listen carefully, apologize sincerely, and correct the behavior going forward. We are likely to have some discussions about if and when criticism is respectful and when it’s not. We must be able to speak directly when we disagree and when we think we need to improve. We cannot withhold hard truths. Doing so respectfully is hard, doing so when others don’t seem to be listening is harder, and hearing such comments when one is the recipient can be even harder still. We need to be honest and direct, as well as respectful. Seek diverse perspectives. Diversity of views and of people on teams powers innovation, even if it is not always comfortable. Encourage all voices. Help new perspectives be heard and listen actively. If you find yourself dominating a discussion, it is especially important to step back and encourage other voices to join in. Be aware of how much time is taken up by dominant members of the group. Provide alternative ways to contribute or participate when possible.\n\n  \n  Be inclusive of everyone in an interaction, respecting and facilitating people’s participation whether they are:\n  \n\nRemote (on video or phone)\nNot native language speakers\nComing from a different culture\nUsing pronouns other than “he” or “she”\nLiving in a different time zone\nFacing other challenges to participate\n\n\n  Think about how you might facilitate alternative ways to contribute or participate. If you find yourself dominating a discussion, step back. Make way for other voices and listen actively to them.\n  \nUnderstand Different Perspectives\n\n  Our goal should not be to “win” every disagreement or argument. A more productive goal is to be open to ideas that make our own ideas better. Strive to be an example for inclusive thinking. “Winning” is when different perspectives make our work richer and stronger.\n  \nAppreciate and Accommodate Our Similarities and Differences\n\n  Mozillians come from many cultures and backgrounds. Cultural differences can encompass everything from official religious observances to personal habits to clothing. Be respectful of people with different cultural practices, attitudes and beliefs. Work to eliminate your own biases, prejudices and discriminatory practices. Think of others’ needs from their point of view. Use preferred titles (including pronouns) and the appropriate tone of voice. Respect people’s right to privacy and confidentiality. Be open to learning from and educating others as well as educating yourself; it is unrealistic to expect Mozillians to know the cultural practices of every ethnic and cultural group, but everyone needs to recognize one’s native culture is only part of positive interactions.\n  \nLead by Example\n\n  By matching your actions with your words, you become a person others want to follow. Your actions influence others to behave and respond in ways that are valuable and appropriate for our organizational outcomes. Design your community and your work for inclusion. Hold yourself and others accountable for inclusive behaviors. Make decisions based on the highest good for Mozilla’s mission. Be inclusive of everyone in an interaction, respecting and facilitating people’s participation whether they are: Think about how you might facilitate alternative ways to contribute or participate. If you find yourself dominating a discussion, step back. Make way for other voices and listen actively to them. Our goal should not be to “win” every disagreement or argument. A more productive goal is to be open to ideas that make our own ideas better. Strive to be an example for inclusive thinking. “Winning” is when different perspectives make our work richer and stronger. Mozillians come from many cultures and backgrounds. Cultural differences can encompass everything from official religious observances to personal habits to clothing. Be respectful of people with different cultural practices, attitudes and beliefs. Work to eliminate your own biases, prejudices and discriminatory practices. Think of others’ needs from their point of view. Use preferred titles (including pronouns) and the appropriate tone of voice. Respect people’s right to privacy and confidentiality. Be open to learning from and educating others as well as educating yourself; it is unrealistic to expect Mozillians to know the cultural practices of every ethnic and cultural group, but everyone needs to recognize one’s native culture is only part of positive interactions. By matching your actions with your words, you become a person others want to follow. Your actions influence others to behave and respond in ways that are valuable and appropriate for our organizational outcomes. Design your community and your work for inclusion. Hold yourself and others accountable for inclusive behaviors. Make decisions based on the highest good for Mozilla’s mission. The following behaviors are considered to be unacceptable under these guidelines. Violence and threats of violence are not acceptable - online or offline. This includes incitement of violence toward any individual, including encouraging a person to commit self-harm. This also includes posting or threatening to post other people’s personally identifying information (“doxxing”) online. Conflicts will inevitably arise, but frustration should never turn into a personal attack. It is not okay to insult, demean or belittle others. Attacking someone for their opinions, beliefs and ideas is not acceptable. It is important to speak directly when we disagree and when we think we need to improve, but such discussions must be conducted respectfully and professionally, remaining focused on the issue at hand. Hurtful or harmful language related to: is not acceptable. This includes deliberately referring to someone by a gender that they do not identify with, and/or questioning the legitimacy of an individual’s gender identity. If you’re unsure if a word is derogatory, don’t use it. This also includes repeated subtle and/or indirect discrimination; when asked to stop, stop the behavior in question. Unwelcome sexual attention or unwelcome physical contact is not acceptable. This includes sexualized comments, jokes or imagery in interactions, communications or presentation materials, as well as inappropriate touching, groping, or sexual advances. Additionally, touching a person without permission, including sensitive areas such as their hair, pregnant stomach, mobility device (wheelchair, scooter, etc) or tattoos is unacceptable. This includes physically blocking or intimidating another person. Physical contact or simulated physical contact (such as emojis like “kiss”) without affirmative consent is not acceptable. The sharing or distribution of sexualized images or text is unacceptable. Sustained disruption of events, forums, or meetings, including talks and presentations, will not be tolerated. This includes: We will treat influencing or leading such activities the same way we treat the activities themselves, and thus the same consequences apply. Bad behavior from any Mozillian, including those with decision-making authority, will not be tolerated. Intentional efforts to exclude people (except as part of a consequence of the guidelines or other official action) from Mozilla activities are not acceptable and will be dealt with appropriately. Reports of harassment/discrimination will be promptly and thoroughly investigated by the people responsible for the safety of the space, event or activity. Appropriate measures will be taken to address the situation. Anyone being asked to stop unacceptable behavior is expected to comply immediately. Violation of these guidelines can result in anyone being asked to leave an event or online space, either temporarily or for the duration of the event, or being banned from participation in spaces, or future events and activities in perpetuity. Mozilla Staff are held accountable, in addition to these guidelines, to Mozilla’s staff Anti-Harassment/Discrimination Policies [1]. Mozilla staff in violation of these guidelines may be subject to further consequences, such as disciplinary action, up to and including termination of employment. For contractors or vendors, violation of these guidelines may affect continuation or renewal of contract. In addition, any participants who abuse the reporting process will be considered to be in violation of these guidelines and subject to the same consequences. False reporting, especially to retaliate or exclude, will not be accepted or tolerated. If you believe you’re experiencing unacceptable behavior that will not be tolerated as outlined above, please use cpg-report@mozilla.com to report. Reports are triaged by the Community Participation Guidelines Response Lead. After receiving a concise description of your situation, they will review and determine the next steps. In addition to conducting any investigation, they can provide a range of resources, from a private consultation to other community resources. They will involve other colleagues or outside specialists (such as legal counsel), as needed to appropriately address each situation. Please also report to us if you observe a potentially dangerous situation, someone in distress, or violations of these guidelines, even if the situation is not happening to you. If you feel you have been unfairly accused of violating these guidelines, please follow the same reporting process. Each physical or virtual Mozilla space shall have a designated contact. All Mozilla events will have designated a specific safety guideline with emergency and anti-abuse contacts at the event as well as online. These contacts will be posted prominently throughout the event, and in print and online materials. Event leaders are requested to speak at the event about the guidelines and to ask participants to review and agree to them when they sign up for the event. Reports will receive an email notice of receipt. Once an incident has been investigated and a decision has been communicated to the relevant parties, all have the opportunity to appeal this decision by sending an email to cpg-questions@mozilla.com. Everyone is encouraged to ask questions about these guidelines. If you are organizing an event or activity, reach out for tips for building inclusion for your event, activity or space. Your input is welcome and you will always get a response within 24 hours (or on the next weekday, if it is the weekend) if you reach out to cpg-questions@mozilla.com. Please review this change log for updates to this document. This set of guidelines is distributed under a Creative Commons Attribution-ShareAlike license. These guidelines have been adapted with modifications from Mozilla’s original Community Participation Guidelines, the Ubuntu Code of Conduct, Mozilla’s View Source Conference Code of Conduct, and the Rust Language Code of Conduct, which are based on Stumptown Syndicate’s Citizen Code of Conduct. Additional text from the LGBTQ in Technology Code of Conduct and the WisCon code of conduct. This document and all associated processes are only possible with the hard work of many, many Mozillians. Mozilla may amend the guidelines from time to time and may also vary the procedures it sets out where appropriate in a particular case. Your agreement to comply with the guidelines will be deemed agreement to any changes to it. This policy does not form part of any Mozilla employee’s contract of employment or otherwise have contractual effect. [1] The anti-harassment policy is accessible to paid staff here. Get the Mozilla newsletter and help us keep it open and free. Afghanistan\nAkrotiri\nAlbania\nAlgeria\nAmerican Samoa\nAndorra\nAngola\nAnguilla\nAntarctica\nAntigua and Barbuda\nArgentina\nArmenia\nAruba\nAshmore and Cartier Islands\nAustralia\nAustria\nAzerbaijan\nBahamas, The\nBahrain\nBaker Island\nBangladesh\nBarbados\nBassas da India\nBelarus\nBelgium\nBelize\nBenin\nBermuda\nBhutan\nBolivia\nBosnia and Herzegovina\nBotswana\nBouvet Island\nBrazil\nBritish Indian Ocean Territory\nBrunei\nBulgaria\nBurkina Faso\nBurma\nBurundi\nCambodia\nCameroon\nCanada\nCape Verde\nCaribbean Netherlands\nCayman Islands\nCentral African Republic\nChad\nChile\nChina\nChristmas Island\nClipperton Island\nCocos (Keeling) Islands\nColombia\nComoros\nCongo (Brazzaville)\nCongo (Kinshasa)\nCook Islands\nCoral Sea Islands\nCosta Rica\nCroatia\nCuba\nCuraçao\nCyprus\nCzechia\nCôte d’Ivoire\nDenmark\nDhekelia\nDiego Garcia\nDjibouti\nDominica\nDominican Republic\nEcuador\nEgypt\nEl Salvador\nEquatorial Guinea\nEritrea\nEstonia\nEswatini\nEthiopia\nEuropa Island\nFalkland Islands (Islas Malvinas)\nFaroe Islands\nFiji\nFinland\nFrance\nFrench Guiana\nFrench Polynesia\nFrench Southern and Antarctic Lands\nGabon\nGambia, The\nGaza Strip\nGeorgia\nGermany\nGhana\nGibraltar\nGlorioso Islands\nGreece\nGreenland\nGrenada\nGuadeloupe\nGuam\nGuatemala\nGuernsey\nGuinea\nGuinea-Bissau\nGuyana\nHaiti\nHeard Island and McDonald Islands\nHonduras\nHong Kong\nHowland Island\nHungary\nIceland\nIndia\nIndonesia\nIran\nIraq\nIreland\nIsle of Man\nIsrael\nItaly\nJamaica\nJan Mayen\nJapan\nJarvis Island\nJersey\nJohnston Atoll\nJordan\nJuan de Nova Island\nKazakhstan\nKenya\nKingman Reef\nKiribati\nKorea, North\nKorea, South\nKosovo\nKuwait\nKyrgyzstan\nLaos\nLatvia\nLebanon\nLesotho\nLiberia\nLibya\nLiechtenstein\nLithuania\nLuxembourg\nMacau\nMadagascar\nMalawi\nMalaysia\nMaldives\nMali\nMalta\nMarshall Islands\nMartinique\nMauritania\nMauritius\nMayotte\nMexico\nMicronesia, Federated States of\nMidway Islands\nMoldova\nMonaco\nMongolia\nMontenegro\nMontserrat\nMorocco\nMozambique\nNamibia\nNauru\nNavassa Island\nNepal\nNetherlands\nNew Caledonia\nNew Zealand\nNicaragua\nNiger\nNigeria\nNiue\nNorfolk Island\nNorth Macedonia\nNorthern Mariana Islands\nNorway\nOman\nPakistan\nPalau\nPalmyra Atoll\nPanama\nPapua New Guinea\nParacel Islands\nParaguay\nPeru\nPhilippines\nPitcairn Islands\nPoland\nPortugal\nPuerto Rico\nQatar\nRomania\nRussia\nRwanda\nRéunion\nSaint Barthélemy\nSaint Helena, Ascension, and Tristan da Cunha\nSaint Kitts and Nevis\nSaint Lucia\nSaint Martin\nSaint Pierre and Miquelon\nSaint Vincent and the Grenadines\nSamoa\nSan Marino\nSaudi Arabia\nSenegal\nSerbia\nSeychelles\nSierra Leone\nSingapore\nSint Maarten\nSlovakia\nSlovenia\nSolomon Islands\nSomalia\nSouth Africa\nSouth Georgia and South Sandwich Islands\nSouth Sudan\nSpain\nSpratly Islands\nSri Lanka\nSudan\nSuriname\nSvalbard\nSweden\nSwitzerland\nSyria\nSão Tomé and Príncipe\nTaiwan\nTajikistan\nTanzania\nThailand\nTimor-Leste\nTogo\nTokelau\nTonga\nTrinidad and Tobago\nTromelin Island\nTunisia\nTurkey\nTurkmenistan\nTurks and Caicos Islands\nTuvalu\nUganda\nUkraine\nUnited Arab Emirates\nUnited Kingdom\nUnited States\nUruguay\nUzbekistan\nVanuatu\nVatican City\nVenezuela\nVietnam\nVirgin Islands, British\nVirgin Islands, U.S.\nWake Island\nWallis and Futuna\nWest Bank\nWestern Sahara\nYemen\nZambia\nZimbabwe Bahasa Indonesia\nDeutsch\nEnglish\nEspañol\nFrançais\nPolski\nPortuguês\nРусский\n正體中文 I’m okay with Mozilla handling my info as explained in this Privacy Notice Sign Up Now\n          \n        \n\n              \n              \n                We will only send you Mozilla-related information. You can unsubscribe at any time. If you haven’t previously confirmed a subscription to a Mozilla-related newsletter, you may have to do so. Please check your inbox or your spam filter for an email from us. Privacy-first advertising solutions for brands, publishers, and platforms. Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation.\n          Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.mozilla.org",
    "title": "Internet for people, not profit — Mozilla Global",
    "content": "In addition to Cookies necessary for this site to function, we’d like your permission to set some additional Cookies to better understand your browsing needs and improve your experience. Rest assured — we value your privacy. All products Our Mission Our Work It is available in the following languages: Privacy-first advertising solutions for brands, publishers, and platforms. Visit Mozilla Corporation’s not-for-profit parent, the Mozilla Foundation.\n          Portions of this content are ©1998–2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://foundation.mozilla.org/",
    "title": "Welcome to Mozilla Foundation\n                \n            \n            \n                \n                - Mozilla Foundation",
    "content": "Stand up for a better internet Stand up for a better internet Hear from Mozilla Foundation’s Executive Director Nabiha Syed on why she is defiantly optimistic that the future of technology can be good— and we all need to roll up our sleeves to make it happen together. Mozilla Festival 2025 Bold ideas shaping the future of technology Forget what you’ve been told. The future of tech isn’t set—it’s ours to shape. Join us in Barcelona, November 7–9, to unlearn defaults, imagine boldly and build what’s next. Mozilla Festival 2025 Community Let’s roll up our sleeves Our tech future is not inevitable—it’s a design choice. And we can choose differently together. Join us to build a tech future––Powered by people. Open by design. Community The internet we deserve starts with you. Sign up for our newsletter. If you haven’t previously confirmed your opt-in to a Mozilla-related email subscription you may have to do so now.\n          Please check your inbox or spam filter for an email from us to click and confirm your subscription. If you have already confirmed your opt-in to receive Mozilla-related emails, you can now\n          \n            manage your subscriptions\n          \n          and update your email preferences. We're building alternative digital futures Tech education that empowers, for everyone Powered by our people and purpose Dr. Mary is reimagining tech education in Kenya. As the Dean of Computing and Informatics at Meru University, she's bridging the gap between what her students are learning and the real challenges in their communities. For her, building better technology starts with listening, \"it's not just about coding, it's about understanding people's needs.\" Irvin is inspiring more people to build a better digital future. As a longtime contributor and volunteer community lead for the Mozilla Taiwan Community, Irvin is passionate about turning open-source technology into local impact. He has dedicated years to projects like Firefox, Support Mozilla (SUMO), MDN, and Common Voice. Surabhi explores how media can be a lever to drive social impact at RNW Media in the Netherlands. She is focused on the intersection of media and AI ethics. She wants real impact for her community, where \"diverse groups of people have a voice, and the decision-making power to co-design and co-create tech that serves public interest.\" Together we have the power to make good on the promise of the Internet. Join our global movement and make a contribution today to shape the future of technology. Stay updated with our newsletter If you haven’t previously confirmed your opt-in to a Mozilla-related email subscription you may have to do so now.\n          Please check your inbox or spam filter for an email from us to click and confirm your subscription. If you have already confirmed your opt-in to receive Mozilla-related emails, you can now\n          \n            manage your subscriptions\n          \n          and update your email preferences. Mozilla Foundation is a global non-profit and parent of the Mozilla Corporation. Most content available under a Creative Commons license."
  },
  {
    "url": "https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Attrib_copyright_license",
    "title": "Attribution and copyright licensing - MDN Web Docs | MDN",
    "content": "Web technology reference for developers Structure of content on the web Code used to describe document style General-purpose scripting language Protocol for transmitting web resources Interfaces for building web applications Developing extensions for web browsers Build web projects usable for all Web technology reference for developers Learn web development Learn web development Learn to structure web content with HTML Learn to style content using CSS Learn to run scripts in the browser Learn to make the web accessible to all A customized MDN experience Get real-time assistance and support All browser compatibility updates at a glance Learn how to use MDN Plus Frequently asked questions about MDN Plus Write, test and share your code Scan a website for free Get real-time assistance and support MDN Web Docs content is available free of charge and is available under various open-source licenses. This section covers the types of content we provide and the copyrights and licenses that are in effect for each type if you choose to reuse any of it. Note:\nThe content on MDN Web Docs has been prepared with the contributions of authors from both inside and outside Mozilla. Unless otherwise indicated, the content is available under the terms of the Creative Commons Attribution-ShareAlike license (CC-BY-SA), v2.5 or any later version. Your reuse of the content here is published under the same license as the original content â CC-BY-SA v2.5 or any later version.\nWhen reusing the content on MDN Web Docs, you need to ensure that attribution is given to the material as well as to \"Mozilla Contributors\".\nGood attribution is the title of the document, with a hyperlink (online) or URL (in print) to the specific page of the content being sourced, and any modifications you've made briefly described.\nFor example, to provide attribution for this page, you can write: \"Attributions and copyright licensing\" by Mozilla Contributors, licensed under CC-BY-SA 2.5. You may also want to link \"Mozilla Contributors\" to a contributors.txt file linked in the page footer you're referencing for a list of authors, if reasonable.\nSee Recommended practices for attribution for more details. Code samples added on or after August 20, 2010 are in the public domain CC0. No licensing notice is necessary but if you need one, you can use: Any copyright is dedicated to the Public Domain: https://creativecommons.org/publicdomain/zero/1.0/ Code samples added before August 20, 2010 are available under the MIT license; you should insert the following attribution information into the MIT template: \"Â© <date of last wiki page revision> <name of person who put it in the wiki>\". Since the launch of the new Yari MDN platform on December 14 2020, there is currently no way to determine which one you need. We are working on this and will update this content soon. If you wish to contribute to MDN Web Docs, you agree that your documentation is available under the Attribution-ShareAlike license (or occasionally an alternative license already specified by the page you are editing) and that your code samples are available under Creative Commons CC-0 (a Public Domain dedication). Warning:\nNo new pages may be created using alternate licenses. Copyright for contributed materials remains with the author unless the author assigns it to someone else. If you have any questions or concerns about anything discussed here, please contact the MDN Web Docs team. The rights in the logos, trademarks, and service marks of the Mozilla Foundation, as well as the look and feel of this website, are not licensed under the Creative Commons license, and to the extent they are works of authorship (like logos and graphic design), they are not included in the work that is licensed under those terms. If you use the text of documents and wish to also use any of these rights, or if you have any other questions about complying with our licensing terms for this collection, you should contact the Mozilla Foundation here: licensing@mozilla.org. In general, we do not approve of copying content from other sources and putting it on MDN.\nMDN should be made up of original content wherever possible.\nIf we receive a pull request and discover that it contains plagiarized content, we will close it and request that the submitter resubmit the change with the content rewritten into their own words. Note:\nUnless there is a good reason to republish the content, we will probably say \"no\".\nThe MDN writing team's decision is final. If someone wants to donate an article to MDN that they previously published on their blog or it makes sense to copy a complex reference sheet to MDN, there may be justification for republishing it. For these cases, discuss your plan with the MDN team beforehand: If the content is published under a closed license: If the content is published under an open license: We regularly get users asking us questions about how to link to MDN Web Docs and whether or not it is even allowed. The short answer is: yes, you can link to MDN Web Docs! Not only is the hypertext link the essence of the web, it is both a way to point your users to valuable resources as well as a show of trust toward the work our community does. This page was last modified on Feb 19, 2025 by MDN contributors. Your blueprint for a better internet. Visit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2025 by individual mozilla.org contributors. Content available under a Creative Commons license."
  },
  {
    "url": "https://www.bbc.co.uk/",
    "title": "BBC - Home",
    "content": "He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Keep up with the latest from BBC Sport Scottish Premiership: Yengi blows huge Aberdeen chance with Hearts leading Salah opens scoring but Athletic Bilbao level against new-look Liverpool Might Newcastle owner's cash help Liverpool buy Isak? Who pressed their Ashes case? Who disappointed? England's player ratings 'Totally torn apart' - how Morecambe decline threatens a whole community The top stories from England, Scotland, Wales and Northern Ireland Priest denies controlling and abusive behaviour Deputy First Minister Kate Forbes to stand down as MSP Six men deny city centre disorder after 'group fight' A5 decision to be appealed, says minister Find your regional news Latest news and must-see moments Radio personality James Whale dies aged 74 Known for his late-night TV shows and radio phone-ins, he entertained and offended in equal measure. Chloe Ayling: What is it about me and this story that makes it so hard to believe? Video, 00:01:22Chloe Ayling: What is it about me and this story that makes it so hard to believe? Man dies after fall at Oasis Wembley concert Spider-Man Tom Holland filming on streets of Glasgow 'I don't look back at those TV Burp years particularly fondly' Leslie Nielsen on the original The Naked Gun's beginnings. Video, 00:02:00Leslie Nielsen on the original The Naked Gun's beginnings Five summer-filled films for all the family Meal ideas, cooking tips and more, updated daily to keep you inspired Nourishing leafy salads that won't leave you hungry Try these filling recipes that are packed with good-for-you ingredients and perfect for a satisfying lunch or dinner. The colourful Mary Berry lunch you can have on the table in minutes What is iodine and why do I need it? Food content creators break Guinness World Record for largest Scotch egg Is it weird to cut your toast if you're an adult? Audio, 00:04:45Is it weird to cut your toast if you're an adult? Easy ways to boost your health during your working day Man who had Â£5k-a-year takeaway habit drops 10st Tips on navigating results day as a parent 'I was a shopping addict - it needs to be taken more seriously' 'Mealtimes can become a battleground for people with dementia' Audio, 26 minutes'Mealtimes can become a battleground for people with dementia' Could you be owed car finance compensation? Here's how to check A court ruling could lead to millions claiming compensation over being mis-sold car finance deals. 'Tuition fees aren't the problem':  How much to save for your kids to go to university. Video, 00:01:34'Tuition fees aren't the problem':  How much to save for your kids to go to university 'My energy bills are so high I asked the council to buy back my flat' Fake or Fortune: Is a Â£35 painting worth Â£50,000? 'Extreme overseas day-tripping is quite addictive' Video, 00:01:13'Extreme overseas day-tripping is quite addictive' Are these the most mesmerising gardens in the world? Ed Sheeran fan flies 3,000 miles to sing at castle 'I'd be lost without football': The ex-Premier League striker playing at 49 The remarkable story of the rescue penguin that followed a teacher home. Audio, 40 minutesThe remarkable story of the rescue penguin that followed a teacher home A closer look at the week's stories Will there be another heatwave this summer or will August bring more rain? The big fat 'fake' Indian wedding - Gen Z's latest party trend When Scotland was the world's UFO hot spot Results Day 2025: The facts, the myths, and the freebies Panorama delves into the Southport riots and asks why so many took part. Video, 28 minutesPanorama delves into the Southport riots and asks why so many took part Highlights from this year's season Beverley Knight delivers infectious groove with an Aretha Franklin classic. Audio, 3 minutesBeverley Knight delivers infectious groove with an Aretha Franklin classic Kahchun Wong conducts the HallÃ© in Mahler's visionary symphony. Audio, 104 minutesKahchun Wong conducts the HallÃ© in Mahler's visionary symphony The spine-tingling Traitors theme song reimagined with a full orchestra. Audio, 3 minutesThe spine-tingling Traitors theme song reimagined with a full orchestra A stunning moment of tranquility with Bach's Air on a G String. Video, 10 minutesA stunning moment of tranquility with Bach's Air on a G String JADE performs her breakthrough track accompanied by a full orchestra. Video, 5 minutesJADE performs her breakthrough track accompanied by a full orchestra Find the latest news, features, audio and TV coverage. Watch a selection of standout clips from across the BBC Add to your watchlist on iPlayer and subscribe on Sounds Jeremy Clarkson recounts a disastrous World War Two mission What do your dreams say about you? The rise and fall of the 90s lads mag phenomenon Hugh Bonneville narrates Sherlock Holmesâ greatest cases A brand new missing person case in thrilling New Zealand detective drama. Video, 52 minutesA brand new missing person case in thrilling New Zealand detective drama In series two of The Gone, the hunt for an Irish journalist leads detective duo Richter and Huia to a decade-old unsolved murder. The incredible rescue teams saving lives on the wild landscape of Eryri. Video, 28 minutesThe incredible rescue teams saving lives on the wild landscape of Eryri Are standing desks a good way to improve posture - or just a fad? Audio, 25 minutesAre standing desks a good way to improve posture - or just a fad? The story of a cricketing icon, which ended in scandal and tragedy. Audio, 27 minutesThe story of a cricketing icon, which ended in scandal and tragedy Loose Women stars attempt to name that tune first in The Hit List. Video, 44 minutesLoose Women stars attempt to name that tune first in The Hit List Scotland ALBA Wales Cymru NI Copyright Â© 2025 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking."
  },
  {
    "url": "https://www.bbc.co.uk",
    "title": "BBC - Home",
    "content": "He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Keep up with the latest from BBC Sport Scottish Premiership: Yengi blows huge Aberdeen chance with Hearts leading Salah opens scoring but Athletic Bilbao level against new-look Liverpool Might Newcastle owner's cash help Liverpool buy Isak? Who pressed their Ashes case? Who disappointed? England's player ratings 'Totally torn apart' - how Morecambe decline threatens a whole community The top stories from England, Scotland, Wales and Northern Ireland Priest denies controlling and abusive behaviour Deputy First Minister Kate Forbes to stand down as MSP Six men deny city centre disorder after 'group fight' A5 decision to be appealed, says minister Find your regional news Latest news and must-see moments Radio personality James Whale dies aged 74 Known for his late-night TV shows and radio phone-ins, he entertained and offended in equal measure. Chloe Ayling: What is it about me and this story that makes it so hard to believe? Video, 00:01:22Chloe Ayling: What is it about me and this story that makes it so hard to believe? Man dies after fall at Oasis Wembley concert Spider-Man Tom Holland filming on streets of Glasgow 'I don't look back at those TV Burp years particularly fondly' Leslie Nielsen on the original The Naked Gun's beginnings. Video, 00:02:00Leslie Nielsen on the original The Naked Gun's beginnings Five summer-filled films for all the family Meal ideas, cooking tips and more, updated daily to keep you inspired Nourishing leafy salads that won't leave you hungry Try these filling recipes that are packed with good-for-you ingredients and perfect for a satisfying lunch or dinner. The colourful Mary Berry lunch you can have on the table in minutes What is iodine and why do I need it? Food content creators break Guinness World Record for largest Scotch egg Is it weird to cut your toast if you're an adult? Audio, 00:04:45Is it weird to cut your toast if you're an adult? Easy ways to boost your health during your working day Man who had Â£5k-a-year takeaway habit drops 10st Tips on navigating results day as a parent 'I was a shopping addict - it needs to be taken more seriously' 'Mealtimes can become a battleground for people with dementia' Audio, 26 minutes'Mealtimes can become a battleground for people with dementia' Could you be owed car finance compensation? Here's how to check A court ruling could lead to millions claiming compensation over being mis-sold car finance deals. 'Tuition fees aren't the problem':  How much to save for your kids to go to university. Video, 00:01:34'Tuition fees aren't the problem':  How much to save for your kids to go to university 'My energy bills are so high I asked the council to buy back my flat' Fake or Fortune: Is a Â£35 painting worth Â£50,000? 'Extreme overseas day-tripping is quite addictive' Video, 00:01:13'Extreme overseas day-tripping is quite addictive' Are these the most mesmerising gardens in the world? Ed Sheeran fan flies 3,000 miles to sing at castle 'I'd be lost without football': The ex-Premier League striker playing at 49 The remarkable story of the rescue penguin that followed a teacher home. Audio, 40 minutesThe remarkable story of the rescue penguin that followed a teacher home A closer look at the week's stories Will there be another heatwave this summer or will August bring more rain? The big fat 'fake' Indian wedding - Gen Z's latest party trend When Scotland was the world's UFO hot spot Results Day 2025: The facts, the myths, and the freebies Panorama delves into the Southport riots and asks why so many took part. Video, 28 minutesPanorama delves into the Southport riots and asks why so many took part Highlights from this year's season Beverley Knight delivers infectious groove with an Aretha Franklin classic. Audio, 3 minutesBeverley Knight delivers infectious groove with an Aretha Franklin classic Kahchun Wong conducts the HallÃ© in Mahler's visionary symphony. Audio, 104 minutesKahchun Wong conducts the HallÃ© in Mahler's visionary symphony The spine-tingling Traitors theme song reimagined with a full orchestra. Audio, 3 minutesThe spine-tingling Traitors theme song reimagined with a full orchestra A stunning moment of tranquility with Bach's Air on a G String. Video, 10 minutesA stunning moment of tranquility with Bach's Air on a G String JADE performs her breakthrough track accompanied by a full orchestra. Video, 5 minutesJADE performs her breakthrough track accompanied by a full orchestra Find the latest news, features, audio and TV coverage. Watch a selection of standout clips from across the BBC Add to your watchlist on iPlayer and subscribe on Sounds Jeremy Clarkson recounts a disastrous World War Two mission What do your dreams say about you? The rise and fall of the 90s lads mag phenomenon Hugh Bonneville narrates Sherlock Holmesâ greatest cases A brand new missing person case in thrilling New Zealand detective drama. Video, 52 minutesA brand new missing person case in thrilling New Zealand detective drama In series two of The Gone, the hunt for an Irish journalist leads detective duo Richter and Huia to a decade-old unsolved murder. The incredible rescue teams saving lives on the wild landscape of Eryri. Video, 28 minutesThe incredible rescue teams saving lives on the wild landscape of Eryri Are standing desks a good way to improve posture - or just a fad? Audio, 25 minutesAre standing desks a good way to improve posture - or just a fad? The story of a cricketing icon, which ended in scandal and tragedy. Audio, 27 minutesThe story of a cricketing icon, which ended in scandal and tragedy Loose Women stars attempt to name that tune first in The Hit List. Video, 44 minutesLoose Women stars attempt to name that tune first in The Hit List Scotland ALBA Wales Cymru NI Copyright Â© 2025 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking."
  },
  {
    "url": "https://www.bbc.co.uk/news",
    "title": "Home - BBC News",
    "content": "Sign in or create an account to watch, listen and join in He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Dame Stella Rimington, former MI5 director general, dies at 90 Two teenagers detained for torture and killing of cats Calvin Harris shares placenta photos after birth of son He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Dame Stella Rimington, former MI5 director general, dies at 90 Two teenagers detained for torture and killing of cats Calvin Harris shares placenta photos after birth of son He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Dame Stella Rimington, former MI5 director general, dies at 90 Two teenagers detained for torture and killing of cats Calvin Harris shares placenta photos after birth of son He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Dame Stella Rimington, former MI5 director general, dies at 90 Two teenagers detained for torture and killing of cats Calvin Harris shares placenta photos after birth of son He is a human skeleton, Gaza hostage's brother tells BBC Ilay David says the Hamas video showing his brother Evyatar emaciated and weak is a \"new form of cruelty\" that has left his parents shattered. More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Tommy Robinson arrested in connection with assault at St Pancras station Eurostar passengers face delays and cancellations due to French rail issue British couple held in Iran are in country's worst prisons, says son Four-year-old girl dies following incident at water park Danish zoo asks for unwanted pets to feed its predators How an hour at The Oval provided the most dramatic Test finale you could wish for Farage calls on police to share immigration status of charged suspects Dame Stella Rimington, former MI5 director general, dies at 90 Two teenagers detained for torture and killing of cats Calvin Harris shares placenta photos after birth of son Watch our pick of standout clips from across the BBC I regret taking my 11-year-old to a riot following Southport attack, says stepmum A year after anti-migrant protests, two rioters tell BBC Panorama about their motives and regrets. Could you be owed car finance compensation? Here's how to check BBC finds electrocuted, drowned and starved cats in online torture groups How to stay safe during a storm and what to do in a power cut 'There is nothing left' - British expat family forced to flee wildfire in Cyprus Start your week on a high with uplifting stories delivered to your inbox every Monday Watch: Florida police officer removes alligator from family's pool with bare hands. Video, 00:00:56Watch: Florida police officer removes alligator from family's pool with bare hands 'Extreme overseas day-tripping is quite addictive' Video, 00:01:13'Extreme overseas day-tripping is quite addictive' Watch: Twin waterspouts merge near Italian coastline. Video, 00:00:32Watch: Twin waterspouts merge near Italian coastline Damage and disruption as Storm Floris crashes into UK. Video, 00:00:44Damage and disruption as Storm Floris crashes into UK Watch: Australians play in snowy winter wonderland. Video, 00:00:39Watch: Australians play in snowy winter wonderland Radio personality James Whale dies aged 74 Known for his late-night TV shows and radio phone-ins, he entertained and offended in equal measure. US governor threatens Democrats with bribery charges for stalling Texas vote Hundreds of Israeli ex-officials appeal to Trump to help end Gaza war Honours system gets new role to make awards more inclusive Tesla awards boss Elon Musk $29bn in shares Policing boss defects from Tories to Reform Watch: Florida police officer removes alligator from family's pool with bare hands. Video, 00:00:56Watch: Florida police officer removes alligator from family's pool with bare hands Tommy Robinson arrested in connection with assault Girl, 4, dies at Waterworld park Calvin Harris shares placenta photos after birth of son Parents held in Iran's 'worst prisons', says son Farage calls on police to share immigration status of charged suspects He is a human skeleton, Gaza hostage's brother tells BBC Dame Stella Rimington, former MI5 director general, dies at 90 Teenagers detained for cats' torture and killing Danish zoo asks for unwanted pets to feed its predators Eurostar passengers face delays and cancellations due to French rail issue Top stories, breaking news, live reporting, and follow news topics that match your interests Watch live on iPlayer Listen to Live News on Sounds Why has Sydney Sweeney's jeans ad sparked a race debate? Audio, 35 minutesWhy has Sydney Sweeney's jeans ad sparked a race debate? The Battle For Car Finance Compensation. Audio, 33 minutesThe Battle For Car Finance Compensation The rise and fall of the scandalous Maxwell family A staggering tale of money, sex, privacy and power Comedian Bob Mortimer chooses his desert island tracks It's make-or-break time for more aspiring entrepreneurs Exposing the techniques criminals use to steal your money Documents are discovered from the Moors Murders. Video, 57 minutesDocuments are discovered from the Moors Murders Set sail on an unexpected voyage on a cargo ship Based on Sally Rooney's best selling novel 'England and India provide most intense, dramatic and emotional finale' The fifth Test finale between England and India at The Oval was the most intense, dramatic and emotional sport you could see, says chief cricket reporter Stephan Shemilt. Scottish Premiership: Yengi blows huge Aberdeen chance with Hearts leading Salah opens scoring but Athletic Bilbao level against new-look Liverpool Might Newcastle owner's cash help Liverpool buy Isak? Who pressed their Ashes case? Who disappointed? England's player ratings 'Totally torn apart' - how Morecambe decline threatens a whole community 'Here he comes!' - Watch as Woakes walks out to bat one-handed. Video, 00:00:20'Here he comes!' - Watch as Woakes walks out to bat one-handed Instagram TikTok Facebook X Copyright Â© 2025 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking."
  },
  {
    "url": "https://www.bbc.co.uk/sport",
    "title": "BBC Sport - Scores, Fixtures, News - Live Sport",
    "content": "Sign in or create an account to watch, listen and join in 'England and India provide most intense, dramatic and emotional finale' The fifth Test finale between England and India at The Oval was the most intense, dramatic and emotional sport you could see, says chief cricket reporter Stephan Shemilt. Might Newcastle owner's cash help Liverpool buy Isak? Scottish Premiership: Can Hearts add to lead against Aberdeen in second half? Salah opens scoring but Athletic Bilbao level against new-look Liverpool Green shoots for Man Utd or another false dawn? Who pressed their Ashes case? Who disappointed? England's player ratings Everton's Â£28m move for Dewsbury-Hall set to end bit-part Chelsea career 'Excellent prospect' Ngumoha stars for Liverpool - but who is he? Son poised to join LAFC for potential record fee Lions tour awards - best player, moment and try, and a word on the Welshman... Swiatek becomes latest seed to fall at Canadian Open I knew we'd struggle in some games last season - Amorim. Video, 00:03:15I knew we'd struggle in some games last season - Amorim Most dropped catches? Why don't stadiums have roofs? Your questions answered. Video, 00:05:39Most dropped catches? Why don't stadiums have roofs? Your questions answered 'He's a legend of English cricket' - Root speaks fondly of Thorpe after tribute. Video, 00:01:19'He's a legend of English cricket' - Root speaks fondly of Thorpe after tribute Rangers 'didn't run enough, didn't fight enough, weren't brave enough' Video, 00:03:14Rangers 'didn't run enough, didn't fight enough, weren't brave enough' It's been an incredible journey - Beirne. Video, 00:00:33It's been an incredible journey - Beirne Why Guardiola's new number two could be Man City's biggest summer signing Manchester City have spent more than Â£150m on players this summer but Pep Guardiola's biggest signing could be Jurgen Klopp's old assistant. Cazorla ready for fairytale finish after son's words of inspiration Liverpool remember Jota at first Anfield game since his death India win all-time classic despite Woakes heroics 'Torn apart' - how Morecambe decline threatens a whole community England-India Test series best since 2005 Ashes - Agnew The final year of The Hundred as we know it? Lions' Sheehan gets four-match ban for 'reckless' play Hooker Dan Sheehan has been banned for four matches, which will be reduced to three if he completes World Rugby's coaching intervention, for his clearout in the British and Irish Lions' final Test defeat by Australia. How to join BBC Sport's FPL league 'He definitely has it', so why did Hamilton say he was useless? Richardson misses Worlds 200m spot a week after arrest Celtic and Rangers learn Champions League opponents Cardile working for Aston Martin after dispute resolved Jota and Silva's boyhood club honours brothers in new kit Brady's Premier League aim and 'group chat' with Reynolds and McElhenney. Video, 00:03:42Brady's Premier League aim and 'group chat' with Reynolds and McElhenney Sarr scores incredible long-range goal as Spurs beat Arsenal. Video, 00:00:27Sarr scores incredible long-range goal as Spurs beat Arsenal 'No way!' - Mullins prevents home run with incredible catch. Video, 00:00:23'No way!' - Mullins prevents home run with incredible catch 'No-one's been better for the game of golf than my father' Video, 00:05:36'No-one's been better for the game of golf than my father' We want to be part of something very special - Itoje. Video, 00:00:41We want to be part of something very special - Itoje Spurs eye Rodrygo to replace Son - Monday's gossip Tottenham are keen on signing Real Madrid and Brazil winger Rodrygo to replace Son Heung-min, while Manchester United are ready to match Newcastle United's bid for Slovenia and RB Leipzig striker Benjamin Sesko. Sheff Wed players want answers 'to avoid strike action' Yamashita holds off Hull to win Women's Open Son makes emotional Spurs farewell - how much will they miss him? Lions centre Aki's baby born in car before first Test 'Total privilege' - Crichton confirmed as Rangers head coach Bayern midfielder Palhinha joins Spurs on loan The stunning football pitches hiding in the Arctic Circle. Video, 00:04:56The stunning football pitches hiding in the Arctic Circle How does British football food rate with European fans? Video, 00:01:39How does British football food rate with European fans? Exploring Britain's most extraordinary cricket grounds. Video, 00:06:49Exploring Britain's most extraordinary cricket grounds Inside the $5bn World Cup stadium in California. Video, 00:02:49Inside the $5bn World Cup stadium in California Hunting for New York City's lost cricket ground. Video, 00:03:15Hunting for New York City's lost cricket ground Becky Zerlentes - the first female boxer to die in fight in US The story of Becky Zerlentes - the first female boxer to die in a fight in the United States. The Welsh Way - Inside the 'Harvard of coaching' How Hampton overcame odds to become England's number one Why 'best-dressed officials' are missing from Wimbledon How Earps went from Â£25 a game to 'Mary, Queen of Stops' The runner who went viral and sparked a campaign for change for women Blood brothers - bonds and betrayal on a rugby pitch Lions player ratings - the incredible, the unlucky & the poor The mountain retreat - upholding an Italian tradition 'A strange kind of glory' as legacy-defining win eludes Lions Cronje, match-fixing and plane crash that left a complex legacy In Pictures: Sporting photos of the week Test Match Special. England v India: India triumph in classic at The Oval. Audio, 42 minutesTest Match Special England v India: India triumph in classic at The Oval Jonathan Agnew presents reaction from Indiaâs thrilling final day victory over England. F1: Chequered Flag. Hungarian Grand Prix Review. Audio, 25 minutesF1: Chequered Flag Hungarian Grand Prix Review Rugby Union Weekly. Wallabies deny Lions series whitewash. Audio, 44 minutesRugby Union Weekly Wallabies deny Lions series whitewash Football Daily. Neil Warnock on football, Yorkshire puddings and chiropody. Audio, 44 minutesFootball Daily Neil Warnock on football, Yorkshire puddings and chiropody Football Daily. Will Alexander Isak leave Newcastle for Liverpool? AudioFootball Daily Will Alexander Isak leave Newcastle for Liverpool? Sport's Strangest Crimes. Hansie Cronje: Fall From Grace, Introducing... Hansie Cronje: Fall From Grace. Audio, 3 minutesSport's Strangest Crimes Hansie Cronje: Fall From Grace Introducing... Hansie Cronje: Fall From Grace Discover the BBC's best sports podcasts More from BBC News Where and how to watch BBC News Premier League European Football Find out more about our BBC Sport app Instagram TikTok Facebook X YouTube Copyright Â© 2025 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking."
  },
  {
    "url": "https://www.bbc.co.uk/weather",
    "title": "BBC Weather - Home",
    "content": "Weather forecasts for thousands of locations around the world This video can not be played More than 43,000 homes lose power as Storm Floris brings gusts of up to 82 mph Video shows a plane struggling to land at Leeds airport, while travel disruption is expected to continue on Tuesday. Weather for the week ahead Storm Floris brought strong winds and disruption across parts of the UK on Monday, but how's the weather looking for the rest of the week? Watch: Twin waterspouts merge near Italian coastline. Video, 00:00:32Watch: Twin waterspouts merge near Italian coastline A local tour boat operator paused an excursion so he could film the waterspouts off Italy's east coast. Watch: Australians play in snowy winter wonderland. Video, 00:00:39Watch: Australians play in snowy winter wonderland Parts of New South Wales were blanketed with the heaviest snow in 20 years. Why does it always rain in the school summer holidays? Video, 00:00:27Why does it always rain in the school summer holidays? BBC Weather's Ben Rich explains why it always seem to rain during the summer holidays. BBC Weather in association with MeteoGroup, external All times are British Summer Time (Europe/London, GMT+1) unless otherwise stated."
  },
  {
    "url": "https://www.bbc.co.uk/iplayer",
    "title": "BBC iPlayer - Home",
    "content": "She escaped captivity, but not scrutiny. The truth, trauma and woman behind the headlines Sir David Attenborough narrates the joy and drama of animal parenting in a changing world The wry and witty ‘tec and her team solve more murders washed up in Scotland’s waters It’s the adventure of a lifetime, with one simple question… where the X are they? Make today film day! Enjoy modern hits and must-see classics - a film feast for everyone. Surrender yourself to the dark side. Arresting drama and captivating true crime"
  },
  {
    "url": "https://www.bbc.co.uk/sounds",
    "title": "BBC Sounds - Music. Radio. Podcasts",
    "content": "Use BBC.com or the new BBC App to listen to BBC podcasts, Radio 4 and the World Service outside the UK. Find out how to listen to other BBC stations Save shows to listen to later, subscribe to your favourites and get fresh recommendations everyday. Sign in or Register LIVE,·20:00 - 22:00 LIVE,·20:00 - 22:00 LIVE,·21:00 - 23:00 LIVE,·21:00 - 23:00 LIVE,·21:00 - 22:00 LIVE,·19:30 - 22:00 LIVE,·21:00 - 22:00 LIVE,·21:00 - 21:45 LIVE,·21:00 - 22:00 LIVE,·20:00 - 22:00 LIVE,·12:37 - 00:00 LIVE,·18:00 - 00:00 LIVE,·18:00 - 00:00 LIVE,·21:00 - 23:00 LIVE,·21:00 - 22:00 LIVE,·21:00 - 21:06 LIVE,·21:00 - 21:06 LIVE,·20:00 - 22:00 LIVE,·21:00 - 22:25 LIVE,·20:04 - 22:00 LIVE,·20:04 - 22:00 LIVE,·19:00 - 22:00 LIVE,·19:00 - 23:00 LIVE,·19:00 - 23:00 LIVE,·21:00 - 06:00 A cricket scandal no one saw coming Lifelong friends Lily Allen & Miquita Oliver discuss the world around them twice a week. Hansie Cronje was banned from cricket for life due to his role in a match-fixing scandal. Lionesses Ella Toone and Alessia Russo invite Vick Hope into their iconic friendship. Fights, drugs, scandals and skinny jeans — Kate Nash spills the secrets of 00s indie. Join Annie Macmanus and Nick Grimshaw as they explore the week in music. The home of Marianna Spring's investigations for BBC Radio 4. The world's greatest classical music festival - stunning concerts and collaborations. Huge sets and more from Ibiza. Radio 1's biggest anthems... A unique journey to dreamland, mixing instrumental music and Radio 4's Shipping Forecast. Highlights of the unmissable music and performances at the BBC Proms 2025. Back to back 90s classics from every genre; a non-stop celebration of the very best music 3 mins 55 mins 1 min 13 mins 2 mins 4 mins Mark Wood I Lie To You? 63 mins Hansie Cronje: Fall From Grace 1. Bigger than Becks 26 mins 2025 Soul Revolution 149 mins Harry Hill, comedian 58 mins The Greatest Thing You’ll Ever Learn… with Zawe Ashton 39 mins Heroism 1. The Classical Hero 28 mins"
  },
  {
    "url": "https://www.bbc.co.uk/usingthebbc/terms",
    "title": "A few rules for us and you",
    "content": "We want everyone to enjoy the BBC. But there are a few rules to stick to. Take a look through our explainers to see what you (and we) can and can't do. Our explainers cover questions we often get asked. Can't find what you're after? Take a look at the full version of the Terms of Use. The page will automatically reload. You may need to reload again if the build takes longer than expected. Hides preview environment warning banner on preview pages. Select a theme and theme mode and click \"Load theme\" to load in your theme combination."
  },
  {
    "url": "https://www.bbc.co.uk/aboutthebbc",
    "title": "Learn more about what we do",
    "content": "Everything you need to know about the workings of the BBC We’re impartial and independent, and every day we create distinctive, world-class programmes and content which inform, educate and entertain millions of people in the UK and around the world. We do this across: Established by a Royal Charter, the BBC is principally funded through the licence fee paid by UK households. Our role is to fulfil our mission and promote our Public Purposes. Our commercial operations including BBC Studios, the BBC’s award-winning production company and world-class distributor, provide additional revenue for investment in new programming and services for UK audiences. The BBC’s Board ensures that we deliver our mission and public purposes which are set out in the Charter. The Executive Committee is responsible for day-to-day management. We are regulated by Ofcom. The page will automatically reload. You may need to reload again if the build takes longer than expected. Hides preview environment warning banner on preview pages. Select a theme and theme mode and click \"Load theme\" to load in your theme combination."
  },
  {
    "url": "https://www.bbc.co.uk/usingthebbc/privacy",
    "title": "Keeping your info safe and sound",
    "content": "We take your privacy very seriously. And so should you. So have a look around to see what we’re doing with your personal information and how we’re keeping it secure. Read our privacy promise. The page will automatically reload. You may need to reload again if the build takes longer than expected. Hides preview environment warning banner on preview pages. Select a theme and theme mode and click \"Load theme\" to load in your theme combination."
  },
  {
    "url": "https://www.bbc.co.uk/usingthebbc/cookies",
    "title": "Take control of your cookies",
    "content": "Cookies help us remember you and show you more things we think youâll like. Have a browse to see what we use them for and how you can change your settings to suit you. The page will automatically reload. You may need to reload again if the build takes longer than expected. Hides preview environment warning banner on preview pages. Select a theme and theme mode and click \"Load theme\" to load in your theme combination."
  },
  {
    "url": "https://www.bbc.co.uk/accessibility",
    "title": "Accessibility - BBC",
    "content": "All audiences are important to the BBC. This page provides links to resources and documents to help users access the BBC's content and to find out about the BBC approach to the development of rich accessible products and services."
  },
  {
    "url": "https://www.bbc.co.uk/guidance",
    "title": "Parental Controls - BBC iPlayer",
    "content": "The Parental Guidance Lock helps you control what people in your household can and can't watch on iPlayer or listen to in BBC Sounds. Turn it on and we'll ask you to create a PIN. Then, whenever anyone tries to watch or listen to anything with a BBC Guidance label, they'll have to enter the PIN. What are Guidance labels? Bear in mind, this will only turn it on in the internet browser on this device. So you may want to also turn on the Parental Guidance Lock separately on your other devices."
  },
  {
    "url": "https://www.bbc.co.uk/contact",
    "title": "Contact Home | Contact the BBC",
    "content": "Menu Choose from these areas for information or help about our programmes and services. Information about issues, programmes or services which we're often asked about. Get support to resolve problems with BBC iPlayer, along with how to guides, FAQs and updates on known issues. Get support to resolve problems with BBC Sounds, along with how to guides, FAQs and updates on known issues. Details of organisations offering support if you're affected by issues in our coverage The BBC helped raise over £105 million for charities in 2020/21.  Find out more about how you can help. Latest transmitter status and support for problems or interference receiving BBC TV and Radio"
  },
  {
    "url": "https://www.bbc.co.uk/bbcnewsletter",
    "title": "BBC emails for you",
    "content": "Every week we send a round-up of the latest shows, services and experiences from across the BBC in our email updates. Plus, if we spot anything extra we think you'll love, we'll let you know about that too. Simply sign up today and don't worry â you can unsubscribe from these emails at any time. Copyright Â© 2025 BBC. The BBC is not responsible for the content of external sites. Read about our approach to external linking."
  },
  {
    "url": "http://legacy.python.org/Flask",
    "title": "Page Not Found",
    "content": "Add an event to this calendar. Times are shown in UTC/GMT. Add an event to this calendar. The URL you requested was not found on this server. Try our home page, or our search engines - or use one of\nthe other links on the left hand navigation."
  },
  {
    "url": "https://towardsdatascience.com/",
    "title": "Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Three pillars that shaped my first year in data science management - prioritization, empowerment, and recognition A simpler path to coding real-time web applications. A waterfall chart can be a powerful tool for conveying information. But it has some… Explore the handoff and agents-as-tools patterns, their use cases, and how to customize them using… A common misconception about the working state of code in data, AI or software engineering… POS tagging, dependency parser and named entity recognition. Generative Molecular Design (Part 1): common molecular representations in data science. Mariya Mansurova explains how hands-on learning, agentic AI, and engineering habits shape her writing and… Models don’t just fail with noise; they fail in silence, by narrowing their attention to… Image segmentation is a popular task in computer vision, with the goal of partitioning an… Learn how to LLMs are benchmarked, and try out the newly released ARC AGI 3 Solving the Heat Equation using DeepXDE. A hands-on journey exploring fine-tuning techniques that unlock the power of small vision models. A practical exploration focusing on performance and speed Data storytelling can enlighten—but it can also deceive. When persuasive narratives meet biased framing, cherry-picked… Part 1: Data, Sales Pitches, Bugs, and Breakthroughs How experimentation is more powerful than knowing counterfactuals Why are there so many hotels named after cities they are not in? Follow along… A hands-on guide to building and validating LLM evaluators Let’s observe the matter on the atomic level This week, we highlight three articles that focus on emerging topics and techniques around large… One of our guiding principles as a publication is that authors’ work remains theirs. This… Are LLMs good or bad for our mental health? It’s more complicated than that. In today’s fast-paced, distraction-heavy world, data literacy isn’t just about understanding charts or analyzing numbers—it’s… Why you should read this article Most data scientists whip up a Jupyter Notebook, play… “Will that break a query folding?” “Does your query fold?”… Maybe someone asked you those… A guide to ideating, validating, and prioritizing your AI use cases Learn how to create AI Agents using the OpenAI Agents SDK to automate Jira ticket… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://contributor.insightmediagroup.io/",
    "title": "Contribute to Towards Data Science! | TDS Contributor Portal",
    "content": "Thank you for your interest in Towards Data Science! If you never published with us before, please send your article via the form below. If you published with us previously but don’t yet have your contributor account on our new platform, please fill out the form below, too. You can leave the “Submit your article for review” section blank if you don’t have any articles to share. Please take your time to review both our privacy policy and our author terms and conditions of use. Make sure you read all points well and that you understand them. By clicking the checkbox below or by submitting content to us, you agree to be bound by the TDS Author Terms and Conditions of Use. Once you have completed our registration form and are approved as a TDS contributor, you will be able to log in here. You can then submit your article directly from your account, and won’t need to fill out this form again. TDS Contributor Portal"
  },
  {
    "url": "https://towardsdatascience.com/latest/",
    "title": "Latest stories published on Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Three pillars that shaped my first year in data science management - prioritization, empowerment, and recognition A simpler path to coding real-time web applications. A waterfall chart can be a powerful tool for conveying information. But it has some… Explore the handoff and agents-as-tools patterns, their use cases, and how to customize them using… A common misconception about the working state of code in data, AI or software engineering… POS tagging, dependency parser and named entity recognition. Generative Molecular Design (Part 1): common molecular representations in data science. Mariya Mansurova explains how hands-on learning, agentic AI, and engineering habits shape her writing and… Models don’t just fail with noise; they fail in silence, by narrowing their attention to… Image segmentation is a popular task in computer vision, with the goal of partitioning an… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/tag/editors-pick/",
    "title": "Editors Pick | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Explore the handoff and agents-as-tools patterns, their use cases, and how to customize them using… A common misconception about the working state of code in data, AI or software engineering… Solving the Heat Equation using DeepXDE. A hands-on journey exploring fine-tuning techniques that unlock the power of small vision models. A practical exploration focusing on performance and speed Data storytelling can enlighten—but it can also deceive. When persuasive narratives meet biased framing, cherry-picked… Part 1: Data, Sales Pitches, Bugs, and Breakthroughs How experimentation is more powerful than knowing counterfactuals Why are there so many hotels named after cities they are not in? Follow along… A hands-on guide to building and validating LLM evaluators Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/tag/deep-dives/",
    "title": "Deep Dives | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Explore the handoff and agents-as-tools patterns, their use cases, and how to customize them using… Are LLMs good or bad for our mental health? It’s more complicated than that. In today’s fast-paced, distraction-heavy world, data literacy isn’t just about understanding charts or analyzing numbers—it’s… Why you should read this article Most data scientists whip up a Jupyter Notebook, play… “Will that break a query folding?” “Does your query fold?”… Maybe someone asked you those… A guide to ideating, validating, and prioritizing your AI use cases Learn how to create AI Agents using the OpenAI Agents SDK to automate Jira ticket… Building a tool to interactively visualize the forward pass of any Pytorch model from within… It’s here already from Nvidia and it’s called cuNumeric. Can large language models learn to reason abstractly from just a few examples? In this… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://newsletter.towardsdatascience.com/subscription-to-the-newsletter",
    "title": "Subscribe to The Variable Newsletter",
    "content": "The flagship newsletter from Towards Data Science The Variable is our weekly newsletter. Along with exclusive content, you can expect to receive the best of Towards Data Science: from hands-on tutorials and cutting-edge research to the latest on data science and machine learning tools. Our commitment is to provide actionable, high-quality insights to keep subscribers updated on the latest trends and breakthroughs in the world of data science, data analytics, data engineering, machine learning, and artificial intelligence. We look forward to seeing you in your inbox each Thursday! By providing your email address and submitting this form, you consent to receive newsletters and other communication from Towards Data Science. You can unsubscribe at any time by clicking the \"unsubscribe\" link in the footer of our emails or by contacting us at privacy@insightmediagroup.io. For more information about how we handle your data, please refer to our Privacy Policy. Copyright © 2025 Insight Media Group, LLC. All Rights Reserved."
  },
  {
    "url": "https://towardsdatascience.com/questions-96667b06af5/",
    "title": "Write for Towards Data Science | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Share your learnings, projects, and explorations with curious minds. Quick Links: We are looking for writers to propose up-to-date content focused on data science, machine learning, artificial intelligence and programming. If you love to write about these topics, read on! Reach a broader audience with your articles. We are one of the most popular data science sites in the world. TDS started as a publication on Medium, amassing more than 700k followers and becoming the most-read publication on the site. Now on a self-hosted platform, TDS is the leading destination in the data science community. Here are a few things we do to ensure your articles reach the largest audience possible: Earn money with the Towards Data Science Author Payment Program. When publishing in TDS, our authors can decide to apply to our Payment Program, which enables them to earn from their work. You can read more about our Author Payment Program here. Before submitting your article, there are a few essential things you need to know. Make sure you read each point well, and that you understand them, as by submitting an article to TDS, you are agreeing to comply with all of them. Please take a few minutes to familiarize yourself with our Author Terms and Conditions of Use — they govern the relationship between contributors and TDS. Any article you share with us must be entirely your own original work; you can’t take other writers’ words and present them as your own, and we also don’t allow AI-generated text, even when you’re the one who prompted its creation. How to get your article ready for publication! We aim to strike a balance between innovating, informing and philosophizing. We want to hear from you! If you are not a professional writer, consider the following points when preparing your article. We want to publish high quality, professional articles that people want to read. 1. Is your story a story that needs to be told? Before you start writing, ask yourself: is this story a story that needs to be told? If you have read many articles addressing the same issue or explaining the same concept, think twice before writing another one. If you have a radical, new take on an old chestnut, we want to hear from you… but, we need you to persuade us that your article is something special that distinguishes itself from the pack and speaks to our audience. Conversely, if your article addresses an underserved area or presents a new idea or method, that’s just what we are after! 2. What is your message? Let us know what your main message is, right from the start. Give your piece a snappy introduction that tells us: Once you’ve got that out of the way, you can be as conversational as you like, but keep calling back to the central message and give us a solid conclusion. Remember though, Towards Data Science is not your personal blog, keep it sharp and on-topic! 3. On the internet, nobody knows you are a dog You’ve got a new idea or a new way of doing things, you want to tell the community and start a discussion. Fantastic, that’s what we want too, but we’re not going to take for granted that you know what you are talking about or that we should uncritically believe what you say… you’ve got to persuade us (your audience) that: You can do this by explaining the background, showing examples, providing an experiment or just laying out how data you have extracted from various sources allowed you to synthesise this new idea. Are there arguments that counter your opinion or your findings? Explain why that interpretation conflicts with your idea and why your idea comes out on top. 4. Do you have a short title with an insightful subtitle? If you scroll up to the top of this page, you will see an example of a title and subtitle. Your post needs to have a short title and a longer subtitle that tell readers what your article is about or why they should read it. Your header is useful for attracting potential readers and making your intentions clear. To remain consistent and give readers the best experience possible, we do not allow titles or subtitles written in all-caps. We also ask that you avoid profanity in both your title and subtitle. When your subtitle is directly under the title and formatted correctly, it will show up in some post previews, which helps with your click-through rate. 5. What makes your post valuable to readers? A successful post has a clearly defined and well-scoped goal, and follows through on its promise. If your title tells us you’re going to unpack a complex algorithm, show the benefits of a new library, or walk us through your own data pipeline, make sure the rest of the post delivers. Here are a few pointers to help you plan and execute a well-crafted post: If your article is full of neutral, generic verbs (like to be, have, go, become, make, etc.), try to mix in more precise action verbs. When it makes sense, use specific, lively descriptors instead of dull ones (for example, you could replace “easy” with “frictionless,” “accessible,” or “straightforward,” depending on the context). There are few things editors appreciate more than a clean first draft, so don’t forget to proofread your post a couple of times before sharing it with TDS: look for spelling, punctuation, and grammar issues, and do your best to fix them. What we hope to offer to our readers are clear explanations, a smooth overall flow — pay attention to those transitions! — and a strong sense of what you’re aiming to achieve with your post. If you’d like to expand your toolkit beyond the basics, the Internet is full of great writing resources. Here are a few ideas to help you get started: For example, if you’re talking about a data pipeline you built, text can only take you so far; adding a diagram or flowchart could make things even clearer. If you’re covering an algorithm or another abstract concept, make it more concrete with graphs, drawings, or gifs to complement your verbal descriptions. (If you’re using images someone else created, you’ll need to source and cite them carefully — read our image guidelines below for more details.) A strong visual component will hook your readers’ attention and guide them along as they read your post. It will also help you develop a personal style as an author, grow your following, and draw more attention on social media. 6. Are your code and equations well displayed? TDS readers love to tinker with the ideas and workflows you share with them, which means that including a code implementation and relevant equation(s) in your post is often a great idea. To make code snippets more accessible and usable, avoid screenshots. Use WordPress’s code blocks & inline code To share math equations with your readers, Embed.fun is a great option. Alternatively, you can use Unicode characters and upload an image of the resulting equation. When you include code or an equation within your article, be sure to explain it and add some context around it so readers of all levels can follow along. To learn more about using these embeds and others in your post, check out this resource. 7. Check your facts Whenever you provide a fact, if it’s not self-evident, let us know where you learned it. Tell us who your sources are and where your data originated. If we want to have a conversation we all need to be on the same page. Maybe something you say will spark a discussion, but if we want to be sure we are not at cross purposes, we need to go back to the original and read for ourselves in case we are missing a vital piece of the puzzle that makes everything you say make sense. 8. Is your conclusion to the point and not promotional? Please make sure that you include a conclusion at the end of your article. It’s a great way to help your readers review and remember the essential points or ideas you’ve covered. You can also use your conclusion to link an original post or a few relevant articles. Adding an extra link to your author profile or to a social media account is fine, but please avoid call-to-action (CTA) buttons. For your references, please respect this format: [X] N. Name, Title (Year), Source For example, your first reference should look like this: [1] A. Pesah, A. Wehenkel and G. Louppe, Recurrent Machines for Likelihood-Free Inference (2018), NeurIPS 2018 Workshop on Meta-Learning 9. Are your tags precise enough? The more specific your tags, the easier it is for readers to find your article and for us to classify and recommend your post to the relevant audience. We may change one or two tags before publication. We would do this only to keep our different sections relevant to our readers. For instance, we would want to avoid tagging a post on linear regression as “Artificial Intelligence”. 10. Do you have an amazing image? A great image attracts and excites readers. That’s why all the best newspapers always display incredible pictures. This is what you can do to add a fantastic featured image to your post: If you decide to purchase a license for an image to be used in your article, please note that we only allow the use of images under a license that: (i) does not expire; and (ii) that can be used for commercial purposes on the TDS Publication. You are responsible for ensuring you comply with the license terms of use. You must also include a caption below the image, as follows, or as otherwise required by the license provider: “Image via [license provider’s name] under license to [your name].” Finally, please email us a copy of a receipt or other evidence of the purchased license, along with the corresponding license terms of use. If you’ve chosen to create images for your article using an AI tool (like DALL·E 2, DALL·E, Midjourney, or Stable Diffusion, among others), it’s your responsibility to ensure that you’ve read, understood, and followed the tool’s terms. Any image you use on TDS must be licensed for commercial use, including AI-generated images. Not all AI tools permit images to be used for commercial purposes and some require payment to permit you to use the image. The images you generate with AI tools cannot violate the copyright of other creators. If the AI generated image resembles or is identical to an existing copyrighted image or fictional character (like Harry Potter, Fred Flinstone etc.), you are not permitted to use it on TDS. Use your best judgment and avoid AI-generated images that copy or closely emulate another work. If in doubt, use an image search tool — like Google Lens, TinEye, or others — to check whether your images are too similar to an existing work. We may also ask that you provide details of the text prompts you used in the AI tool to confirm you did not use the names of copyrighted works. Your text prompts cannot use the names of real people, nor can your images be used if they feature a real person (whether a celebrity, politician, or anyone else). Please remember to cite the source of your images even if you aren’t legally obligated to do so. If you created an image yourself, you can add (Image by author) in the caption. Whichever way you decide to go, your image source should look like this: Your image should both have the source and the link to that source. If you created an image yourself, you can add “Image by author”. If you’ve created an image that was lightly inspired by an existing image, please add the caption “Image by Author, inspired by source[include the link].” If you’ve edited an existing image, please make sure you have the right to use and edit that image and include the caption “Image by source[include the link], edited with permission by the author.” Danger zone: Do not use images (including logos and gifs) you found online without explicit permission from the owner. Adding the source to an image doesn’t grant you the right to use it. 11. Where did you get your data? The Towards Data Science team is committed to the creation of a respectful community of data science authors, researchers, and readers. For our authors, this means respecting the work of others, taking care to honor copyrights associated with images, published material, and data. Please always ensure that you have the right to collect, analyze, and present the data you’re using in your article. There are plenty of great sources of data that are freely available. Try searching university databases, government open data sites, and international institutions, such as the UCI Irvine Machine Learning Repository, U.S. Government, and World Bank Open Data. And don’t forget about sites that hold specific data relating to fields like physics, astrophysics, earth science, sports, and politics like CERN, NASA, and FiveThirtyEight. TDS is a commercial publication. Before submitting your article to us, please verify your dataset is licensed for commercial use, or obtain written permission to use it. Please note that not all the datasets on the websites we’ve listed are fine to use. No matter where you obtain your data, we advise you to double-check that the dataset permits commercial use. If you aren’t confident you have the right to use it for commercial purposes, consider contacting the owner. Many authors receive a quick, positive response to a well-constructed email. Explain how you intend to use the data, share your article or idea, and provide a link to TDS. When you receive permission, please forward a copy to us at [email protected]. This is especially important if you plan to use web scraping to create your own dataset. If the website does not explicitly allow data scraping for commercial purposes, we strongly recommend that you contact the website owner for permission. Without explicit permission, we won’t be able to publish your work, so please forward us a copy via email. And sometimes, simple works best! If you just want a dataset to explain how an algorithm works, you can always create an artificial or simulated dataset. Here’s a quick tutorial, and an article that uses a simulated dataset you might find helpful. Please remember to add a link to the site where the dataset is stored, and credit the owner/creator in your article. Ideally, this is done on first mention of the dataset, or in a resource list at the end of the article. Please carefully follow any instructions relating to attribution that you find on the site. If you have created your own artificial or simulated dataset, it is important to mention that too. We know interpreting a license can be challenging. It is your responsibility to be certain that you can present your data and findings in an article published with TDS, but if you’re stuck, please reach out to our editorial team for assistance. We would rather work with you in the early stages of your project than to have to decline your completed article due to a dataset license issue. 12. Is your content original? While we do accept content that has already been published (for example, on your personal blog or website), our focus is on promoting and sharing new and original content with our readers. That means that by publishing your article in TDS first (or exclusively), you have a greater chance to be featured on our publication, our social media channels, and in our newsletter. We love original content because it’s something that our audience hasn’t seen before. We want to give as much exposure to new material as possible and keep TDS fresh and up-to-date. Originality also means that you (and your coauthors, if any) are the sole creator of each and every element in your post. Any time you rely on someone else’s words, you have to cite and quote them properly, otherwise we consider it an instance of plagiarism. This applies to human authors, of course, but also to AI-generated text. We generally don’t allow any language created by tools like ChatGPT on TDS; if your article discusses these tools and you wish to include examples of text you generated, please keep them to a minimum, cite their source and the prompt you used, and make it very clear (for example, by using block quotes) where the AI-generated portions begin and end. 13. Did you get any feedback before submitting your post? Get into the habit of always asking a friend for feedback before publishing your article. Having worked so hard on that article, you wouldn’t want to let a silly mistake push readers away. 14. Has your Author profile been completed correctly? Please include your real name, a photo, and a bio. We don’t publish posts from anonymous writers — it’s easier to build trust with readers when they associate your words with an actual person. Use your profile to introduce yourself, your expertise, your and achievements — optimizing it will help you develop a meaningful relationship with your audience beyond a single post. If you are a company and would like to publish with us, please note that we almost exclusively publish articles submitted directly from the author. 15. Are you getting better? Take a minute to reflect on the work you have been doing so far, and the current article you wish to publish. What value are you bringing, and to whom? In which ways are this article better or worse than the ones you previously published? Have a lot to say? Good. We love to dive deep into complex topics, and so do our readers. Here’s how you can publish longform posts, columns, and online books on TDS. Longform posts We love long reads! If your article’s reading time is shorter than 25 minutes, we recommend that you don’t break it into multiple pieces — keep it as-is. A single post makes it easier for readers to search and find all the information they need, and less likely that they’ll miss an important part of your argument. To create a smoother reading experience, you can add a table of contents to orient your audience around your post. Adding high-quality images and lots of white space is always a good idea, too — a long text doesn’t have to be a wall of text. We regularly add the most engaging and thoughtful longform posts to our Deep Dives page. Columns If your post’s reading time exceeds 25 minutes, or if you plan to focus on the same topic over multiple articles and a longer stretch of time, you can create your own TDS column. All it takes are three steps: You can create a TDS column and invite multiple authors to contribute. Just let your colleague(s) know which tag you decided to use so that they can add the same one to their articles. Here are some examples from our team. Online Books A column is a great format to use if you have an open-ended topic that you plan to write about for a while. If, on the other hand, your idea has a finite, defined scope and a clear sense of progression from one post to the next, you may want to create a series of articles that feels more like an online book. Here is the format we recommend using. Keep the reading time of each article — or “chapter” — between 12 to 25 minutes, and aim for a series that has at least 5 articles (but probably not more than, say, 16). You can add links to previous or subsequent items from within each article — for example, in the introduction and/or conclusion. To publish your online book, you can submit all your articles to our editorial team in one go, or one by one as you finish working on each. We’ll review them and publish them as they come along. Let us know your post is part of a planned online book project. Please ensure that each article or online book chapter follows the same guidelines and rules as any other post that TDS publishes. If you ever decide to sell or exclusively license your book to a third party publisher, you will have to make sure you have their consent to continue to publish the book with TDS. If you do not have such consent, it is your responsibility to remove your content from the TDS publication. To become a writer, please send your article using our form. We aim to respond to authors as quickly as possible and to let them know whether or not we’ve accepted their articles. On rare occasions, the volume of submissions we receive makes it difficult to respond to everyone; as a general rule, if you haven’t heard from us within a week of submitting your post, it’s safe to assume we won’t move forward with publishing it. Contribute to Towards Data Science ✨ If you’re having an issue with our online form, please let us know via email ([email protected]) so we can help you complete the process. Please do not email us an article that you have already sent via our form. Our FAQ can be found here. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. Three pillars that shaped my first year in data science management - prioritization, empowerment, and recognition A simpler path to coding real-time web applications. A waterfall chart can be a powerful tool for conveying information. But it has some… Explore the handoff and agents-as-tools patterns, their use cases, and how to customize them using… A common misconception about the working state of code in data, AI or software engineering… POS tagging, dependency parser and named entity recognition. Generative Molecular Design (Part 1): common molecular representations in data science. Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://www.linkedin.com/company/towards-data-science/?originalSubdomain=ca",
    "title": "Towards Data Science | LinkedIn",
    "content": "View all 311 employees Towards Data Science is a community-powered publication that showcases work in data science, machine learning and artificial intelligence. Every day newcomers, seasoned researchers and industry practitioners publish tutorials, research notes and real-world case studies that help the field move forward.\n\nContributors receive editorial guidance, best-in-class publishing tools and prominent placement on our site, newsletter and social feeds. Accepted articles are eligible for the TDS Author Payment Program, which compensates writers based on reader engagement. If you have an idea worth sharing, submit your draft, join the conversation and connect with a global audience of data professionals.\n\nInsight Partners is an investor in Towards Data Science. External link for Towards Data Science 548 Market St San Francisco, California 94104, US 642,747 followers Build your own AI assistant! Iqbal Rahmadhan walks you through creating a weather agent using the OpenAI Agents SDK, Streamlit, and Python. 642,747 followers Before you dive into machine learning, read this. In this candid article, Pascal Janetzky reflects on the messy truths of ML. From buggy pipelines to overhyped pitches and unexpected breakthroughs. 642,747 followers Beyond just generating a chart: the hidden pitfalls of AI in BI. This article, thanks to DataCamp, exposes why relying solely on LLMs can lead to misinterpretations from missing metadata, uncaptured external data, and arbitrary compression. Learn how to prevent narrative bias. 642,747 followers Master tool-use agents! Iqbal Rahmadhan explains tool_use_behavior in OpenAI Agents SDK (run_llm_again vs stop_on_first_tool) and how to leverage the Trace dashboard for effective debugging. 642,747 followers Connect your Streamlit app to remote AI tools. Destin Gong's guide details how to build an MCP client that accesses diverse functionalities from external servers (e.g., codebase summarization, open-source model recommendations). 642,747 followers Gen Z, your biggest career advantage is your youth! Marina Tosic highlights how more time to fail, agility, and adaptability are your superpowers in the fast-evolving tech landscape. Unsolicited advice for thriving in Data Science. 642,747 followers Visualize your topics like never before. 📊 Alex Davis's article explores BERTopic's powerful visualizations (2D maps, term importance, heatmaps) and how to leverage hierarchical topic modeling to zoom in/out on themes. Customize your insights with ease. 642,747 followers Mariya Mansurova shares a comprehensive guide to MCP, the protocol standardizing AI agent-tool communication. Learn how to build your own server, access external capabilities, and truly live by the \"Don't Repeat Yourself\" principle. 642,747 followers How do you truly compare complex entities like wines, cities, or businesses?? Andrea D’Agostino's article, with a hands-on Python example, demonstrates how POSETs build dominance matrices and Hasse diagrams to bring coherence to scoring systems. 642,747 followers Migrating between ML frameworks can be a hassle, wasting valuable time in MLOps. MLArena provides a hassle-free, algorithm-agnostic solution for streamlined model experimentation and deployment. Say goodbye to boilerplate code, enjoy smart automation while retaining ample customization tools for expert tweaks.  \n\nBy Mena Ning Wang, PhD IT Services and IT Consulting San Francisco, California Software Development New delhi, Haryana Software Development Palo Alto, California E-Learning Providers Gurgaon, Haryana Software Development Vermont, Victoria Software Development Business Consulting and Services Milwaukee, WI Technology, Information and Internet Software Development Professional Training and Coaching Washington, District of Columbia Agree & Join LinkedIn By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy. or By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy. New to LinkedIn? Join now or By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy. New to LinkedIn? Join now"
  },
  {
    "url": "https://towardsdatascience.com/category/data-science/data-visualization/",
    "title": "Data Visualization | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. In today’s fast-paced, distraction-heavy world, data literacy isn’t just about understanding charts or analyzing numbers—it’s… Visualizing historical tornado trends Using the Elastic Beanstalk service Writing, testing and using them. Is there a way to use the out-of-the-box features of Power BI to be IBCS… Explore the shift from static reports to intelligent apps with our first ebook. How I built an AI-powered prototype to turn images into insights A guide to building a front-end data application. A useful tool in your quiver Use LazyPredict and PyCaret to skip the grunt work and jump straight to performance. Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/mbostock/",
    "title": "Mike Bostock, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. With the web opening new frontiers in collaboration, the web’s native language of JavaScript is… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://pudding.cool/2019/02/gyllenhaal/",
    "title": "The Gyllenhaal Experiment",
    "content": "The Pudding explains ideas debated in\n\t\t\t\tculture with visual essays. We pour our â¤ï¸ into these stories, but they take time and money. For just $1/month, you\n\t\t\t\tcan help support us. Join our\n\t\t\t\tgrowing community of data-driven enthusiasts. Help\n\t\t\t\t\tfund us About By\n\t\t\t\t\n\t\t\t\t\tRussell Samora\n\t\t\t\t & \n\t\t\t\t\tMatt Daniels Colin Morris recently explored the\n\t\t\t\t\tdifficulties of spelling by identifying Reddit comments with (sp?) next to words. Itâs no\n\t\t\t\t\tsurprise that Jake Gyllenhaal, along with other celebrities, were atop the list. Letâs take this idea one step\n\t\t\t\t\tfurther. This chart shows over 600k attempts of people trying to search for Britney Spears. Here are\n\t\t\t\t\tthe 8 most common permutations of her first name, Britney. People nail the\n\t\t\t\t\tfirst three letters—then things get interesting. Below weâll put you through a series of tests. You can skip ahead if you just\n\t\t\t\t\twant to see the results, but be warned, once you do there is no turning back! The charts below show the top 8 most common permutations for each celebrity in our test from all\n\t\t\t\t\t\tthe reader submissions. Want more data-driven experiments? Check out or Birthday Paradox explainer, that uses you as part of the data. Britney Spears search data is from Google\n\t\t\t\t\t\tsearches circa 2011. A slightly modified scale was used to represent the flow diagrams to make all\n\t\t\t\t\tbranchesâ text legible, so the sizes donât perfectly represent the proportion of responses. We chose to only\n\t\t\t\t\tshow the top 8 permutations of each name. Phonetic data is based on the International Phonetic Alphabet via\n\t\t\t\t\tWikipedia. You can download the data yourself here. Get in touch with Russell Samora or Matt Daniels, or email us at sup@pudding.cool."
  },
  {
    "url": "https://ciechanow.ski/internal-combustion-engine/",
    "title": "Internal Combustion Engine â Bartosz Ciechanowski",
    "content": "The invention of the internal combustion engine in the 19th century has revolutionized transportation over land, water, and air. Despite their omnipresence in modern day, the operation of an engine may be cryptic. Over the course of this article I’d like to explain the functionality of all the basic engine parts shown in the demonstration below. You can drag it around to see it from other angles: It’s hard to talk about a mechanical device without visualizing its motion, so many demonstrations in this blog post are animated. By default all animations are enabled, but if you find them distracting, or if you want to save power, you can globally pause them.disabled, but if you’d prefer to have things moving as you read you can globally unpause them. An engine like this may seem complicated, but we will build it up from first principles. In fact, we’ll start with a significantly simpler way of generating a rotational motion. Let’s look at a simple crank. It consists of a handle, a crank arm, and a shaft. When a force is applied to the handle the shaft rotates which we can observe by looking at the attached disk: The force applied at a distance from the shaft generates torque. The harder we push on the handle, the bigger the torque on the shaft. This cranking mechanism is precisely what converts linear force into torque in a manual coffee grinder or a bicycle. It’s one thing to power something using our own muscles, but the entire point of building an engine is to avoid manual labor and have the device exert the effort instead. To do that we need to find a reliable source of a strong force that is easy to direct. Thankfully, such device was invented hundreds of years ago â a cannon does exactly what we need. In the demonstration below you can observe how a cannon ball is fired from a cannon. The diagonal lines indicate a cross section view â it lets us see what’s going on inside an otherwise obscured region: As the gun powder is set on fire it quickly produces a huge amount of gases, which push the cannon ball down the barrel. Since the ball snugly fits inside it can only go in one direction. While reliable and easy to direct, a cannon ball won’t be very effective at pushing the crank: We’ve only been able to do a partial turn of the shaft and the cannon ball is long gone. However, with a few modifications we can harness the pushing power of the explosion in a significantly better way. Firstly, we’ll replace a cannonball with a piston that has a cylindrical shape and a hole drilled in it. We’ll then use a pin to attach to it a rod that can swing freely on a crankshaft: As the name implies, the crankshaft consists of both the rotating shaft and the crank on which a force is applied. By putting this assembly inside a simplified cannon shell, a cylinder, we’ve managed to solve the problem of the escaping cannon ball, as the piston is limited in its downward movement and will return up as the crankshaft keeps turning: Notice that the piston has now a minimum and a maximum position it can reach within the cylinder. A single movement over that length in either up or down direction is called a stroke. If we now trigger the explosion, the combustion gases will push the piston down, which turns the crankshaft: It’s still not a very exciting machine as it only does useful turning work once. To make it more practical we need to keep repeating the cycle of explosions â we have to add in new fuel, trigger a combustion process, and remove the exhaust gases, over and over again. Solid fuels like black powder are not very practical for an automated machine. It’s much easier to deal with fuels in fluid forms â their intake can be controlled by various valves. We’ll modify the cylinder we’ve built so far by adding new openings at the top of the combustion chamber: It may be hard to see how the various openings are laid out, so let’s take a look at the cross section view: Through the first large curved opening we’ll provide a mixture of gasoline and air and through the second one we’ll remove the exhaust gases. Those two openings will be guarded by the intake valve and the exhaust valve. Finally, to light the mixture, we’ll use an electric spark generated by an exposed ends of a wire. Let’s see how all the pieces fit together: We’re now ready to use this machine to do useful work. At first we’ll open the intake valve while the piston is moving down letting the air with fuel come in which I’ve symbolized using the yellow color. This is the intake stroke: Once the piston reaches its lowest position the intake valve closes, and the piston starts to move back which compresses the mixture of air and fuel which increases the thermal efficiency of the combustion. This is the compression stroke: Voltage runs through the open ends of the wire, generating a spark which ignites the air-fuel mixture. The expanding gases created by the combustion push the piston down, creating torque on the crankshaft. This is the power stroke: Note that the flame propagation inside a cylinder is quite complex, and what you see here is a simplified visualization. The cylinder is now filled with the exhaust gases which we can vent out through another hole by opening the exhaust valve. This is the exhaust stroke: We’re now back to where we started and the cycle is complete. Let’s look at those four steps together: Since the piston moves down twice and up twice, it does a total of four strokes and the engine we’ve built is known as a four-stroke engine. Notice that it takes two revolutions of the crankshaft for the piston to do one full cycle of the work as it goes through the four phases: intake, compression, power, and exhaust. While functional, the engine weâve built is more of a toy example that doesn’t show a lot of the engineering ingenuity behind many components of real internal combustion engines. Let’s build on the principles we’ve devised so far by constructing a more realistic machine â an engine that one could find in a car. Let’s start with the biggest and heaviest part of an engine â the engine block. It forms the main body and mounting structure for other parts: Notice that this block contains four large cylindrical openings that define the four cylinders. Recall that a piston exerts a pushing force on the crankshaft only during the power stroke, so only for about a quarter of time. This uneven action creates a lot of vibration. While it’s often acceptable for smaller engines e.g. in a lawn mower, a typical car engine has more than one cylinder to ensure a more even delivery of power. I’ll discuss these concepts in more depth near the end of the article. Since the four cylinders are inline, the engine we’ll build is known as an inline four cylinder engine. Other engines may use different arrangements of cylinders, usually in a flat or V-shape configuration. The sides of the block are reinforced by various ribs to improve the rigidity of the structure â the body has to withhold the power of the explosions inside the cylinders. You may also have realized that the top part of the block is perfectly flat â we’ll soon attach another component there. If you look at the cross section of the block you’ll notice that the areas around cylinders are empty: Those passages are there for the coolant to flow around the cylinders and take the heat of the combustion away. While I’m not going to dive into details of engine cooling, it’s worth noting that engines should run at a specific operating temperature and the coolant pump, thermostats, and radiators make sure that the engine isn’t running too cold or too hot. Let’s look at the first big part we’ll mount onto the engine â the crankshaft: Notice that the crankshaft has five main cylindrical parts that define its axis of rotation, they’re called the main journals. There are also four rod journals that are positioned off-axis. All the journals are connected via  webs. Note that while the sections have different colors here, the entire crankshaft is made from a single piece of metal. You may wonder why the two inner rod journals are offset differently than the two outer ones, so let’s pop the piston assemblies on and see how they’ll move on the crankshaft: Since the rod journals are at different locations each of the four pistons can run at a different phase of the four stroke cycle. Notice that the distance between the center of the main journals and the rod journals  defines how far up and down the piston goes in the cylinder. A real piston and its connecting rod have some mass so they end up creating a weight imbalance on a rotating crankshaft. To counteract that mass, the webs have elongated shape to form a counterweight that helps to even out the inertial forces on the shaft. One could assume the installation of the crankshaft in the engine block is as simple as putting it directly in a designated spot at the bottom: Unfortunately, that wouldn’t really work. During engine operation the pistons exert a lot of force on the crankshaft and the main journals would just rub against the housing creating a lot of friction that would wear the parts down. To fix that we need to firstly put in some bearings that will help to make the rotation of the crankshaft smooth: These strips of metal don’t look like much, but bearings are usually made from a softer material which causes them to wear first which prevents degradation of the crankshaft itself in case any contact occurs. Most of the time, however, the crankshaft doesn’t actually touch the bearings at all. Notice the small hole in the bearing that matches the corresponding hole inside the engine block: Through that hole the engine pumps oil under pressure. The crankshaft’s diameter is slightly smaller than the bearings' inner diameter so oil fills the tiny gap between the two surfaces. Presence of oil is critical here as it creates conditions for hydrodynamic lubrication. Oil sticks to the bearings and the crankshaft, but since the crankshaft rotates it creates a variation in velocity of oil between the two surfaces. In the demonstration below the small arrows symbolize the local velocity of the liquid: The difference of diameters causes a wedge-like shape to develop which then creates an area of increased pressure that lifts the crankshaft journal away from the bearings. Note that the size of the gap in the demonstration is not to scale, but in real running engines the rotating crankshaft should float completely on a very thin surface of oil. You may have noticed that one half of the bearings also contains a small gutter which creates a small pool of oil under pressure. Moreover, the crankshaft has small holes in it: Those passages are actually connected inside and the oil from the pool in the bearing travels through the little passages in the crankshaft itself. This brilliant solution distributes the oil from the main journals to the rod journals, which are constantly changing their position inside the engine. The demonstration below shows one of the many typical arrangements of these passages and the presence of oil in and on the crankshaft: Let’s finally put the crankshaft in. We’ll clamp it down using five end caps that have their corresponding bearings put in and we’ll screw everything together: Those screws have to be tightened to a precise torque â it has to be high enough so that end caps are able to keep the crankshaft in place despite the force of explosions pushing down on it through the piston rods, but the torque on the screws can’t be too high to avoid any deformation of the circular shape of the final opening in which the crankshaft lies. The crankshaft itself is there to receive the force from the pistons, so let’s look at at one up close: Firstly, notice all the empty spaces inside the piston. They’re there to reduce the weight â a piston should be as light as possible to minimize the inertial forces created by its reciprocating motion. In this piston the top part known as the piston crown has a dish-like cavity in it. Other pistons may be flat or have more complicated shapes. Pistons have actually slightly smaller diameter than the cylinders, otherwise they could seize during movement resulting in a catastrophic engine failure. However, the piston still needs to seal the combustion chamber and prevent gases from leaking around the piston. This problem is solved by piston rings that are placed in the grooves on top of the piston: On their own piston rings have a fairly big gap, but when placed in the cylinder they’re squeezed into a fitting shape. Note that the fitted ring still has a tiny gap: While the gap shrinks when a ring gets warmer and expands, the gap should never completely close as the ring may break under pressure. The clearances in the sizing of the rings are very precise. Since the ring is squeezed into a smaller shape, it wants to expand and that tension helps it form a tight seal with the walls of the cylinder. That tension is also reinforced by the pressurized gases getting into the piston grooves and pushing the rings further against the cylinder walls. The pistons in our engine have three rings with the top two primarily helping to keep the pressure inside the combustion chamber. The third one serves a different role â it’s an oil control ring. The walls of a cylinder under a piston are constantly sprayed with a supply of oil to ensure a smooth movement during strokes. On a downstroke the oil ring scrapes the excessive amount of oil which escapes through the openings in the ring and the groove of the piston: Top of a piston faces the enormous heat of combustion. The rings are in contact with the piston and the cylinder walls so they heavily participate in heat dissipation. Moreover, since the top part of the piston is in closer contact with the hot gases, it reaches a higher temperature than the lower parts and therefore it expands more. To account for that the pistons are tapered on top so that when the different areas of a piston reach their operating temperatures the shape is more even. The area of the piston below the rings is called a skirt. Parts of the skirt are, through a thin layer of oil, in contact with cylinder walls during stroke which stabilizes the piston. While they look perfectly round, piston skirts are actually slightly oval. A piston is attached to its rod  via a gudgeon pin. Perhaps you’ve noticed that a piston has tiny grooves near the end of the pin opening. We’ll put snap rings  inside them â they’ll prevent the pin from leaving the hole: Piston rods themselves are very strong as they have to withstand the force of the explosions pressing on the piston during combustion, while also resisting a stretching and pushing forces due to the inertia of the piston changing its direction of movement. The pistons with the connecting rods and bearings can be slid down the cylinders and attached to the crankshaft: Recall that the rod bearings are lubricated by the oil coming in through crankshaft passages. Let’s see how the entire thing rotates: The movement of a piston as the function of the crankshaft angle deserves a closer look. In the demonstration below I marked the maximum, minimum, and a midpoint traveled distance of a piston during its stroke. You can control the rotation of the crankshaft with a slider: Notice that when the crank arm has done a 90Â° turn, i.e. halfway through between top to bottom angle, the piston  has moved up by less than half of its total stroke distance. It’s a simple geometrical consequence of the length of arms of the triangle formed by the crank arm, the connecting rod, and the vertical baseline. The maximum piston’s position is known as its top dead center, and its lowest position is known as bottom dead center. As the cylinders move up and down between those two extremes they sweep cylindrical volumes: The area of a cylinder’s circular cross section A times the stroke length of a piston S define the displacement volume of that cylinder, and the displacement V of the entire engine is the sum of displacements of all of its n cylinders: If a single cylinder’s displacement is half a liter, then a four cylinder engine would be known as a 2.0-L engine. In the most basic setup, the bigger the engine displacement, the more air the engine can suck in, and the higher its peak power. With the parts we’ve assembled so far we’re getting close to completing the combustion chamber. We’ve created the walls with the engine block and the movable bottom with the pistons. We just need to seal it from the top â this is where the cylinder head comes in: There are a lot of openings there. Firstly, notice four large sections at the bottom â these dome-like cavities will form the top of the combustion chamber. Each of those four sections is the same, so let’s look at the individual segment up close: In this engine each cylinder has four major openings â through two of them the intake air is sucked in and through the other two the exhaust gases are let out. If you look at the head from a side you’ll notice that each pair of the openings is joined into one elliptical hole that exits on the side of the head. Those passages are known as intake and exhaust ports. Additionally, there is a smaller hole drilled centrally through the axis of each opening â they’re there for the intake and exhaust valves: Modern engines typically use more than one intake and exhaust valves per cylinder as it increases the flow of gases in and out of the combustion chamber. Moreover, the intake valves are usually a little bigger: When the piston moves down on an intake stroke, the pressure difference it creates is no larger than that of the incoming air, which, for traditional engines, is roughly equal to the atmospheric pressure. However, at the end of the combustion stroke the pressure inside the cylinder is many times higher than the atmospheric pressure, so it’s significantly easier to expel the combustion gases than to suck the intake air in. For this reason the intake openings and valves are larger. Let’s look at the operation of those valves up close. Firstly, the seal they form has to be very tight so that the only pathway for the expanding gases created in the combustion is to push the piston down. The edges of a valve and its seat have a conical section so that the seal becomes tighter as the valve is pressed up: In our toy engine the valves magically opened and closed on their own, so let’s see how it can be actually done in practice. To keep a valve shut weâre going to use a spring to keep tension on a closed valve. We can then lock the spring against the valve using simple locking mechanism that consists of two valve keepers, a spring retainer, and an inverted bucket: Notice that the top part of a valve has a little groove in it so that the keepers can lock in place. The keepers themselves form a section of a cone that the retainer wedges against: Since the keepers are locked in the grooves, the retainer can’t move which holds the spring under tension. The bucket provides a big and smooth surface for a force to transfer onto a valve â now whenever we push on the bucket the spring  will push it back in place: We’ve got the return mechanism all figured out, but this still leaves the problem of actually pressing the valves â they need to be opened at a certain cadence which depends on the movement of the piston inside the cylinder. That periodic nature of the operation implies that we should use some sort of rotary motion to push the valves. We can shape a piece of metal so that it pushes on the valve at different offsets as it rotates on a shaft â it’s known as a cam. The spring ensures that the bucket is tightly pressed against the cam and follows its shape: The shape of the cam defines when, for how long, and how much the valve is opened. In the demonstration below you can control the height and angular span of the section of the cam profile that deviates from a circle and see how it affects the position of the bucket and thus valve lift at different angles. The plot in the upper part shows the offset of the bucket relative to its normal position as the function of cam rotation angle: The shape of the cam is critical for defining the way the engine operates. All cams for a set of intake or exhaust valves are usually placed on a single camshaft: Most modern engines use two camshafts, one for intake valves and another for exhaust valves. Let’s see how the camshafts open and close valves during a typical engine operation: All cylinders go through four stages in a predefined order. The timing of the valves is actually not as straightforward as it was in our toy engine so let’s look at it up close: Firstly, notice that the intake valves close after the piston reaches the bottom end of the intake stroke â the air coming through the valve has some inertia, which, especially at high engine speeds, makes it pile up in the cylinder despite the opposite movement of the piston. Similarly, the exhaust valves open before the piston reaches the bottom of the power stroke, as the majority of the useful work has already been done by the gases and the pressure surplus in the cylinder should be minimized so that the exhaust stroke doesn’t have to actively compress the exhaust gases. The intake valves open slightly before the piston reaches the top end of the exhaust stroke. When combustion gases escape through the exhaust valves they help to create a “scavenging” effect that helps to pull the intake air in. For that reason the exhaust valves close after the piston reaches the top of the exhaust stroke. An engine running at low speed may have a different ideal parameters than an engine running at full speed, so many modern engines use a few methods to vary both the timing and lift of the valves during operation. We can now assemble the pieces together. While the top surface of the engine block and the bottom surface of the cylinder head are very flat and smooth, they need to form a perfect seal as they have to prevent the combustion gases from leaking through. A gasket, often made from a softer, compressible metal, is placed in-between the two and the head is bolted to the block: The bolts are tightened to the predetermined torque in multiple steps and in a specific order to ensure that the head doesn’t deform during assembly. The sturdiness of the head bolts is critical as they literally have to contain the force of the explosions inside the cylinder. The camshafts are then installed â they’re held in place by their caps and bolts: The only remaining piece of the puzzle is to how to turn the camshafts while ensuring they’re synchronized to the movement of the pistons. To achieve this, most engines use a rubber timing belt that is driven by a gear mounted to the crankshaft itself. The timing belt is teethed so that it locks in the notches on the timing gears, the rollers keep the belt in tension: Recall that in a four stroke engine a single cycle of operation requires two full revolutions of the crankshaft as the piston goes through intake, compression, power, and exhaust phases. However, the intake and exhaust valves open just once during that cycle so the camshafts should do just a single revolution during that time. To fulfill this requirement the crankshaft gear is twice as small as the camshaft gears â this ensures that the camshafts rotate just once when the crankshaft rotates twice which you can verify by observing a small black dots at the perimeter of the gears: In the examples so far weâve assumed that the intake valve let in a mixture of air and fuel, and that indeed was the case in older engines that used a carburetor to create the mix. Modern engines, however, use a fuel injection system where the amount and timing of fuel injection is controlled by an electronic Engine Control Unit, often abbreviated as ECU. At appropriate time the solenoid inside the injector is energized which electromagnetically pulls the needle up, which in turns lets the pressurized fuel escape through the tiny outlet holes. When the power to the solenoid is cut, the spring pushes the needle back to seal the nozzle: In some engines the injection happens in the intake port, very close to the intake valve itself, but in our engine we’ll use a direct injection system in which the fuel is put directly into the cylinder itself. The fuel and air mixture in the combustion chamber is lit by a spark plug. In a simplified form a spark plug consists of two pieces of metal separated by a  ceramic insulator. The outer shell is connected to the engine body which acts as a ground, and the central electrode is connected to a source of voltage  high enough to bridge the gap to the tip of the outer shell which creates a spark: That high voltage is generated by an ignition coil. In older engines there was a single coil that sequentially provided high voltage to individual spark plugs, but in modern engines each spark plug will usually have its own coil with the discharge controlled by the ECU. With a set of injectors and spark plugs in hand we can finally fill the remaining holes in the engine head. I’ll hide the rest of the engine so that we get a better view as to where they fit: Let’s see how an injector and a spark plug work together during the strokes. Note that normally the injector is attached to a fuel rail feeding it highly pressurized gasoline and a spark plug is connected to its coil, but for the sake of clarity they’re not being shown here. The air is depicted as a blue gas that turns yellow when mixed with fuel: You may notice that the spark plug fires before the piston reaches the end of the compression phase â it’s done on purpose since it takes a moment for the burning of the air-fuel mixture to begin. Let’s take a look at all four cylinders firing in sequence: All the demonstrations in this article run at very slow speeds, but it’s worth mentioning how fast things happen in an actual car. For an engine running at a modest speed of 1500 revolutions per minute there are 25 revolutions of the crankshaft every second. Each cylinder fires once per two revolutions of the crankshaft, but since we have four cylinders, there are actually around 50 explosions per second happening in an engine running at that speed. The ratio of air to fuel in the combustion chamber is important as simply adding more fuel doesn’t necessarily make the cylinder pressure bigger as we’ll just end up with incompletely burnt gasoline. To actually increase the speed of the engine we need to increase the supply of fuel and air. Let’s look at the pressure inside the cylinder a bit closer. During the intake stroke the piston creates a negative pressure difference which sucks the air in. During the compression stroke the pressure increases due to shrinking volume, only to increase even more due to combustion. It’s finally reduced by the expanding volume of the chamber as the piston goes down during the power stroke: The pushing force generated on the piston is proportional to the pressure in the cylinder, however, the torque generated by that force is also affected by other factors. Firstly, observe that during the compression stroke, the pressure inside the chamber pushes on the piston and through the rod against the rotation of the crankshaft: Secondly, the magnitude of torque depends on the effective length of the arm of force, but that length changes during crankshaft rotation. For instance, when the piston is at the top dead center the gases merely push the crankshaft down, but they don’t turn it because the force arm has the length of zero. In the demonstration below the red dashed line shows the direction of the rod force and the black line show the arm of force on the crank: If we account for these effects we can calculate that the torque generated by the pressure inside one cylinder is roughly as follows: However, these are not all the forces that affect the crankshaft. Both piston and its connecting rod have some mass and during crankshaft’s rotation they keep changing their direction of motion. Let’s look at the plot of the velocity of a piston as it moves up and down the cylinder when the crankshaft rotates with a constant angular velocity: You may be surprised that the plot isn’t symmetrical, but it’s just a consequence of the already discussed behavior of the crank mechanism taking more time to move through the lower half of the stroke compared to the upper half of the stroke. Let’s consider a piston in a top dead center position â as the piston reaches that point its velocity is 0, so the crankshaft has to drag the piston down. Roughly halfway through its stroke the piston reaches its maximum velocity, and now the crankshaft has to actually slow the piston down so that it stops moving by the time it reaches the bottom dead center position. The piston, however, wants to keep going, so it exerts a pushing force. These inertial forces keep oscillating back and forth creating an inertial torque on the crankshaft: The magnitude of the inertial forces depends on the speed of the piston and thus on the crankshaft’s rotational velocity. That system is very dynamic since crankshaft’s rotational velocity in turn is affected by the inertial forces acting on it. The resulting output crankshaft’s torque is a sum of these pressure-based and inertia-based torques. The cumulative diagram of torque on the crankshaft from a single piston looks roughly like this: As you can see, the torque created by a single piston is very varied. Even when we overlap the resulting torque from all four pistons the total torque is still fairly uneven: A torque T acting on a shaft creates an angular acceleration Î± that is proportional to that torque: This is a rotational equivalent of traditional linear equation that ties force F to mass m and linear acceleration a: In rotational motion the equivalent of mass m is moment of inertia I. Similarly to how velocity is affected by acceleration, angular velocity is affected by angular acceleration. Let’s see how angular velocity of the crankshaft varies over time under a constant load: As you can see the value fluctuates a lot. To reduce the angular acceleration and thus variation in angular velocity we have to increase the rotational inertia I of the system. For that purpose a heavy flywheel is attached to the crankshaft with a bunch of  bolts: Because the flywheel  is heavy and has a large moment of inertia the variation in angular velocity of the crankshaft is reduced which makes the engine work more evenly: Notice that the flywheel has gear teeth cut on its perimeter. Those teeth mesh with a pinion gear that is powered by an electric starter motor when the engine is being turned on. Once the flywheel starts moving its inertia helps to keep the crankshaft going which in turn lets the engine continue to operate on its own. Note that while the high inertia of the flywheel helps to smooth out the variation in angular velocity, it also comes at a cost â a very heavy flywheel is difficult to spin up so the engine becomes less responsive to throttle input. In cars with manual transmission an engaged clutch presses against the flywheel to transfer the rotational motion to the transmission and further down to the wheels. Cars with automatic transmission don’t have a flywheel but instead they use a flexplate which is connected to a torque converter which serves as a source of large inertia to smooth out the engine’s efforts. The journey through our engine ends here, but there are still many components needed to fully embed an engine in a car. The previously mentioned cooling system ensures the engine is kept at an appropriate operating temperature. The intake and exhaust manifolds direct the flow of gases into and out of the cylinders. An oil pump, oil filter, and oil passages in the engine block and cylinder head ensure all components are properly lubricated. Many modern engines also employ a turbocharger that uses the exhaust gases to increase the amount of air that gets pushed into the cylinders. All those components make sure that the engine can operate at expected level of power and efficiency. Engineering Explained is one of the most popular channels dedicated to car technologies enthusiasts. Over the years Jason Fenske has covered a breadth of topics including a comparisons of injection systems, intake manifold design, and even rotary engines. PapadakisRacing has some great videos on engine assembly and teardowns. If you think you’d enjoy more videos from the latter category I Do Cars does in-depth deconstruction videos of used engines. How a Car Works is a fantastic video course on the operation of a car. In high quality episodes the presenter goes into a lot more details than what I’ve described here. While the course is paid, there are some free preview videos available on YouTube. Unchallenged for decades, the internal combustion engines in cars are slowly being supplanted by their electric equivalents, which are simpler, quieter, and more environmentally friendly. Despite their drawbacks, classic engines still have something mythical about them â their intricate mechanisms are synchronized together to create carefully controlled conditions for harnessing fire in a truly Promethean way."
  },
  {
    "url": "https://www.nytimes.com/interactive/2020/11/03/us/elections/forecast-president.html",
    "title": "Battleground States: Election Forecast - The New York Times",
    "content": "Advertisement Updated June 1, 2021, 2:51 PM ET Disabling auto-updates may improve reliability when using a screen reader or keyboard to navigate. If Joe Biden wins one of these three states, he is likely to win the presidency. If President Trump wins all three, it could be days or more before a winner is declared. Florida Florida — Georgia Georgia — North Carolina N.C. — Maggie Astor  Jan. 7, 2021 Vice President Mike Pence affirms Joseph R. Biden Jr. and Kamala Harris as the next president and vice president. Here are shifts in precincts where we believe nearly all votes have been counted. High-income neighborhoods are precincts where the median household income is $100,000 or more; white areas with fewer college graduates are precincts where more than 80 percent of adults are white and fewer than 25 percent have a college degree; urban and suburban areas are limited to major metropolitan areas; Cuban areas in Miami represent precincts in Miami-Dade County where more than 25 percent of registered voters are Cuban-American, according to L2. These estimates do not include parts of Florida that do not report data by precinct; parts of North Carolina that report early or absentee votes by county; some late-arriving mail ballots; or most provisional ballots. For precincts that have not yet reported all their votes, we make an estimate based on the results so far, what voting methods are left, and what we know about the people who live in those places. Once a state has counted all its votes, our estimated margin and the reported margin will match. As a rule, when our estimated margin is steady in the presence of new data, our forecast is more trustworthy. Once a state has counted all its votes, our estimated margin and the reported margin will match. As a rule, when our estimated margin is steady in the presence of new data, our forecast is more trustworthy. Once a state has counted all its votes, our estimated margin and the reported margin will match. As a rule, when our estimated margin is steady in the presence of new data, our forecast is more trustworthy. The interactive diagram below illustrates both candidates’ paths to the presidency. Here, we let you control the outcomes of the most competitive contests, assuming Mr. Trump and Mr. Biden will win states where they are heavily favored. Select a winner in the states below to see either candidate's paths to victory. Paths will narrow as races are called. *In Maine and Nebraska, two electoral votes are apportioned to the winner of the state popular vote, and the rest of the votes are given to the winner of the popular vote in each congressional district. Maine’s Second Congressional District and Nebraska’s Second Congressional District are worth one electoral vote each. Nicholas Fandos, in Washington Congress confirmed Joe Biden’s victory, defying a mob that stormed the Capitol after being egged on by President Trump.  Read more › Maggie Astor  Jan. 7, 2021 Vice President Mike Pence affirms Joseph R. Biden Jr. and Kamala Harris as the next president and vice president. Astead Herndon, in Atlanta  Jan. 6, 2021 Today encapsulated the politics of progress and grievance that have defined the Trump years: Senate wins for Warnock and Ossoff, and a mob at the Capitol.  Read more › Jonathan Martin, in Atlanta  Jan. 6, 2021 Democrats have now captured control of the Senate as Jon Ossoff has defeated David Perdue, following the Rev. Raphael Warnock’s victory over Senator Kelly Loeffler. See live results › The New York Times  Jan. 6, 2021 A mob of people loyal to President Trump stormed the Capitol, halting Congress’s counting of the electoral votes to confirm President-elect Joseph R. Biden Jr.’s victory.  Read more › Trip Gabriel  Dec. 14, 2020 Joseph R. Biden Jr. has received a majority of votes from the Electoral College, formally securing the presidency in the manner set out in the Constitution.  Read more › Isabella Grullón Paz  Dec. 14, 2020 The 538 members of the Electoral College are meeting to cast ballots for president based on the election results in their states, formalizing Joseph R. Biden Jr.’s victory. Track the Electoral College results › The New York Times  Dec. 5, 2020 California has certified its electors for the 2020 election, officially giving Joseph R. Biden Jr. more than the 270 pledged electors needed to become president.  Read more › Reid Epstein, in Washington  Nov. 30, 2020 The chairwoman of the Wisconsin Elections Commission has certified Biden as the winner in Wisconsin, formalizing his narrow victory in a state Trump carried four years ago.  Read more › Glenn Thrush, in Washington  Nov. 30, 2020 Arizona has officially certified Biden’s narrow victory in the state, further undermining Trump’s efforts to portray his decisive national loss as a matter still under dispute.  Read more › Michael D. Shear, in Washington  Nov. 23, 2020 President Trump authorized his government to begin the transition to President-elect Joseph R. Biden Jr.’s administration.  Read more › Source: Election results from National Election Pool/Edison Research By Michael Andre, Aliza Aufrichtig, Gray Beltran, Matthew Bloch, Larry Buchanan, Andrew Chavez, Nate Cohn, Matthew Conlen, Annie Daniel, Asmaa Elkeurti, Andrew Fischer, Josh Holder, Will Houp, Jonathan Huang, Josh Katz, Aaron Krolik, Jasmine C. Lee, Rebecca Lieberman, Ilana Marcus, Jaymin Patel, Charlie Smart, Ben Smithgall, Umi Syam, Rumsey Taylor, Miles Watkins and Isaac WhiteAdditional data collection by Alice Park, Rachel Shorey, Thu Trinh and Quoctrung BuiCandidate photo research and production by Earl Wilson, Alana Celii, Lalena Fisher, Yuriria Avila, Amanda Cordero, Laura Kaltman, Andrew Rodriguez, Alex Garces, Chris Kahley, Andy Chen, Chris O'Brien, Jim DeMaria, Dave Braun and Jessica WhiteReporting contributed by Alicia Parlapiano Advertisement"
  },
  {
    "url": "https://www.nytimes.com/interactive/2014/upshot/dialect-quiz-map.html",
    "title": "The U.S. Dialect Quiz: How Y’all, Youse and You Guys Talk - The New York Times",
    "content": "Advertisement By Josh Katz and Wilson AndrewsDec. 21, 2013 What does the way you speak say about where you’re from? Answer all the questions below to see your personal dialect map. Loading... Your last answer Least similar Most similar You’re viewing another reader’s map. Click here to take the quiz and see your own. Your Map See the pattern of your dialect in the map below. Three of the most similar cities are shown. Least similar Most similar Share Your Map: Loading... Share Your Map: These maps show your most distinctive answer for each of these cities. About This Quiz The data for the quiz and maps shown here come from over 350,000 survey responses collected from August to October 2013 by Josh Katz, a graphics editor for the New York Times who developed this quiz and has since written “Speaking American,” a visual exploration of American regional dialects. Most of the questions used in this quiz are based on those in the Harvard Dialect Survey, a linguistics project begun in 2002 by Bert Vaux and Scott Golder. The original questions and results for that survey can be found on Dr. Vaux’s current website. The colors on the large heat map correspond to the probability that a randomly selected person in that location would respond to a randomly selected survey question the same way that you did. The three smaller maps show which answer most contributed to those cities being named the most (or least) similar to you. Additional work by Eric Buth. Advertisement"
  },
  {
    "url": "https://medium.com/@anildash/the-missing-building-blocks-of-the-web-3fa490ae5cbc",
    "title": "The Missing Building Blocks of the Web | by Anil Dash | Medium",
    "content": "Sign up Sign in Sign up Sign in -- 55 Listen Share Though the world wide web has been around for more than a quarter century, people have been theorizing about hypertext and linked documents and a global network of apps for at least 75 years, and perhaps longer. And while some of those ideas are now obsolete, or were hopelessly academic as concepts, or seem incredibly obvious in a world where we’re all on the web every day, the time is perfect to revisit a few of the overlooked gems from past eras. Perhaps modern versions of these concepts could be what helps us rebuild the web into something that has the potential, excitement, and openness that got so many of us excited about it in the first place. [An aside: Our team at Glitch has been hard at work on delivering many of the core ideas discussed in this piece, including new approaches to View Source, Authoring, Embedding, and more. If these ideas resonate with you, we hope you’ll check out Glitch and see how we can bring these abilities back to the web.] For the first few years of the web, the fundamental way that people learned to build web pages was by using the “View Source” feature in their web browser. You would point your mouse at a menu that said something like “View Source” (nobody was browsing the web on a touchscreen back then) and suddenly you’d see the HTML code that made up the page you were looking at. If you squinted, you could see the text you’d been reading, and wrapped around it was a fairly comprehensible set of tags — you know, that <p>paragraph</p> kind of stuff. It was one of the most effective technology teaching tools ever created. And no surprise, since the web was invented for the purpose of sharing knowledge. These days, View Source is in bad shape. Most mobile devices don’t support the feature at all. And even on the desktop, the feature gets buried away, or hidden unless you enable special developer settings. It’s especially egregious because the tools for working with HTML in a browser are better than ever. Developers have basically given ordinary desktop web browsers the potential to be smart, powerful tools for creating web pages. But that leads to the other problem. Most complicated web pages these days aren’t actually written by anyone. They’re assembled, by little programs that take the instructions made by a coder, and then translate those instructions into the actual HTML (and CSS, and JavaScript, and images, and everything else) that goes to your browser. If you’re an expert, maybe you can figure out what tools were being used to assemble the page, and go to GitHub and find some version of those tools to try out. But it’s the difference between learning to cook by looking over someone’s shoulder or being told where a restaurant bought its ingredients. Bringing View Source back could empower a new generation of creators to see the web as something they make, not just a place where big companies put up sites that we all dump our personal data into. When Tim Berners-Lee invented the world wide web, he assumed that, just like in earlier hypertext systems, every web browser would be able to write web pages just as easily as it read them. In fact, that early belief led many who pioneered the web to assume that the format of HTML itself didn’t matter that much, as many different browsing tools would be able to create it. In some ways, that’s true — billions of people make things on the web all the time. Only they don’t know they’re making HTML, because Facebook (or Instagram, or whatever other app they’re using) generates it for them. Interestingly, it’s one of Facebook’s board members that helped cause this schism between reading and writing on the web. Marc Andreessen pioneered the early Mosaic web browser, and then famously went on to spearhead Netscape, the first broadly-available commercial web browser. But Netscape wasn’t made as a publicly-funded research project at a state university — it was a hot startup company backed by a lot of venture capital investment. It’s no surprise, then, that the ability to create web pages was reserved for Netscape Gold, the paid version of that first broadly consumer-oriented web browser. Reading things on the web would be free, sure. But creating things on the web? We’d pay venture-backed startup tech companies for the ability to do that, and they’d mediate it for us. Notwithstanding Facebook’s current dominance, there are still a lot of ways to publish actual websites instead of just dumping little bits of content into the giant social network. There are all kinds of “site building” tools that let you pick a template and publish. Professionals have authoring tools or content management systems for maintaining big, serious websites. But these days, there are very few tools you could just use on your computer (or your tablet, or your phone) to create a web page or web site from scratch. All that could change quickly, though— the barriers are lower than ever to reclaiming the creative capability that the web was supposed to have right from its birth. Okay, this one’s nerdy. But I’m just gonna put it out there: You’re supposed to be able to include other websites (or parts of other websites) in your web pages. Sure, we can do some of that — you’ve seen plenty of YouTube videos embedded inside articles that you’ve read, and as media sites pivot to video, that’s only gotten more commonplace. But you almost never see a little functional part of one website embedded in another. Old-timers might remember when Flash ruled the web, and people made simple games or interactive art pieces that would then get shared on blogs or other media sites. Except for the occasional SoundCloud song on someone’s Tumblr, it’s a grim landscape for anyone that can imagine a web where bits and pieces of different sites are combined together like Legos. Most of the time, we talk about this functionality as “embedding” a widget from one site into another. There was even a brief fad during the heyday of blogs more than a decade ago where people started entire companies around the idea of making “widgets” that would get shared on blogs or even on company websites. These days that capability is mostly used to put a Google Map onto a company’s site so you can find their nearest location. Those old hypertext theory people had broader ambitions, though. They thought we might someday be able to pull live, updated pieces of other sites into our own websites, mixing and matching data or even whole apps as needed. This ability to include part of one web page into another was called “transclusion”, and it’s remained a bit of a holy grail for decades. There’s no reason that this can’t be done today, especially since the way we build web pages in the modern era often involves generating just partial pages or only sending along the data that’s updated on a particular site. If we can address the security and performance concerns of sharing data this way, we could address one of the biggest unfulfilled promises of the web. This one is so obvious, but we seem to have forgotten all about it: The web was designed so that everybody was supposed to have their own website, at its own address. Of course, things got complicated early on — it was too hard to run your own website (let alone your own web server!) and the relative scarcity of domain names made them expensive and a pain for everybody to buy. If you just wanted to share some ideas, or talk to your friends, or do your work, managing all that hassle became too much trouble, and pretty soon a big, expensive industry of web consultants sprung up to handle the needs of anybody who still actually wanted their own website—and had the money to pay for it. But things have gotten much easier. There are plenty of tools for easily building a website now, and many of them are free. And while companies still usually have a website of their own, an individual having a substantial website (not just a one-page placeholder) is pretty unusual these days unless they’re a Social Media Expert or somebody with a book to sell. There’s no reason it has to be that way, though. There are no technical barriers for why we couldn’t share our photos to our own sites instead of to Instagram, or why we couldn’t post stupid memes to our own web address instead of on Facebook or Reddit. There are social barriers, of course — if we stubbornly used our own websites right now, none of our family or friends would see our stuff. Yet there’s been a dogged community of web nerds working on that problem for a decade or two, trying to see if they can get the ease or convenience of sharing on Facebook or Twitter or Instagram to work across a distributed network where everyone has their own websites. Now, none of that stuff is simple enough yet. It’s for nerds, or sometimes, it’s for nobody at all. But the same was true of the web itself, for years, when it was young. This time, we know the stakes, and we can imagine the value of having a little piece of the internet that we own ourselves, and have some control over. It’s not impossible that we could still complete the unfinished business that’s left over from the web’s earliest days. And I have to imagine it’ll be kind of fun and well worth the effort to at least give it a try. In a similar vein, you may also enjoy this look at the lost infrastructure of the early era of social media. medium.com And if these ideas matter to you, join us on Glitch, the friendly and open community where people who love the web are creating the most innovative new apps and sites on the web. Some rights reserved -- -- 55 I help make @Glitch so you can make the internet. Trying to make tech more ethical & humane. (Also an advisor to Medium.) More: http://anildash.com/ Help Status About Careers Press Blog Privacy Rules Terms Text to speech"
  },
  {
    "url": "https://www.skypack.dev",
    "title": "Skypack: search millions of open source JavaScript packages",
    "content": "Menu Additional Links Ever tried to load JavaScript from a CDN and realized that it doesn’t work in a browser\n\t\t\t\twithout a bundler? Skypack operates like your favorite CDN but with an important difference:\n\t\t\t\tpackages are preoptimized for browser use. But Skypack doesn’t stop there: it handles minification, browser polyfilling, gzip/brotli,\n\t\t\t\tHTTP/3, caching, and more! Skypack is\n\t\t\t\tfree to use\n\t\t\t\tfor personal and commercial purposes, forever. The basic CDN is production-ready and is\n\t\t\t\tbacked by Cloudflare, Google Cloud, and AWS. We’re fully committed to building a core piece\n\t\t\t\tof infrastructure you can rely on. To give us feedback on Skypack, please\n\t\t\t\tvisit our issue tracker\n\t\t\t\tor\n\t\t\t\tjoin our Discord. If you’re\n\t\t\t\tinterested in advanced features such as a custom domain, or you have specific needs, please\n\t\t\t\tcontact us at\n\t\t\t\tinfo@pika.dev."
  },
  {
    "url": "https://benschmidt.org/post/2020-01-15/2020-01-15-webgpu/",
    "title": "Javascript and the next decade of data programming | Ben Schmidt",
    "content": "I’ve recently been getting pretty far into the weeds about what the future of\ndata programming is going to look like. I use pandas and dplyr in python and R\nrespectively. But I’m starting to see the shape of\nsomething that’s interesting coming down the pike.\nI’ve been working on a project that involves scatterplot visualizations\nat a massive scale–up to 1 billion points sent to the browser. In doing this,\ntwo things have become clear: I tweeted about\nit once, after I had experimented with binary, serialized alternatives\nto JSON. As webgpu and new binary serialization formats--like Arrow--come of age, it's going to be harder and harder to stomach geojson's slowness. More and more of R and python will become js or wasm wrappers. Just like in the 2000s they were wrappers around Java. It'll be very weird. I’m writing about Python and R because they’re completely dominant in the\nspace of data programming. (By data programming, I mean basically ‘data science’;\nnot being a scientist, I have trouble using it to describe what I do.)\nSome dinosaurs in economists still use Stata, and some wizards use Julia, but\nif you want to work with data that’s basically it.\nThe big problem with the programming lessons we use to work\nwith data they run largely on CPUs, and often predominantly on a single core.\nThis has always been an issue in terms of speed; when I first switched to\nPython around 2011, I furiously searched ways around the GIL (global\ninterpreter lock) that keeps the language from using multiple cores even on\nthreads. Things have gotten a little better on some fronts–in general, it\nseems like at least linear algebra routines can make use of a computer’s\nfull resources. Separately, the graphical and interface primitives of all programs have started\nto move to the web. If I had started doing this kind of work seriously even a\ncouple years later, I would never even have noticed there used to be another\nway. I never really used tcl/tk interfaces\nin R, but I was always aware that they existed; the very first version, private\nversion  of the Google Ngrams browser that JB Michel wrote in like 2008 or\nsomething was built around some Python library.\nThis was normal. But in the last decade, it’s become\nobvious that if you\nwant to build user-facing elements to describe something like “a button”\nor “a mouseover”, the path of least resistance is to use the HTML conception,\nnot the operating system conception of them. The\nfifteen-year-old freshman\nwho built the first Bookworm UI quickly saw it needed a javascript plotting library.\nThis integration is becoming tighter and tighter\nin data programming land. I have collaborators and grad students who transition\nseamlessly into bundling their R packages into Shiny apps, into decorating their\nGoogle colab notebooks with all sorts of sliders and text entry fields, into\npublishing R and Python code as online books with HTML/JS navigation. Jupyter notebooks and the RStudio IDE themselves are part of this transformation; what appears to be\nPython code held together by an invisible skein of Javascript. Again, these\nare platforms that have more or less displaced earlier models. When I first learned\nR, I pasted from textedit into the core R GUI; I went a little down the road\ninto ESS-mode in emacs as well. But if you need to continually be checking\nrandom samples of a dataframe, re-running modules, and seeing if your\nregular expressions correctly clean a dataset, you are using a notebook\ninterface today, even if you bundle your code into a module at some point. And for visualization, Javascript is creeping into this space. Like many people,\nI’ve been relieved to be able to use Altair instead of matplotlib for\nvisualizing pandas dataframes; and I don’t think twice about dropping\nggplotly into lessons about ggplot for students who start wondering about\ntooltips on mouseover. ggplot and matplotlib are still king of the roost\nfor publication-ready plots, but after becoming accustomed to interactive,\nresponsive charts on the web, we are coming to expect exploratory charts to\ndo the same thing; just as select menus and buttons from HTML fill this role\nin notebook interface, JS charting libraries do the same for chart interface. Let me be clear–something I’ll say in this following section is certainly\nwrong. I’m not fully expert in what I’m about to say. I don’t know\nwho is! There are some analogies to web cartography, where I’ve learned a lot\nfrom Vladimir Agafonkin. Many of the tools I’m\nthinking about I learned about in a set of communications with\nDoug Duhaime and David McClure.\nBut the field is unstable enough that I think others may stumble in the same\ndirection I have. This whole period, GPUs have also been displacing CPUs for\ncomputation. The R/Python interfaces to these are tricky. Numba kind of\nworks; I’ve fiddled with gnumpy from time to time; and I’ve never intentionally\nused a GPU in R, although it’s possible I did without knowing it. The path of\nleast resistance to GPU computation in Python and R is often to use Tensorflow\nor Torch even for purposes that don’t really a neural network library–so I\nfind myself, for example, training UMAP models using the neural network interface\nrather than the CPU one even though I’d prefer the other. Most of these rely on CUDA to access GPUs. (When I said I don’t know what I’m\ntalking about–this is the core of it.) If you\nwant to do programming on these platforms, you increasingly boot up a cloud\nserver and run heavy-duty models there.  Cuda configuration is a pain, and the\nodds are decent your home machine doesn’t have a GPU anyway. If you want to\nrun everything in the cloud, this is fine–Google just gives away TPUs for free.\nBut doing a group-by/apply/summarize on a few million rows, this is overkill;\nand while cloud compute is pretty cheap compared to your home laptop,\ncloud storage is crazy expensive. Digital Ocean charges me like a hundred dollars a year\njust to keep up the database backing RateMyProfessor; for the work I do\non several terabytes of data from the HathiTrust, I’d be lost without a university\ncluster and the 12TB hard drive on my desk at home. But I want these operations to run faster. When I started using webgl to make charts in Javascript, I was completely blown\naway what it could do. I’m used to sitting around waiting for ggplot to render even a few thousand points.\nI’m used to polygon operations in geopandas being long and expensive. I’m used\nto getting up to get some tea when I want to load a geojson file. But I could use javascript to generate millions of points in random\npolygons from primitive triangles in barely any time; and then using regl\nit can animate fast enough to make seamless zooming reasonable. Here, for example,\nis every single vote (excluding absentee) in New York City precincts in\nthe 2020 election. (Hopefully this embed from Observable loads…\nbut if it doesn’t, well, that’s the kind of the point, too. I’m making you click below to avoid\nclobbering people on phones.) Load iframe Digging into the weeds to make more elaborate visualizations like this, I can\nsee why. Apache Arrow exposes an extremely low level model of the data you work\nwith, that encourages you to think a lot about both the precise schema and\nthe underlying types. In Python, I’ve gotten used to this kind of work in numpy;\nin R, I’ve only ever done a little bit a bit twiddling. But in modern JS, binary\narray buffers are built right into the language. When I started tinkering with\nJS, I thought of it as slow; but web developers are far more obsessive about speed\nthan any other high-level, dynamically typed language I’ve seen.\nThe profiling tools built into Chrome are incredibly powerful; and Google,\nespecially, has made a huge investment in making JS run incredibly quickly because\nthere’s huge money in frictionless web experience. Sure, lots of websites are\nslow because they come with megabyte-sized React installations and casual bloat;\nsure, the DOM is slow to work with. But Javascript itself is fast. In my first few years teaching digital humanities, probably the least thankful\ntask was helping students manage their local Java installations so they could\nrun Mallet, the best implementation of topic-modeling algorithm out there. Now,\nwe usually use slower and inferior implementations in gensim, structural topic\nmodels, and the like.\n(For an interesting discussion from Ted Underwood and Yoav Goldberg of how\ninferior results in gensim and sklearn came to displace mallet, see the Twitter\nthreads here.)\nBut as David Mimno, who keeps Mallet running, says, Javascript works much\nfaster. Finally, integrate algorithms with interface. The browser is a high performance computing environment (JavaScript is MUCH faster than Python) embedded in an excellent interactive graphics environment. Plus thereâs a code environment hidden underneath! Print those variables! And while Javascript has a reputation as a terrible language, the post ES2015\niterations have made it in many cases relatively easy to program with.\nMaps, sets, for ... of ... all work much like you’d expect (unlike the days\nwhen I spent a couple hours hunting out a rarely occuring bug in one data\nvisualization that turned out to occur when I was making visualizations of\nwordcounts that included the word constructor somewhere in the vocabulary);\nand many syntactic features like classes, array destructuring, and arrow\nfunction notation\nare far more pleasant than their Python equivalents. (Full disclosure–even\nafter a decade in the language, I still find Python’s whitespace syntax\ngimmicky and at heart just don’t like the language. But that’s a post for\nanother day.) And if javascript is fast, WebGL is just bonkers in what it can do.\nWant to lay out two million points in a peano curve in a few milliseconds?\nNo problem–you can even regenerate every single frame. Load iframe And WebGL uses floating-point buffers that are the same as those in Apache Arrow, so you\ncopy blocks of data straight from disk (or the web) into the renderers without even\nhaving to do that (still fast) javascript computation. It’s difficult, and\neasy to do wrong. (I’ve found regl pitched at the perfect level of abstraction,\nbut I still occasionally end up allocating thousands of buffers on the GPU every\nframe where I meant to only create one persistent one). In online cartography, protobuffer-based vector files do something similar in\nlibraries like mapbox.gl and deck.gl. The overhead of JSON-based formats\nfor working with cartographic data is hard to stomach once you’ve seen how\nfast, and how much more compressed, binary data can be. In working with WebGL, I’ve seen just how fast it can be. For things like\narray smoothing, counting of points to apply complicated numeric filters, and\ngroup-by sums, it’s possible to start applying most of the elements of the relational\nalgebra on data frames in a fully parallelized form. But I’ve held back from doing so in any but the most ad-hoc situations because\nWebGL is also terrible for data computing. I would never tell anyone to learn it, right now,\nunless they completely needed to. Attribute buffers can only be floats,\nso you need to convert all integer types before posting. In many situations data\nmay be downsized to half precision points, and double-precision floating points\nare so difficult that there are entire rickety structures built to support them at great cost\nSupport for texture types\nvaries across devices (Apple ones seem to pose special problems), so people I’ve\nlearned from like Ricky Reusser go to great lengths\nto support various fallbacks. And things that are essential for data programming,\nlike indexed lookup of lists or for loops across a passed array, are nearly impossible.\nI’ve found writing complex shaders in WebGL fun, but doing so always involves\nabusing the intentions of the system. But the last two pieces of the puzzle are lurking on the horizon. Web Assembly–\nwasm files–give another way to write things for the javascript virtual machine\nthat can avoid the pitfalls of Javascript being a poorly designed language.\nA few projects that are churning along in Rust hold the promise of making in-browser\ncomputation even faster. (If I were going to go all-in on a new programming language\nfor a few months right now, it would probably be Rust; in writing webgl programs\nI increasingly find myself doing the equivalent of writing my own garbage collectors,\nbut as a high-level guy I never learned enough C to really know the basic concepts.)\nBack in the 2000s, the python and R ecosystems were littered with packages\nthat relied on the Java virtual machine in various ways. In the 2010s, it felt\nto me like they shifted to underlying C/C++ dependencies. But given how much\neffort is going into it, I think we’ll start to see things use the Javascript\nVirtual Machine more and more. When I want to use some of D3 spherical projections\nin R, that’s how I call them; and Jerome Ooen’s V8 package (for running the JSVM,\nor whatever we call it) is approaching the same level of downloads as the\nmore venerable rJava. I suspect almost all of this is running just Javascript.\nIf it starts becoming a realistic way to run pre-compiled\nRust and C++ binaries on any system… that’s interesting. The last domino is a little off, but could be titanically important. WebGL is\nslowly dying, but the big tech companies have all gotten together to create\nWebGPU as the next-generation standard for talking to\nGPUs from the browser. It builds on top of the existing GPU interfaces for\nspecific devices (Apple, etc.) like\nVulkan and Metal, about which I have rigorously resisted learning anything. WebGPU will replace WebGL for fast in-browser graphics. But the capability to\ndo heavy duty computation in WebGL is so tantalizing that some lunatics\nhave already begun to do it. The stuff that goes on into Reusser’s work]\nis amazing; check out\nthis notebook about “multiscale Turing patterns” that creates gorgeous images\nhalfway between organic blobs and nineteenth-century endplates I haven’t read the draft WebGPU spec carefully, but it will certainly allow a more\nrobust way to handle things. There is already at least one linear algebra\nlibrary (i.e., BLAS) for WebGPU out there.\nI can only imagine that support for more data types will make many simple\ngroup-by-filter-apply functions plausible entirely in GPU-land on any computer\nthat can browse the web. When I started in R back in 2004, I spent hours tinkering with SQL backing for\nwhat seemed at the time like an enormous dataset: millions of rows giving\ndecades of data about student majors by race, college, gender, and ethnicity.\nI’d start a Windows desktop cranking out charts before I left the office at night,\nand come back to work the next morning to folders of images. Now, it’s feasible\nto send an only-slightly-condensed summary of 2.5 million rows for in-browser work and the whole dataset could easily fit in GPU memory.\nIn general, the distinction between generally available GPU memory (say, 0.5 - 4GB) and\nRAM (2-16GB) is not so massive that we won’t be sending lots of data there.\nData analysis and shaping is generally extremely parallelizable. Once this bundle gets rolling, it will much faster and more convenient than\npython/R, and in many cases it will be able to run with zero configuration.\nThe Arquero library,\nintroduced last year, already brings most of the especially important features\nof the dplyr or pandas API into observable at a nearly comparable speed. With\ntighter binary integration or a different backend, it–or something like it–\ncould easily become the basic platform for teaching the non-major introduction\nto data science course all of the universities are starting to launch. Even\nif it didn’t, the vast superiority of Javascript over R/Python for both\nvisualization speed (thanks to GPU integration) and interface (thanks to\nthe uniquity of HTML5) means that people will increasinly bring their own\ndata to websites for initial exploration first, and may never get any farther.\n(If I were going to short public companies based on the contents of these speculations,\nI’d start with NVidia–whose domination of the GPU space is partially dependent\non CUDA being the dominant language, not WebGPU, and ESRI, which is floundering\nas it tries to make desktop software that does what web browsers do easily.) Once these things start getting fast, the insane overhead of parsing CSV and JSON,\nand the loss of strict type definitions that they come with, will be far more onerous.\nSomething–I’d bet on parquet, but there are are possibilities involving arrow, HDF5,\nORC, protobuffer, or something else–will emerge as a more standard binary interchange format. So–this is the theory–the data programming languages in R and Python are going to rely on that. Just\nas they wrap Altair and they wrap HTML click elements, you’ll start finding\nmore and more that the package/module that seems to just work, and quickly,\nthat the 19-year-olds gravitate towards, runs on the JSVM. There will be\nstrange stack overflow questions in which people realize that they have\nan updated version of V8 installed which needs to be downgraded for some particular\npackage. There will python programs that work everywhere but mysteriously fail on some\nlow-priced laptops using a Chinese startup’s GPU. And there will be things\nthat almost entirely avoid the GPU because they’re so damned complicated to\nimplement that the Rust ninjas don’t do the full text, and which–compared to\nthe speed we see from everything else–come to be unbearable bottlenecks.\n(From what I’ve seen, Unicode regular expressions and non-spherical map projections seem to be a likely candidate here.) But it will also raise the question of why we should bother to continue in\nR and Python at all. Javascript is faster, and will run anywhere, universally,\nwithout the strange overhead of binder notebooks and the cost of loading data\nin the cloud. WASM ports of these languages that run inside the JSVM\nwill help, but ultimately get strange. (Will you write python code that gets\ntranspiled in the browser to WASM, and then invokes its own javascript emulator\nto build an altair chart?) Beats me! But I’ve already started sharing elementary data exercises for classes\nusing observablehq, which provides a far more coherent\napproach to notebook programming than Jupyter or RStudio. (If you haven’t\ntried it–among many, many other things, it parses the dependency relations between cells in a notebook\ntopologically and\navoids the incessant state errors that infect expert and–especially–novice\nprogramming in Jupyter or Rstudio.) And if you want to work with data\nrather than write code, it is almost as refreshing as the moment in computer history it\ntries to recapitulate, the shift from storing business data in COBOL to\nrunning them in spreadsheets. The tweet above that forms of the germ of this\nrant has just a single, solitary like on it; but it’s from Mike Bostock, the creator\nof D3 and co-founder of Observable, and that alone is part of the reason I\nbothered to write this whole thing up. The Apache Arrow platform I keep rhapsodizing about\nis led by Wes McKinney, the creator of pandas, who views it as the germ of a faster, better pandas2,\nfrom a position initially sponsored by RStudio and subsequently with funding\nfrom Nvidia. Speculative as this all\nis, it’s also–aside from massive neural-network gravitational of the tensorflow/torch solar systems–\nwhere the tools that become hegemonic in the last decade are naturally drifting.\n(Not to imply that Javascript is anywhere near the top of the Arrow project’s priority list, BTW. It isn’t.)\nI wish more of the data analysts, not just the insiders, saw this coming, or were excited that it is. As I said, I’ve been doing some of this programming since 2003 or so, and been\nputting in my regular rounds most days since 2010. In that time I’ve come to see\nthat I what I want to see most–fully editable, universally runnable, data\nanalysis on open data–is not a universal code. Some people just want\nstatic charts. Some people want to hide their data. Most readers don’t want\nto tweak the settings. And everyone looks down on people who like Javascript.\nBut it’s also the case that the web was first built\nin the 90s to share complicated academic work and make it editable by its\nreaders. Even if most of academia and much of the media is devoted to one-way\nflows of information, and much of the post-social media Internet is a blazing hellscape,\nI’m excited about these shifts in the landscape\nprecisely because they hold out the possibility that some portion of the Web\nmight actually live up to its promise of making it easier to think through ideas. I am a digital historian and Director of Digital Humanities at NYU. Â© 2019 · \n\n    Powered by the\n    Academic theme for\n    Hugo."
  },
  {
    "url": "https://arrow.apache.org/docs/js/",
    "title": "JavaScript docs — Apache Arrow v21.0.0",
    "content": "Stub page for the JavaScript docs; actual source is located in js/ sub-directory. Â© Copyright 2016-2025 Apache Software Foundation.\nApache Arrow, Arrow, Apache, the Apache feather logo, and the Apache Arrow project logo are either registered trademarks or trademarks of The Apache Software Foundation in the United States and other countries. Created using Sphinx 6.2.0. Built with the PyData Sphinx Theme 0.16.1."
  },
  {
    "url": "https://uwdata.github.io/arquero/",
    "title": "Arquero | arquero",
    "content": "Arquero is a JavaScript library for query processing and transformation of array-backed data tables. Following the relational algebra and inspired by the design of dplyr, Arquero provides a fluent API for manipulating column-oriented data frames. Arquero supports a range of data transformation tasks, including filter, sample, aggregation, window, join, and reshaping operations. To get up and running, start with the Introducing Arquero tutorial, part of the Arquero notebook collection. Have a question or need help? Visit the Arquero GitHub repo or post to the Arquero GitHub Discussions board. Arquero is Spanish for “archer”: if datasets are arrows, Arquero helps their aim stay true. 🏹 Arquero also refers to a goalkeeper: safeguard your data from analytic “own goals”! 🥅 ✋ ⚽ The core abstractions in Arquero are data tables, which model each column as an array of values, and verbs that transform data and return new tables. Verbs are table methods, allowing method chaining for multi-step transformations. Though each table is unique, many verbs reuse the underlying columns to limit duplication. To use in the browser, you can load Arquero from a content delivery network: Arquero will be imported into the aq global object. The default browser bundle also includes the Flechette library for processing Apache Arrow data. Alternatively, you can build and import arquero.min.js from the dist directory, or build your own application bundle. When building custom application bundles for the browser, the module bundler should draw from the browser property of Arquero’s package.json file. For example, if using rollup, pass the browser: true option to the node-resolve plugin. Arquero uses modern JavaScript features, and so will not work with some outdated browsers. To use Arquero with older browsers including Internet Explorer, set up your project with a transpiler such as Babel. First install arquero as a dependency, for example via npm install arquero --save.\nArquero assumes Node version 18 or higher.\nAs of Arquero version 6, the library uses type module and should be loaded using ES module syntax. Import using ES module syntax, import all exports into a single object: Import using ES module syntax, with targeted imports: Dynamic import (e.g., within a Node.js REPL): To build and develop Arquero locally:"
  },
  {
    "url": "https://pbeshai.github.io/tidy/",
    "title": "tidy.js",
    "content": "Your Docusaurus site did not load properly. A very common reason is a wrong site baseUrl configuration. Current configured baseUrl = /tidy/ We suggest trying baseUrl = Tidy up your data with JavaScript tidy.js prioritizes making your data transformations readable, so future you and your teammates can get up and running quickly. Inspired by dplyr and the tidyverse in R, tidy.js is built using battle-tested verbs that can handle any data wrangling need. No wrapper classes needed — all tidy.js needs is an array of plain old-fashioned JS objects to get started. Here's a quick jumping off point to see the API for all the functions provided by tidy.js."
  },
  {
    "url": "https://observablehq.com/@observablehq/plot",
    "title": "Plot | The JavaScript library for exploratory data visualization",
    "content": "Create expressive charts with concise code Plot doesn’t have chart types. Instead, it has layered geometric shapes such as bars, dots, and lines. Scales map an abstract value such as time or temperature to a visual value such as position or color. Derive data on-the-fly while plotting, say to bin quantitative values or compute a rolling average. Small multiples facilitate comparison by repeating a plot across partitions of data. Plot supports GeoJSON and D3’s spherical projection system for geographic maps. Plot is built by the same team as D3. If you know some D3, you’ll be right at home with Plot. Visit D3 With Observable’s chart cell, quickly create plots with a GUI, then eject to code to customize. Try chart cell Plot is developed by Observable, the platform for collaborative data analysis. Visit Observable"
  },
  {
    "url": "https://vega.github.io/vega-lite/",
    "title": "A High-Level Grammar of Interactive Graphics | Vega-Lite",
    "content": "Vega-Lite is a high-level grammar of interactive graphics. It provides a concise, declarative JSON syntax to create an expressive range of visualizations for data analysis and presentation. Vega-Lite specifications describe visualizations as encoding mappings from data to properties of graphical marks (e.g., points or bars).\n    The Vega-Lite compiler automatically produces visualization components including axes, legends, and scales.\n    It determines default properties of these components based on a set of carefully designed rules.\n    This approach allows Vega-Lite specifications to be concise for quick visualization authoring, while giving user control to override defaults and customize various parts of a visualization.\n    As we also designed Vega-Lite to support data analysis, Vega-Lite supports both data transformations (e.g., aggregation, binning, filtering, sorting) and visual transformations (e.g., stacking and faceting).\n    Moreover, Vega-Lite specifications can be composed into layered and multi-view displays, and made interactive with selections.\n  \n\nGet startedLatest Version: 6.2.0\nTry online Compared to Vega, Vega-Lite provides a more concise and convenient form to author common visualizations. As Vega-Lite can compile its specifications to Vega specifications, users may use Vega-Lite as the primary visualization tool and, if needed, transition to use the lower-level Vega for advanced use cases. Check out the documentation and take a look at our example gallery. Follow us on Bluesky to stay informed about updates. With Vega-Lite, we can start with a bar chart of the average monthly precipitation in Seattle, overlay a rule for the overall yearly average, and have it represent an interactive moving average for a dragged region. Next step Vega-Lite is used by thousands of data enthusiasts, developers, journalists, data scientists, teachers, and researchers across many organizations. Here are some of them. Learn about integrations on our ecosystem page. The development of Vega-Lite is led by the alumni and members of the University of Washington Interactive Data Lab (UW IDL), including Kanit “Ham” Wongsuphasawat (now at Databricks), Dominik Moritz (now at CMU / Apple), Arvind Satyanarayan (now at MIT), and Jeffrey Heer (UW IDL). Vega-Lite gets significant contributions from its community. Please see the contributors page for the full list of contributors."
  },
  {
    "url": "https://d3js.org",
    "title": "D3 by Observable | The JavaScript library for bespoke data visualization",
    "content": "The JavaScript library for bespoke data visualization Create custom dynamic visualizations with unparalleled flexibility Create, update, and animate the DOM based on data without the overhead of a virtual DOM. Encode abstract data into visual values such as position, size, and color. Explain position encodings with axes. Render arcs, areas, curves, lines, links, pies, stacks, symbols… and any geometric primitive you might need to visualize data. Facilitate exploration with reusable interactive behaviors, including panning, zooming, brushing, and dragging. Treemaps, trees, force-directed graphs, Voronoi, contours, chords, circle-packing… a library of layout algorithms at the ready. More spherical projections than you can shake a stick at, with arbitrary aspects, adaptive sampling, and flexible clipping. CSV parsing, localized date parsing and formatting, color spaces, calendar math, statistics, and can I stop listing features now? The D3 team also builds Observable Plot, a high-level API for quick charts built on top of D3. Try Observable Plot D3 is developed by Observable, the platform for collaborative data analysis. Visit Observable"
  },
  {
    "url": "https://towardsdatascience.com/tag/data-analysis/",
    "title": "Data Analysis | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. A waterfall chart can be a powerful tool for conveying information. But it has some… Why are there so many hotels named after cities they are not in? Follow along… My lesson of how blindly over-controlling for noise can erase the effects you are measuring When you have a drill-through page that can be called from multiple pages, it could… Discover how POSET indicators transform data into coherent scoring systems, enabling meaningful comparisons while preserving… From architectural design to food security. Is there a way to use the out-of-the-box features of Power BI to be IBCS… Deep work, trends, data, and research Understand how to use Window Functions to perform calculations without losing details Playbook on how data analysts can become data scientists Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/tag/data-visualization/",
    "title": "Data Visualization | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Mariya Mansurova explains how hands-on learning, agentic AI, and engineering habits shape her writing and… How to evaluate classification models and understand which metric matters the most. An argument for human-led analysis (at least for now) Data storytelling can enlighten—but it can also deceive. When persuasive narratives meet biased framing, cherry-picked… Why are there so many hotels named after cities they are not in? Follow along… Learn three easy steps for gaining an intelligent picture for any project by using the… Using the Elastic Beanstalk service Learn how you can improve your machine learning models using effective data cleaning Analyse dynamic signals in a computer vision pipeline in Python using OpenCV and Rerun How to find machine learning projects that will get you hired. Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/tag/javascript/",
    "title": "JavaScript | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. This week, we celebrate recent articles that resonated the most with our community. Can Python really replace JavaScript for web development? Designing asynchronous pipelines for efficient data processing A step-by-step guide to training a BlazeFace model, from the Python training pipeline to the… Part of a series on how modern AI and other technologies could assist more efficient… From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable… From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable… And why it feels like I’m switching to the Dark Side Things you should keep in mind before participating in your first #30DayChartChallenge and why you… To what extent are countries adopting data policies and systems for the public good? Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/tag/visualization/",
    "title": "Visualization | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Building a tool to interactively visualize the forward pass of any Pytorch model from within… Using the streamlit Python library Transform boring default Matplotlib line charts into stunning, customized visualizations How pre-attentive processing, Gestalt theory, and visual data encoding inform data design decisions So that it is understandable and engaging to (almost) everyone Simplify Geodata Extraction from OpenStreetMaps via the Overpass API How to identify and visualise clusters in knowledge graphs Create Visualizations at the Level of Leading Newspapers Discover how AI tools can transform intricate concepts into clear, practical frameworks and diagrams An overview of topic modeling global research through the OpenAlex API and visualizing results Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Ftowardsdatascience.com%2Fjavascript-for-data-analysis-2e8e7dbf63a7%2F&title=JavaScript%20for%20Data%20Analysis",
    "title": "LinkedIn Login, Sign in | LinkedIn",
    "content": "Stay updated on your professional world. By clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy. Click on the link to sign in instantly to your LinkedIn account. If you don’t see the email in your inbox, check your spam folder. Agree & Join LinkedIn By clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy. LinkedIn\n              \n              © 2025"
  },
  {
    "url": "https://towardsdatascience.com/evaluating-cinematic-dialogue-which-syntactic-and-semantic-features-are-predictive-of-genre-2c69a71af6e2/",
    "title": "Evaluating Cinematic Dialogue - Which syntactic and semantic features are predictive of genre? | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. This article explores the relationship between a movie's dialogue and its genre, leveraging domain-driven data analysis and informed… From fragmented speech in thrillers to expletive-laden exchanges in action movies, can we guess a movie’s genre simply by knowing its semantic and syntactic characteristics in the dialogue? If so, which ones? We will investigate whether or not the nuanced dialogue patterns within a screenplay – its lexicon, structure, and pacing – can be powerful predictors of genre. The focus here is twofold: to leverage syntactic and semantic script characteristics as predictive features and to underscore the significance of informed feature engineering. One of the primary gaps in many data science courses is the lack of emphasis on domain expertise and feature generation, engineering, and selection. Many courses also provide students with pre-existing datasets, and sometimes, these datasets are already cleaned. Moreover, in the workplace, the rush to produce results often overshadows the process of hypothesizing and validating predictive features, leaving little room for domain-specific exploration and understanding. In my own experience outlined in \"Using Multi-Task and Ensemble Learning to Predict Alzheimer’s Cognitive Functioning,\" I witnessed the positive impact of informed feature engineering. Researching known predictors of Alzheimer’s allowed me to question the initial task and data, ultimately leading to the inclusion of key features during modeling. In this article, I delve into a project that examines movie dialogue to illustrate my approach to research and feature extraction. The focus will be on identifying and analyzing textual, semantic, and syntactic elements within film dialogue, investigating how they interrelate, and evaluating their capacity to accurately predict a movie’s genre. I like to start every project by conducting a literature review. I begin by jotting down relevant concepts and questions to guide my review. This initial phase is crucial and, depending on the time I have, I intentionally steer clear of research directly related to the modeling problem at hand. The goal is to understand the broader context and seek out supplemental information first. This strategy helps in cultivating an unbiased understanding of the subject matter, ensuring that my approach to the problem is informed, yet not prematurely narrowed by the solutions and methodologies already explored by others. There is a body of literature that explores the interplay between natural dialogue and our emotions. Screenwriters capture an emotion or mood by capitalizing on textual and syntactical relationships. These vary across genres since different moods are associated with different genres. We will extract and evaluate the 4 characteristics listed below. In each section, I’ll explain the rationale: The dataset used here is the Cornell Movie-Dialogs Corpus (MIT License) from Kaggle, which was originally retrieved from the ConvoKit toolkit (Chang et al., 2020). This is comprised of over 300k spoken lines ** across ~220k conversational exchanges derived from 61**7 different movies. We’ll begin by loading data using the movie_lines.txt file. The columns are split by +++$+++so this will be used as the separator to split each line, extract the columns, and read the data into a data frame. I used spaCy – an open-source natural language processing library written in Python and Cython – to process the text. This included cleaning contractions, removing punctuation, and lemmatizing words. In suspense movies, dialogue is often sparse, showcasing the link between syntax and emotions. When characters are in states of terror, their speech tends to be concise, while nervousness often leads to longer utterances (i.e. rambling), a trait more commonly seen in comedies. Therefore, we will examine the length attributes of each line in the corpus. In this section, we’ll take a look at: In the boxplot and the statistics data frame above, we see that: Less than half of the script lines maintain more than 1 sentence. This informs us that each script line is short, and should be framed accordingly. The metrics mentioned above were calculated on a ‘per line’ basis within the movie script data. In the next section, we shift our focus to explore the average length of lines per movie, allowing us to examine variations in word length at the movie level. The \"Length Features Statistics DataFrame\" figure shows that individual lines in scripts range from 0 to 582 words, with a median of 7 words, which suggests a high degree of variability in dialogue density on a line-by-line basis. In contrast, the aggregated movie data shows a much narrower range, with a maximum average of 38.69 words per line, indicating that while individual lines can be extremely verbose or concise, movies tend to balance out to a moderate density of words. With over 39% of script lines containing more than one sentence, the per-line analysis indicates a tendency towards compound or complex sentences. However, the tighter standard deviation in the movie averages (0.29 for sentences) suggests a consistency in narrative rhythm across different films, aiming for a steady pace in dialogue delivery. The contrast between the median length of individual lines (7 words) and the average across movies (11.36 words) implies that screenwriters might often intersperse shorter lines of dialogue with longer monologues or exchanges. This technique could be a deliberate choice to create dynamic interactions between characters, keep the audience engaged, and ensure that each movie has its unique tempo and style. The histograms show a right-skewed distribution, with a central tendency for movies to feature lines averaging 7–13 words. This skewness is indicative of a minority of films with unusually long lines, which heavily influence the overall average. After outliers are excluded, the bimodal distribution for words per line becomes more evident, suggesting that there are two common line lengths in scripts. This observation is interesting as it could reflect different styles or genres within the corpus. The distribution of sentences per line appears to be approximately normal, with a negligible right skew, indicating a consistent sentence structure across screenplays. There are various ways to represent a heightened state of emotion in a script. One of which is to use an exclamation point (!) for emphasis and another is to use CAPITALIZATION FOR EMPHASIS. We’ll look at the presence of both and see if there’s a correlation with the overarching sentiment. A hyphen placed at the end of a character’s dialogue (-) may signify an interruption in their speech or an abrupt pause in the character’s thinking (e.g., the character has an epiphany). It can also convey fragmented speech. I had no prior knowledge or intuition about the relationship between the presence of questions in a script and other features. However, the proportion of questions is easily measurable, and it could be intriguing to explore whether any patterns can be detected. Below, we see that the proportion of lines with questions, indicated at 31.4%, suggests a strong preference for interactive dialogue within movies. This is substantially higher than the proportion of lines with exclamations, at 8.9%, which could indicate that while intense emotional expressions are present, they are less frequent than interrogative exchanges. The boxplot for the count of all-caps words reveals that the use of capitalized words is not common, suggesting that screenwriters may prefer subtler methods of conveying emphasis in dialogue rather than relying on text formatting. While questions are more common, the range of usage varies widely among movies, potentially reflecting different genres or directorial styles. For example, a thriller may have more questions built into the dialogue to maintain suspense, whereas a comedy may use exclamations to highlight punchlines. The histogram for lines that end with a hyphen shows a significant skew towards a lower proportion, indicating that lines ending with a hyphen are relatively uncommon in movie scripts. This could suggest that interrupted dialogue or sentences leading into actions (which are often denoted by hyphens) are used sparingly, perhaps to maintain the flow of dialogue or to avoid overusing a device that might otherwise lose its impact. Part of speech helps us understand the grammatical function of a word in a sentence. For instance, genres like historical or biographical films are often flooded with proper nouns, making the tracking of these and other common tags potentially revealing. According to \"Judging Screenplays by Their Coverage\" by Stephen Follows and Josh Cockcroft, \"swear words (are) not spread equally across all scripts […] Comedies are the sweariest, beating Action and Horror scripts by a tiny margin (and) the genres featuring the lowest levels of swearing are Family, Animated and Faith-based scripts\" (42). We’ll start by taking a look at the most frequent tags from the text by flattening the text, taking a sample, and using SpaCy for POS tagging. Overall, nouns are by far the most common parts of speech, with adjectives and verbs maintaining relatively similar counts. Adverbs are the rarest part of speech for our movies. I chose to display all four histograms on this plot because it highlights a clear differentiation in the usage of various parts of speech within movie dialogues. Nouns dominate the linguistic landscape, occupying 40% to 60% of the dialogue whereas adverbs range anywhere between 0 to 10%. This prevalence underlines the concrete and tangible nature of film narratives, which often rely on specific nouns to anchor the conversation and set scenes. Adverbs, conversely, appear infrequently, suggesting that movie dialogue may favor direct and concise language over descriptive or qualifying phrases. We’ll detect profanity using the ‘badwords.txt’ from profanityfilter. While most movie lines are devoid of profanity, there is a significant presence of it in certain scripts, with a few reaching a proportion as high as 0.37. This might reflect the genre, setting, or character development choices, where profanity is used to add realism, and intensity, or to delineate characters’ personalities. We’ll utilize two sentiment analysis models: NLTK Vader, which is quick but uses a basic rule-based approach, and Flair, which is more accurate but computationally intensive. NLTK Vader assigns sentiment scores based on individual words and may be biased by neutral words even in the presence of strong negative words, making it less precise. It also struggles to identify sarcasm or context nuances. Flair is an embedding-based model which enables it to capture context. Words with similar vector representations are often used in the same context. The downside to using this approach is that it’s significantly slower than the naive, rules-based approach. The NLTK model took ~ 4 minutes to run while this model took ~3 hours to run. \"The Pearson correlation evaluates the linear relationship between two continuous variables. A relationship is linear when a change in one variable is associated with a proportional change in the other variable. The Spearman correlation evaluates the monotonic relationship between two continuous or ordinal variables. In a monotonic relationship, the variables tend to change together, but not necessarily at a constant rate.\" (source) In our analysis, we will use the Spearman correlation coefficient to identify a monotonic relationship between all values. Below displays only the significant correlations where the p-value for the Spearman correlation is less than 0.05. I expected to find some significant correlations, such as those between the average number of words and the average number of sentences or the average number of uppercase words. I’d also anticipated the following correlations: There were a few interesting observations: A significant positive correlation between the average number of words and the use of proper nouns (prop_noun) may also indicate that more complex dialogues include more specific references to entities or names, which could be characteristic of certain genres like science fiction or fantasy with complex world-building. As noted above, I was quite surprised to see a correlation between questions and profanity yet no relationship between exclamation marks and profanity. Therefore, I decided to plot out a slope graph to see if we could uncover any relationship there. Interestingly enough, despite there being no significant correlation between the proportion of exclamation and the proportion of profanity, it appears that the most significant jump between the proportion of profanity occurs from dialogue with no exclamation marks to dialogue with exclamation marks. I am going to fast-forward through this last part and provide a brief overview of the modeling process and performance. However, please feel free to let me know if you’d like a more in-depth exploration of the modeling work done here and I’ll release a part two 🙂 Here we are building a classifier to predict the genre of drama. To expedite the modeling phase, we utilized LazyPredict, an AutoML Python package that applies all of the common machine learning algorithms to a dataset and presents common metrics based on the task. We then performed hyperparameter tuning on the first 4 models: Classically, hyperparameter sweeps are run via grid search (brute force), where all possible combinations of hyperparameters are empirically evaluated for optimization. Given that the number of trials grows exponentially with every new hyperparameter, this is usually non-feasible. Another approach, random search, randomly combines hyperparameters, reaching a local optimum more efficiently than grid search if all combinations are not exhausted. Instead of either of these options, I will utilize Bayesian Optimization. This method constructs a Gaussian process to model the black-box function and search space. The overarching advantage is that we are converging to a local solution (like any ML model does) rather than shooting simply trying out different hyperparameters. The F1 score, a harmonic mean of precision and recall, serves as a key indicator of our model’s performance. Precision reflects the model’s reliability in correctly identifying a movie as belonging to the ‘drama’ genre, while recall measures the model’s ability to capture all relevant instances of drama movies. Considering the constraints, such as the absence of a fully developed pipeline for filtering low variance columns, addressing potential multi-collinearity, and a more extensive feature engineering process, the model demonstrated reasonable effectiveness. The following section will highlight the features that were most important for the model. This article was mainly focused on the process of feature generation and analyzing the data within the context of screenplays. However, if I wanted to work more on modeling, I’d focus on feature engineering, examine the effects of multi-collinearly, and spend more time on model selection. More specifically, I would: I hope you enjoyed this analysis and that this article showcased the potential of tailoring analyses to the unique characteristics of a field. While I focused on cinematic dialogue, the principles of domain-driven data analysis and modeling are universal. I encourage you to research your chosen domain, remain curious, and get creative with feature engineering during your next modeling task. I would also love to hear about your own experiences with interesting domain-driven analyses so feel free to write a comment here or email me at [email protected]. Thanks! Cornell Movie-Dialogs Corpus. Retrieved from https://www.kaggle.com/\nrajathmc/cornell-moviedialog-corpus/kernels. (originally retrieved from ConvoKit). Follows, S. (2019). Judging screenplays by their coverage. Retrieved from https://stephenfollows.com/wp-content/uploads/2019/01/Judging\nScreenplaysByTheirCoverage_StephenFollows_c.pdf Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. Step-by-step code guide to building a Convolutional Neural Network A beginner’s guide to forecast reconciliation Here’s how to use Autoencoders to detect signals with anomalies in a few lines of… Feature engineering, structuring unstructured data, and lead scoring An illustrated guide on essential machine learning concepts Derivation and practical examples of this powerful concept Columns on TDS are carefully curated collections of posts on a particular idea or category… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/category/cinema/",
    "title": "Cinema | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. This article explores the relationship between a movie’s dialogue and its genre, leveraging domain-driven data… Plotting the ebbs and flows of cinema trends Practical insights on how to generate movie framelines and many other chromatic data-viz plots A colorful, data-driven journey across the chromatic world of movies Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/christabellecp/",
    "title": "Christabelle Pabalan, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. An article on the most common LLM development challenges I’ve encountered, effective mitigation strategies, and… A prompt template containing prompting techniques that have worked for me on over a dozen… Addressing the long tail problem and enhancing the recommendation experience for users on the Headspace… Network Analysis Spreading Information About Disease Prevention Imagine you’re a public health official tasked with… This article explores the relationship between a movie’s dialogue and its genre, leveraging domain-driven data… Refine hastily written code your future self will thank you for with ChatGPT and autoformatters. A tutorial on how to create slopegraph visualizations for assessing technological trend shifts, such as… An invitation to identify your repetitive EDA tasks and create an automated workflow, illustrated through… An examination of the factors that contribute to a good recommendation and long-term user retention Personal Tales Into Data Science In one of my previous articles, I detailed my experience… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/building-a-data-platform-in-2021-b759f6470426/",
    "title": "Building a Data Platform in 2021 | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. How to build a modern, scalable data platform to power your analytics and data science projects. Table of Contents: — The Platform — Integration — Data Warehouse — Transformation — Presentation — Transportation — Closing You know how the saying goes – \"There’s more than one way to skin a cat\" This is a tough metaphor for me to use as a proud cat parent, but the sentiment has never been more accurate when it comes to data in the 21st century. While it’s true that you can solve most of your data problems with a spreadsheet, a python script or a terminal command, problems emerge quickly as you start to consider scale, speed and consistency. Furthermore, the range of tools and processes in the data landscape has stifled collaboration and driven specialization in tool sets, rather than fostering a deep understanding of core data science concepts such as statistics, data modeling and effective visualization. Lucky for us, a consistent framework has begun to emerge. The nouveau approach to building a data platform is part do-it-yourself and part do-it-for-me. It involves quilting together managed services and engineering enough flexibility in your platform to anticipate the unknown. If done correctly, this modern infrastructure allows data professionals to focus on solving complex problems with math and science, rather than facilitating archaic processes that revolve around administration and documentation. One of the key concepts in this approach to building a modern data platform is modularization. There is no one vendor or technology that currently has domain over the entire data landscape, despite what clever marketing and sales campaigns present. Therefore, understanding each component is key to piecing together the right solutions for your specific project … The components are as follows: Let’s assume that the source component is obvious. Sources of data come in many shapes and sizes, and the integration layer should be pliable enough to account for all of them. On the DYI spectrum of this component are popular tools such as Airflow, which many companies use to build robust, end to end data pipelines. Other Apache offerings such as Kafka offer a more event-based approach to data integration and can be used in combination with Airflow to extend custom data pipelines even further. Managed services have come a long way in the integration space. Aside from enterprise grade versions of the aforementioned Apache projects such as Astronomer (Airflow) and Confluent (Kafka), there are several leaders in this space that offer flexibility, but are opinionated enough to help accelerate development in a meaningful way. From an event based perspective, Segment is the undeniable leader, while solutions such as Fivetran have emerged as the de facto solution for more traditional ETL/ELT based data integrations. Possibly the most ambiguous and most critical component of modern data platforms is the data warehouse. This is in part because legacy database technologies such as SQL Server, Postgres and MySQL are still extremely effective. However, the dominance of newcomers like Snowflake have highlighted clear path for the future. Cloud based data warehouses such as Snowflake, RedShift and BigQuery offer a multitude of benefits over their predecessors in the way they store, access and manage data. Regardless of which cloud based data warehouse you choose for your situation, the concept of partitioning this warehouse into different functional layers is still an evolving concept. Best practice is starting to emerge that suggests at least two distinct \"zones\" of your data warehouse; one that stores raw/unstructured data and another that stores normalized/transformed data. There is much room for debate on this topic, but the general benefit to having these two distinct zones is the ability to effectively manage ever-changing rules that transform raw data into digestible information. If the data warehouse component is the most critical piece of the modern data stack, then the transformation component is the most overlooked. Most projects tend to disperse transformations across business tools, visualization platforms and manual artifacts like spreadsheets, but centrally managing data transformations is a clearly identifiable attribute of mature data organizations. The idea of efficiently managing transformations first started to manifest in the mainstream as the battle between ETL and ELT. While it may seem pedantic, the simple reorganization of letters in a common acronym ushered in a brand new era that allowed non-data people to participate in building data products. This paradigm shift also gave new life to concepts like data governance and MDM, which rely heavily on input from business stakeholders. From a DIY perspective, Python reigns supreme, as it can easily manage simple SQL/task based transformations with modules like SQLAlchemy and Airflow, and is tailor made for more complex machine learning transformations fueled by Tensorflow, Scikit-learn and many more. From a managed service perspective it’s hard to find a better product than dbt. While it’s true that all of the major cloud providers (AWS, Microsoft, Google) have their own set of tools to manage transformations on their platform, dbt appears to be ahead of the pack from a platform agnostic standpoint. Up until now most of the components we have discussed are pure infrastructure. While it’s true most data analysts, engineers and scientists will be consuming content from the data warehouse and transformation components, the bulk of end users won’t see anything until it hits a dashboard in the presentation layer. The presentation component is a candidly vast category. Who’s to say that a Jupyter Notebook, which also includes elements of transformation, can’t also be used as a presentation tool? After all, Databricks has been very successful using this strategy as they seem poised to be one of the next big tech IPOs of the roaring 20s. From a historical perspective, visualization tools have dominated both the transformation and presentation categories, with tools like Looker, Power BI, Qlik, Sisense and Tableau proving that managing transformations and building beautiful visualizations are not mutually exclusive concepts. As the data stack continues to evolve I believe the champions in the presentation space will be those that double down on visualization capabilities and rely less on transformative ability. As organizations integrate more sources of data and data volumes exponentially increase, managing transformations at the presentation level will not only present a challenge but will create ill-defined information and inaccurate analysis. The consideration of a transportation component is what makes this approach uniquely modern. In the past it was acceptable that end users would consume information through dashboards and external analytics tools, but it is becoming increasingly apparent that unless data professionals can get their insights back into systems of record, their work may be all for naught. Sometimes referred to as \"embedded analytics\", the concept of data transportation is simple as it bridges the gap between data tools and systems of record (i.e customer relationship management, marketing automation, and customer success platforms) However, there are few managed services that have emerged to solve this problem effectively and even the ones that have emerged are still actively developing. Companies like Hightouch, Census and Syncari seem to be the first ones through the wall and are likely the only option for most projects unless they have copious amounts of developer resources and experience in automating information exchange. Even as I write this the data landscape is changing. Concepts around data platform observability and security are quickly becoming en vogue and companies are materializing overnight to solve these problems. With that in mind, understand that flexibility and agnosticism are the main takeaways from this message. Although it will happen, I am willing to bet that it will take several years before one vendor distills the entire data stack into one unified platform. So take this framework into the future with the understanding that you will have to change your thinking and accept new ideas on a daily basis. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. Step-by-step code guide to building a Convolutional Neural Network Here’s how to use Autoencoders to detect signals with anomalies in a few lines of… Solving the resource constrained project scheduling problem (RCPSP) with D-Wave’s hybrid constrained quadratic model (CQM) An illustrated guide on essential machine learning concepts Derivation and practical examples of this powerful concept Columns on TDS are carefully curated collections of posts on a particular idea or category… With demos, our new solution, and a video Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/category/data-science/analytics/",
    "title": "Analytics | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Retraining is easy; knowing when not to is the real challenge. In machine learning, performance… Explore the shift from static reports to intelligent apps with our first ebook. Learn the key concepts and reports of Google Analytics while practising with the platform A brief article on the Solar Cycles: data analysis and time series forecasting for the… Turning complex ML models into simple, interpretable rules with Human Knowledge Models for actionable insights… Your essential machine learning checklist to excel as a data scientist in analytics How can numerical user metrics be transformed into a personalized assessment of whether this behavior… Transform boring default Matplotlib line charts into stunning, customized visualizations Solving the knapsack problem In depth SQL code for creating your own statistical test design Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/data-dave/",
    "title": "Dave Melillo, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. How to build a modern, scalable data platform to power your analytics and data science… How to build a modern, scalable data platform to power your analytics and data science… Automate everything until only the fun stuff is left. Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/introduction-to-data-visualization-in-python-89a54c97fbed/",
    "title": "Introduction to Data Visualization in Python | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. How to make graphs using Matplotlib, Pandas and Seaborn Data visualization is the discipline of trying to understand data by placing it in a visual context so that patterns, trends and correlations that might not otherwise be detected can be exposed. Python offers multiple great graphing libraries that come packed with lots of different features. No matter if you want to create interactive, live or highly customized plots python has an excellent library for you. To get a little overview here are a few popular plotting libraries: In this article, we will learn how to create basic plots using Matplotlib, Pandas visualization and Seaborn as well as how to use some specific features of each library. This article will focus on the syntax and not on interpreting the graphs, which I will cover in another blog post. In further articles, I will go over interactive plotting tools like Plotly, which is built on D3 and can also be used with JavaScript. In this article, we will use two datasets which are freely available. The Iris and Wine Reviews dataset, which we can both load in using pandas read_csv method. Matplotlib is the most popular python plotting library. It is a low-level library with a Matlab like interface which offers lots of freedom at the cost of having to write more code. To install Matplotlib pip and conda can be used. Matplotlib is specifically good for creating basic graphs like line charts, bar charts, histograms and many more. It can be imported by typing: To create a scatter plot in Matplotlib we can use the scatter method. We will also create a figure and an axis using plt.subplots so we can give our plot a title and labels. We can give the graph more meaning by coloring in each data-point by its class. This can be done by creating a dictionary which maps from class to color and then scattering each point on its own using a for-loop and passing the respective color. In Matplotlib we can create a line chart by calling the plot method. We can also plot multiple columns in one graph, by looping through the columns we want and plotting each column on the same axis. In Matplotlib we can create a Histogram using the hist method. If we pass it categorical data like the points column from the wine-review dataset it will automatically calculate how often each class occurs. A bar chart can be created using the bar method. The bar-chart isn’t automatically calculating the frequency of a category so we are going to use pandas value_counts function to do this. The bar-chart is useful for categorical data that doesn’t have a lot of different categories (less than 30) because else it can get quite messy. Pandas is an open source high-performance, easy-to-use library providing data structures, such as dataframes, and data analysis tools like the visualization tools we will use in this article. Pandas Visualization makes it really easy to create plots out of a pandas dataframe and series. It also has a higher level API than Matplotlib and therefore we need less code for the same results. Pandas can be installed using either pip or conda. To create a scatter plot in Pandas we can call <dataset>.plot.scatter() and pass it two arguments, the name of the x-column as well as the name of the y-column. Optionally we can also pass it a title. As you can see in the image it is automatically setting the x and y label to the column names. To create a line-chart in Pandas we can call <dataframe>.plot.line(). Whilst in Matplotlib we needed to loop-through each column we wanted to plot, in Pandas we don’t need to do this because it automatically plots all available numeric columns (at least if we don’t specify a specific column/s). If we have more than one feature Pandas automatically creates a legend for us, as can be seen in the image above. In Pandas, we can create a Histogram with the plot.hist method. There aren’t any required arguments but we can optionally pass some like the bin size. It’s also really easy to create multiple histograms. The subplots argument specifies that we want a separate plot for each feature and the layout specifies the number of plots per row and column. To plot a bar-chart we can use the plot.bar() method, but before we can call this we need to get our data. For this we will first count the occurrences using the value_count() method and then sort the occurrences from smallest to largest using the sort_index() method. It’s also really simple to make a horizontal bar-chart using the plot.barh() method. We can also plot other data then the number of occurrences. In the example above we grouped the data by country and then took the mean of the wine prices, ordered it, and plotted the 5 countries with the highest average wine price. Seaborn is a Python data visualization library based on Matplotlib. It provides a high-level interface for creating attractive graphs. Seaborn has a lot to offer. You can create graphs in one line that would take you multiple tens of lines in Matplotlib. Its standard designs are awesome and it also has a nice interface for working with pandas dataframes. It can be imported by typing: We can use the .scatterplot method for creating a scatterplot, and just as in Pandas we need to pass it the column names of the x and y data, but now we also need to pass the data as an additional argument because we aren’t calling the function on the data directly as we did in Pandas. We can also highlight the points by class using the hue argument, which is a lot easier than in Matplotlib. To create a line-chart the sns.lineplot method can be used. The only required argument is the data, which in our case are the four numeric columns from the Iris dataset. We could also use the sns.kdeplot method which rounds of the edges of the curves and therefore is cleaner if you have a lot of outliers in your dataset. To create a histogram in Seaborn we use the sns.distplot method. We need to pass it the column we want to plot and it will calculate the occurrences itself. We can also pass it the number of bins, and if we want to plot a gaussian kernel density estimate inside the graph. In Seaborn a bar-chart can be created using the sns.countplot method and passing it the data. Now that you have a basic understanding of the Matplotlib, Pandas Visualization and Seaborn syntax I want to show you a few other graph types that are useful for extracting insides. For most of them, Seaborn is the go-to library because of its high-level interface that allows for the creation of beautiful graphs in just a few lines of code. A Box Plot is a graphical method of displaying the five-number summary. We can create box plots using seaborns sns.boxplot method and passing it the data as well as the x and y column name. Box Plots, just like bar-charts are great for data with only a few categories but can get messy really quickly. A Heatmap is a graphical representation of data where the individual values contained in a matrix are represented as colors. Heatmaps are perfect for exploring the correlation of features in a dataset. To get the correlation of the features inside a dataset we can call <dataset>.corr(), which is a Pandas dataframe method. This will give us the correlation matrix. We can now use either Matplotlib or Seaborn to create the heatmap. Matplotlib: To add annotations to the heatmap we need to add two for loops: Seaborn makes it way easier to create a heatmap and add annotations: Faceting is the act of breaking data variables up across multiple subplots and combining those subplots into a single figure. Faceting is really helpful if you want to quickly explore your dataset. To use one kind of faceting in Seaborn we can use the FacetGrid. First of all, we need to define the FacetGrid and pass it our data as well as a row or column, which will be used to split the data. Then we need to call the map function on our FacetGrid object and define the plot type we want to use, as well as the column we want to graph. You can make plots a lot bigger and more complicated than the example above. You can find a few examples here. Lastly, I will show you Seaborns pairplot and Pandas scatter_matrix , which enable you to plot a grid of pairwise relationships in a dataset. As you can see in the images above these techniques are always plotting two features with each other. The diagonal of the graph is filled with histograms and the other plots are scatter plots. Scraping Reddit data Data visualization is the discipline of trying to understand data by placing it in a visual context so that patterns, trends and correlations that might not otherwise be detected can be exposed. Python offers multiple great graphing libraries that come packed with lots of different features. In this article, we looked at Matplotlib, Pandas visualization and Seaborn. If you liked this article consider subscribing on my Youtube Channel and following me on social media. The code covered in this article is available as a Github Repository. If you have any questions, recommendations or critiques, I can be reached via Twitter or the comment section. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. Step-by-step code guide to building a Convolutional Neural Network Here’s how to use Autoencoders to detect signals with anomalies in a few lines of… Solving the resource constrained project scheduling problem (RCPSP) with D-Wave’s hybrid constrained quadratic model (CQM) An illustrated guide on essential machine learning concepts Derivation and practical examples of this powerful concept Columns on TDS are carefully curated collections of posts on a particular idea or category… With demos, our new solution, and a video Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/category/data-science/",
    "title": "Data Science | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Three pillars that shaped my first year in data science management - prioritization, empowerment, and recognition A waterfall chart can be a powerful tool for conveying information. But it has some… A common misconception about the working state of code in data, AI or software engineering… Generative Molecular Design (Part 1): common molecular representations in data science. Retraining is easy; knowing when not to is the real challenge. In machine learning, performance… How to evaluate classification models and understand which metric matters the most. In today’s fast-paced, distraction-heavy world, data literacy isn’t just about understanding charts or analyzing numbers—it’s… Why you should read this article Most data scientists whip up a Jupyter Notebook, play… Learn how to automate secure AWS infrastructure using Terraform — including VPC, public/private subnets, a… “Will that break a query folding?” “Does your query fold?”… Maybe someone asked you those… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/gilberttanner/",
    "title": "Gilbert Tanner, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. When thinking of data science and machine learning two programming languages, Python and R, immediately… Nobody can know everything but with help, we can overcome every obstacle. That’s exactly the… What is local model interpretation and how can it be used to gain insights from… What features are important and why Speeding up machine learning models in a small form factor Regardless of what problem you are solving an interpretable model will always be preferred because… Segment your images using the FastAI deep learning library Create deep learning models without writing code Learn how to work with multi-label data Use the FastAI deep learning library to classify images Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/seven-key-features-you-should-know-for-creating-professional-visualizations-with-plotly-f89558de5d0c/",
    "title": "Seven Key Features You Should Know for Creating Professional Visualizations with Plotly | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Create Visualizations at the Level of Leading Newspapers We are used to seeing interactive visualizations in online newspapers, and often we might wonder what tools data journalists use to create these professional-looking visualizations. The reality is that no special software is needed to create this type of visualizations; most interactive visualization libraries in Python are highly customizable, allowing for the creation of high-quality visualizations from a design perspective. In this article, we will show step-by-step how to customize an interactive visualization created in Plotly to significantly improve its design with just a few tweaks. For this article, we will use a simple visualization, such as the temporal evolution of a variable. The data to be visualized corresponds to the German population from the year 1800 to 2020. First, we will create the simplest possible visualization of the data with Plotly, without any customization. Subsequently, we will explain all the customizations used step by step, and the code for the improved visualization will be provided at the end of the article. The data used in the visualization can be obtained from the following page. Population of Germany 1800-2020 | Statista You can download the file with the data and run the code from this article on your computer to obtain the same results as shown in this article. Additionally, you can continue customizing to further improve the visualization. First, we download the data and store it in a Pandas DataFrame. We start with a simple visualization created in Plotly; in this case, the visualization consists of a line graph, with no additional customization. The goal of this article is to beautify the original visualization to make it look more professional, with a style similar to those visualizations you can find in newspapers such as the Financial Times. Next, we will explain step by step each technique that has been applied to transform the visualization and make it more visually appealing. Direct labels are a simple method to highlight specific information in a visualization. In this example, the goal is to highlight the beginning and the end of the German population over a period, from 1800 to 2020. Information for the remaining points can be observed using hoverovers. As shown in the code below, direct labels are implemented through annotations at the points of interest. Additionally, the y-axis labels have been removed to avoid overloading the visualization, as the values can be obtained from both the direct labels and also the hoverovers. When we create a visualization that reflects a temporal evolution, highlighting certain events on the graph is sometimes interesting to provide context. Sometimes, these events occur on a specific day and are therefore visualized using a vertical line; however, in other cases, the event occurs over a period of time and should be visualized using a shaded area. Visualizations in newspapers often have a title and a subtitle. One of them usually explains what is shown in the visualization, while the other conveys the key insight that the visualization provides. Annotations are used to create subtitles in the graph, as shown in the code below. The important part will be adjusting the x and y coordinates to place the annotation below the title. Another important aspect is to create the subtitles in a smaller font than the title, as shown in the visualization. Another feature that many visualizations in newspapers or magazines typically have is information about the data source, placed in a footer below the graph. This is done in the same way as the subtitle, using annotations. As before, finding the appropriate x and y coordinates, to correctly place the annotation, will be necessary. Another important aspect is the font size, which for the footer will generally be smaller than the one used for the subtitle. The default hoverovers are simply a tuple with the x and y values, as shown in the original image at the beginning of the article. These can be customized to create more detailed hoverovers. In this case, a hoverover with two lines has been created: one indicating the year and the other the population. This hoverover is much more professional than the one that was created by default. The default font in Plotly is Open Sans. This font looks very professional; however, there may be times when you need to customize your visualization with a different font type. I am a big fan of rounded fonts mainly because I think they look both professional and modern. For this reason, I have decided to implement a font called Rubik in the visualization. Poppins, Aptos, and Rubik are in my view, the most modern and professional fonts for visualizations. You can also try other fonts, depending on the needs or preferences of your particular project. One of the key principles for designing a good visualization is to use ink only to represent data. Therefore, a good visualization design should avoid the unnecessary use of ink. Following this guideline, we can implement changes in the visualization such as removing the background or the grids, as these elements do not provide any additional information. The following code shows all the previously implemented changes. I invite you to try additional changes according to your preferences. The truth is that Plotly is one of the Python libraries that offers higher quality and highly customizable visualizations. In addition, these visualizations can easily be used in web apps, for example, those made with Streamlit, or even embedded in Medium articles. In this article, we have covered seven features you can use to create professional visualizations, similar to those you might see in newspapers and online publications, using Plotly. With these simple methods, you can make your visualizations look much more professional. In the given example, they have been applied to a line chart. Still, the truth is that these features can be applied to a wide variety of visualizations, significantly improving their quality. I encourage you to put them into practice in your visualizations! Thanks for reading, Amanda Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. This article explores the relationship between a movie’s dialogue and its genre, leveraging domain-driven data… How to build a modern, scalable data platform to power your analytics and data science… How to make graphs using Matplotlib, Pandas and Seaborn Our weekly selection of must-read Editors’ Picks and original features Our weekly selection of must-read Editors’ Picks and original features Striking the balance between efficiency and engagement of your data-driven stories Insights from the NYC Public Hospital System’s Price Lists Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/amandaiglesiasmoreno/",
    "title": "Amanda Iglesias Moreno, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. A step-by-step guide to automating Jupyter Notebook execution and report generation using Python Learn how to create custom bump charts in Python using Plotly for data visualization Learn how to create custom waffle charts in Python using Plotly for data visualization Explore Overpass, Geoapify, Distancematrix.ai, Amadeus, and Mapillary for Advanced Mapping and Location Data Simplify Geodata Extraction from OpenStreetMaps via the Overpass API Create interactive calendars with heatmaps using Plotly Create Visualizations at the Level of Leading Newspapers In today’s market, buying electric cars represents an important challenge and a purchase decision that… Reflections on 4+ Years of Publishing Programming Articles Unlocking efficient text classification with pre-trained models: a case study using OpenAI’s GPT-3.5-turbo Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/global-data-barometer-whats-the-current-state-of-open-data-in-the-world-2841e80503c2/",
    "title": "Global Data Barometer: What's the Current State of Open Data in the World? | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. To what extent are countries adopting data policies and systems for the public good? I recently read a book on the adoption of open data policies in cities around the world. It’s called Beyond Transparency (publicly available at this link) and it consists of case studies showing the successes and obstacles of the Open Data policies in the early 2010s. As the title hints at, providing accessible and free datasets is a move towards a more transparent government, but not only. The book talks about how this data spurred innovation, improved government efficiency and encouraged new civic habits, such as more citizen participation. Data professionals, including engineers and data scientists, also formed their own solutions around these new datasets, building better models and apps. For some examples of these new civic tech ecosystems, check out the Building a Smarter Chicago chapter and the analytics work that arose from websites like Data SF or Chicago Data Portal! Another personal favorite chapter: The Data-Driven City, on how collecting 311 calls allows NYC to model emergency services and resource allocation. Since the 2010s, hundreds of countries have passed their own open data laws. The Global Data Barometer (license: Creative Commons Attribution 4.0) measures the state of open data in 109 of them, answering \"To what extent are countries managing data for the public good?\" The study uses a mix of quantitative indicators and qualitative descriptions to provide a clear picture of how the world is doing in terms of open data. This is an incredibly thorough work so I think it’s interesting to spend some time exploring part of it with this story. Quick note: for the story, I’m using Observable notebooks (JS-based) to do the visualizations and Jupyter for the data wrangling; links to both at the very end. Let’s get started! The overall countries’ index ranges from 0 (non-existent) to 100 (exhibiting best practices). The chart above shows quite a bit of spread. The highest scoring country (70) is the United States and the lowest scoring (10) is Turkmenistan, whereas the mean score is 38.51. This index is generated by examining each country’s open data practices across 4 fronts or \"pillars\": governance, capabilities, availability and use and impact. For each of these pillars, the countries provide information on existence of a particular element (e.g. a data protection framework), elements (quality related features and open data features), and extent (the limitations and applicability of a specific framework across a country). The study also tracks secondary indictors for each pillar, each of which was scored out of 100. Therefore, an overall index score of 100 would represent a type of \"normative ideal\" across all these primary and secondary indicators. Let’s focus on the countries whose index is around average (35 to 45). There’s 20 of them, including Albania and Kosovo, as well as countries from all over the world: Jamaica, Kazakhstan, Paraguay, Philippines, Peru, Thailand and South Africa among others. Despite overall index similarity, when looking into their mean scores across modules, their performance is not nearly as consistent. The Barometer compiles thematic or module scores in addition to pillars, and the 7 modules look into open data practices in the following areas: Health and COVID-19, Land, Public Finance, Procurement, Climate Action, Political Integrity and Company Information. Here’s a view at the Climate Action, Political Integrity and Procurement modules for these 20 countries: Many countries have inconsistencies: Making progress on all of these modules leads to a more transparent and efficient government. For instance, having better procurement data allows citizens to analyze where and how money gets spent in all stages of a project or push for more equitable allocations. Similarly, having transparent lobbying data and asset declarations allows for more accountability for political integrity. Climate information allows the public to stay informed on aspects such as biodiversity, emissions or vulnerabilities. Governance is one of major pillars of the dataset. The questions it answers involve assessing the state of policies and frameworks guiding how data is protected and managed. The research on governance tracks a couple of indicators: \"Open data policy\" being one of them, and \"data protection\", \"data sharing frameworks\", \"data management\" some of the others. Here’s how countries score on these governance indicators: A lot of countries are performing moderately well on metrics like Data Protection, Open Data Policy or Data Management. Around 92% of the surveyed policies have a common definition of open data, 72% of countries have some type of data management framework in place, and 90% of them offer data protection regulations (report here). Many of the countries offer partial or complete regulations on issues of data consent, rights of redress and access or correction. While forms of data governance frameworks exist, Global Open Data shows that countries still have severe limitations. For instance, only 24% of frameworks address issues of location information and only 31% address algorithmic decision making (also on the report). Most of these countries are in Europe and North America: these two regions comprise 17 out of the 23 countries answering \"Yes\" to \"Frameworks explicitly cover the protection of location-related data\", and 20 of the 31 whose \"framework addresses algorithmic decision making\". The last two indicators, Accessibility and Language coverage, evaluate the regulations for ensuring the data is accessible to people with disabilities and available in each country’s official language(s). The later is particularly important for countries with many such languages, but nevertheless also fractured: 13 of the 109 countries achieve a score of 100 on this category (possessing a framework with the force of law). The COVID-19 pandemic tested many of these data systems, especially those at the local level. The study measures data capacities not only on the availability of vaccination data, but also on real-time healthcare data (e.g. ICU beds) and vital statistics. Vital statistics include birth and mortality information, historical spans and how locally available this data is within a country. Here’s a heat map of how countries are doing: Vaccination data was largely available in most of the countries in the dataset, however not without its issues. Only about 50% of available datasets were broken down by age, and around 33% were disaggregated by sex (report statistics). Furthermore, real-time healthcare data was only available in around 50% of countries and even fewer published information on the number of available beds. For some of these countries, this type of data was only made available for the first time during the pandemic, which allows for countries to start building on it for better healthcare reporting in the future. And how easy was it for users to explore the data? A deeper look reveals that 61 out of the 109 countries didn’t offer official open tools that allowed citizens to access Vital Statistics data. Similarly, 63 out of the 109 didn’t provide official and accessible COVID-19 vaccination data. 57 countries also did not offer machine-readable data (such as CSV), which is important for easy distribution and reproduction. A major takeaway of the report was the relatively lacking open data environments at global level (recall the average overall index: 38/100). As we already saw in this story, having fully formed laws around open data is simply essential. In addition to the research being done by Global Data Barometer, there’s other repos that track new legislation around open data issues around the world. The State of Open Data by The Gov Lab is one of them. So, take a look at it for laws by sector or type of collaboration! Broadly, though, the Global Data Barometer report illuminated the practical challenges in adopting these laws, including data gaps or inaccessible or unavailable data. One striking example we looked at was the publication and management of health data, especially in emergency situations such as COVID-19 where having timely information is crucial. This example, however, also showed how new challenges can also spur data to promote transparency and allow citizens to stay informed which is very promising! Overall, the report points at very specific areas for each country to focus on, offering context-specific strategies for better data collection while still providing a big picture view of the current challenges with open data. Here are the notebooks (Jupyter and Observable), Thanks for reading! Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. Step-by-step code guide to building a Convolutional Neural Network Here’s how to use Autoencoders to detect signals with anomalies in a few lines of… Solving the resource constrained project scheduling problem (RCPSP) with D-Wave’s hybrid constrained quadratic model (CQM) An illustrated guide on essential machine learning concepts Derivation and practical examples of this powerful concept Columns on TDS are carefully curated collections of posts on a particular idea or category… With demos, our new solution, and a video Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/deabardhoshi/",
    "title": "Dea Bardhoshi, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Efficient geospatial manipulations for OSM map data Optimizing queries, improving runtimes and the geospatial data science applications To what extent are countries adopting data policies and systems for the public good? Using spatial data science to model populations + analysing educational equity in Tirana. Quantifying urban resilience in Tirana: power law distributions, self-organizing cities and sustainable population dynamics Analyzing street names according to historical periods and occupations! Data visualizations of street names in Tirana, Albania. I have recently been interested in making highly customizable visualizations. Here is one example of… Using unsupervised learning to model the optimal urban places for bike-share services Using data visualization principles to fix misleading and uninformative charts Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/charting-the-final-frontier-completing-the-30daymapchallenge-odyssey-bb68d4ab1285/",
    "title": "Charting the Final Frontier: Completing the #30DayMapChallenge Odyssey | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable Plot As the #30DayMapChallenge draws to a close, I am struck by the power of community and collaboration. Each day brought new themes, each theme brought new insights, and along the way, a tapestry of geo-visual stories emerged. The challenge was more than a test of skill; it was a celebration of shared knowledge and collective creativity. For me, the #30DayMapChallenge was more than just a commitment to craft a map a day; it was an exploration into the heart of data storytelling. Through this challenge, I have stitched together the fragmented stories of migration, intricate networks of transportation, and the pulse of urban life with every map I designed, and I am excited to share these with you. Along the way, I learned so much about geo-visualizations. Continuing the practice from the #30DayChartChallenge, I harnessed the simplicity of Observable Plot to breathe life into data. In my previous article, I shared my favorite visualizations from the first half of this challenge. In this concluding article, I will unveil some of the remaining collection of my geo-visual creations, each a unique blend of data, design, and discovery. You can find all of the visualizations along with data source and code in my #30DayMapChallenge collection. All images in this article were created by the author. Leveraging the detailed sighting records from ala.org.au, I sought to showcase Australia Numbat sightings through an intricate depiction of the habitats of one of Australia’s unique marsupials. In creating this map, the challenge lay in representing the spatial data in a manner that was both visually appealing and scientifically accurate. To achieve this, I superimposed the recorded sightings onto an outline of Australia, with bright points indicating the presence of numbats. The result is an informative and compelling illustration of the numbat’s now sparse distribution, allowing for quick visual assessment of population density and geographical spread. The background image of a numbat sourced from wikipedia.org was superimposed beautifully with the map of Australia to make the story even more appealing, powerful and connected. The comprehensive datasets from databank.worldbank.org provided a global perspective on migration, allowing me to thread together the routes that span continents and cultures. In this image, I captured the \"Flow\" theme with the fluidity and dynamics of global migration patterns from the United States to the top 10 countries in the year 2000. It uses arcing lines to represent the movement of people across the planet, with each curve originating from the US and reaching out to various countries around the world. This visualization not only reflects the physical movement from one nation to another but also encapsulates the transfer of cultures, ideas, and connections that are inherent to the migration process. For this theme I wanted to create stark visualization of traffic collisions in Seattle with data derived from a capstone project for an IBM course. I used a raster graphics approach to effectively plot each incident within the city’s confines, which inherently involves breaking down the image into a grid of pixels or points of color. Each collision event is represented as a pixelated dot, which emphasizes the granularity of the data. This method allows for the representation of a high level of detail and the creation of a density map that can reveal patterns not immediately apparent in other forms of data visualization. In the image series above, I explored the theme of \"Raster\" through a fascinating lens, displaying various interpolation methods available through Observable Plot, applied to Seattle traffic collision data. Each panel represents a distinct approach – default, nearest, barycentric, and random-walk – creating a spectrum of visuals from a singular dataset, each affecting the spatial distribution and visual texture of the data. The ‘default’ maintains the raw granularity of the data, while ‘nearest’ introduces a more segmented, almost cubist distortion. ‘Barycentric’ offers a prism-like refraction of the data points, and ‘random-walk’ creates a diffused, almost impressionistic, effect. It definitely felt like I created accidental art. In this image I wanted to present a sleek and minimalist portrayal of diamond production across the globe, symbolized by luminous points on a dark world map, with data from theglobaleconomy.com. To create a 3D effect, I plotted bright spots to mark significant locations of diamond extraction, shining against the stark black background of the world map, encapsulating the precious nature of diamonds themselves. For an added luminescent effect for these spots, I underlaid them with a density visualization. The rotation of the globe further enhances the 3D effect by the appearance and disappearance of these diamond production spots. I wanted to show a monochromatic interpretation of migration trends in Washington State from 2016 to 2020, using data from the United States Census Bureau. This choice of black and white not only conforms to the aesthetic theme but also serves to emphasize the dichotomy between the influx and outflow of people – white for net positive migration and black for net negative. The bold, contrasting spikes across the map are a graphical representation of the state’s demographic ebb and flow. Their varying lengths and color indicate the scale and direction of migration, with the two-tone scheme providing a clear visual differentiation that enhances comprehension. By creating a shadow for these spikes and the boundary of the States, I wanted to give it a 3D effect in addition to the monochromatic theme. The image is a striking visual tribute to \"My favorite…\" theme, showcasing the intricate and extensive railway network of Switzerland, which is renowned as the densest in Europe. I love how amazingly powerful the European rail network is which is certainly my favorite way to travel. Another favorite call out in this visualization for me is the type – Raster. Using a raster plot, this map truly makes the marvel of engineering and organization that the Swiss rail network represents shine through like a starry night. I learned how to make this during the #30DayMapChallenge, and fell in love with how powerful this type of plot can be to represent an intricate system of points. These maps have been more than a daily exercise; they have been a lens through which the complexity and beauty of our world are magnified. The second half of the challenge was as riveting as the first, each map a deeper foray into the confluence of data and design, story and space. From the endangered species to the veins of international migration, and from the movement of people to the tracks that guide them, the #30DayMapChallenge has been a profound exploration into how we visualize and interpret the spaces we inhabit. To those who have followed along, your curiosity and engagement have been the wind in the sails of this endeavor. For those who may tread this path in the future: let each theme challenge you, the community uplift you, and may every map you create be a landmark in your own journey of discovery. All the visualizations, complete with their underlying code and data, are available in my Observable collection for those eager to embark on their own mapping adventures. If you’d like, find me on Linkedin. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. To what extent are countries adopting data policies and systems for the public good? From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable… Tutorial on how to use WebSockets to build real-time APIs in Go A tutorial stripping down low-level code that you can edit and run in your browser… Image from Unsplash AWS has a variety of services in ML/AI, Robotics, and IoT that… Lack of experience, rushed deadlines, or missed code reviews are just a few factors that… Photo by Mark Harpur on Unsplash There are adequate choices on the tools and workflows… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/category/javascript/",
    "title": "JavaScript | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Designing asynchronous pipelines for efficient data processing A step-by-step guide to training a BlazeFace model, from the Python training pipeline to the… Part of a series on how modern AI and other technologies could assist more efficient… From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable… From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable… And why it feels like I’m switching to the Dark Side Things you should keep in mind before participating in your first #30DayChartChallenge and why you… To what extent are countries adopting data policies and systems for the public good? Enhance code quality with functions including Debounce, Once, and Memoize, all the way to Pipe,… Use the SOLID principles to design readable, scalable, and maintainable software Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/author/menghani-deepsha/",
    "title": "Deepsha Menghani, Author at Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. A detailed walkthrough on transforming simple chatbots into sophisticated AI assistants with long-term memory and… Step-by-Step Integration of AI Chatbots into Shiny for Python Applications: From API Setup to User… Step by step guide to EDA, feature engineering, cross validation and model comparison with tidymodels,… Step-by-step guide to implementing cross-validation, feature engineering, and model evaluation with XGBoost in Tidymodels Exploring the Differences and Use Cases of Shiny Core and Shiny Express for Python Guide to using the standardized syntax within Tidymodels to build and compare various models and… Step-by-step guide to creating “Who is the Goodest Doggy” Application with Shiny for Python, from… In-depth guide to learning how to build Shiny applications using modules. From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable… From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/navigating-the-cartographic-challenge-halfway-through-the-30daymapchallenge-ee96e02aaf95/",
    "title": "Navigating the Cartographic Challenge: Halfway Through the #30DayMapChallenge | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. From Haunted Locales to Political Patterns: A Mapping Journey Through Data and Design with Observable Plot Every map tells a story, and every story brings us closer to understanding our world. Visualizing the vastness of the world is no small feat. But to get a step closer to it, this November, I am participating in the #30DayMapChallenge. I have been enamored by geo visualizations from afar and dabbled a little myself, but I wanted to go deeper and learn how to build beautiful maps that tell stories. Hence, I participated in the #30DayMapChallenge. The #30DayMapChallenge is a community-driven event that unfolds each November. The idea is to create maps around different daily themes using the hashtag #30DayMapChallenge. There are no restrictions on the tools, technologies, or data used behind the maps. This challenge has provided the perfect opportunity for me to dive into the world of mapping (pun intended). We’re halfway through November, and my favorite part of this challenge has been learning from and being inspired by the community while challenging my creativity each day. In this article, I will share some of my favorite geo visualizations thus far that I’ve conjured up using Observable Plot, a JavaScript library for exploratory data visualization. You can find all of the visualizations along with data source and code in my #30DayMapChallenge collection. I used Observable Plot because I fell in love with the simplicity and ease of using it during the #30DayChartChallenge I participated in earlier this year. All images in this article were created by the author. October is over, but the hauntings are not. For this theme, I chose to plot haunted places in the United States. I sourced the data from the data.world website, one of my favorite sources for dataset discovery. This dataset includes the latitude and longitude of every reported haunted location, making it perfect for plotting as \"points.\" I used the Albers projection to plot the map of the USA and gave it a black background for a striking contrast effect. The main goal for this plot was to not only draw points at each location but to create a sort of glowing effect to align with my \"haunting\" theme. To achieve this, I layered each reported location with three points stacked on top of each other. First, a large \"red\" point with minimal opacity, then an \"orange\" point with a smaller radius and higher opacity, and finally, a \"white\" point with the smallest radius and highest opacity. These layered points created the effect of a white point with a fiery aura and a glowing effect. While I don’t think this exact combination would create a similar effect on every plot, the closeness of all points in this plot created the perfect effect I was looking to achieve. This plot definitely added many East Coast locations to my list of future travels, perhaps in this life or maybe as a ghost. My favorite way to navigate this country is by the Amtrak system, so for the theme of navigation, I decided to plot the Amtrak stations for the state with the most stations, California, with data from data.world. In visualizing California’s Amtrak station network, I aimed to highlight the connectivity and reach of rail travel within the Golden State. I chose a Mercator projection to accurately represent the network at the state level, with a color gradient background transitioning from the Pacific to the Southwest. Each station is marked by a ‘point,’ with major hubs distinguished by larger, more prominent markers. To further convey the spread and reach of the rail system, I overlaid the points with a Voronoi network diagram. This map serves not only as a tool for potential travelers but also as a testament to the infrastructure that facilitates movement across this vast state. Tackling Africa’s theme, I zoomed in on Uganda’s reported water sources, with data from the Water Point Data Exchange via TidyTuesday. The data provided a comprehensive list of water points, which I plotted using mercator projection to give an accurate representation of their distribution. The map’s dark background allows the water source points to stand out, drawing attention to regions with higher water source density. I plotted these locations as a Raster map to add a layer of texture. This map doesn’t just show locations; it tells a story of access, where the clustering of points can indicate areas of potential water stress or abundance. The US House Election Results map is a compact visualization of over five decades of political tides across the United States. I sourced the data from the MIT Election Data and Science Lab via TidyTuesday, providing detailed voting statistics by state. The challenge was to present this extensive dataset in a way that was both informative and engaging. I opted for a grid layout, with each state’s voting trends represented by mini bar charts that allow for immediate visual comparison across years and states. The color-coding is straightforward – blue for Democrats, red for Republicans, and grey for others – to provide clear insights into the political landscape at a glance. This map functions as a visual history of American politics, showing shifts and patterns that might not be apparent from numbers alone. For this theme, I found a powerful dataset sourced from movebank.org via data.world about Turkey vulture migration in South America. For this data visualization, I aimed to capture the dynamic nature of avian movement. The data included timestamped locations of tagged vultures, which allowed me to plot their journey over time. I chose a dark background to symbolize the vast area covered, with migration paths highlighted by a color gradient that easily allows the eyes to track the pattern. This map isn’t static; it’s designed to represent the ebb and flow of migration, with larger, more concentrated points possibly indicating key resting areas. It offers a glimpse into the patterns of nature and serves as a tool for conservationists tracking the health of these migratory routes. This is certainly one of my favorite animated visualizations I have created because of how easily it facilitates the observation of a clear pattern of migration. There is so much more that can be done with this data, and I feel I have barely scratched the surface. The choropleth map of Political Rights in Africa for 2020 is a sobering depiction of the continent’s diverse political landscape. Using data sourced from Freedom House via TidyTuesday, I aimed to illustrate the varying levels of political rights across the continent. The map uses shades of green to represent the gradations in political rights, with darker hues indicating greater freedom. This color choice is symbolic, with green being associated with ‘proceed’ in many cultures, suggesting areas where political rights are advancing. Beyond its aesthetic value, this map serves as an analytical tool, presenting a snapshot of a complex and evolving political climate. As we reach the midpoint of the #30daymapchallenge, it’s the perfect moment to pause and reflect on the journey thus far. Crafting maps each day, rather than charts, has been a different kind of exploration – one that merges the realms of data and geography, story and symbol. As I continue the second half of the challenge, I’m excited to delve deeper into the art of mapping, armed with the lessons learned so far. To future challengers: let each theme inspire you, learn from the community, and treat each map as a step in your data visualization journey. Once the full challenge is completed, I look forward to sharing an even richer collection of visualizations and the insights they have granted me. Until then, I encourage readers to dive into these datasets, to create and share their own interpretations, and to join in this global challenge of mapping. You can find the code and data to reproduce all visualizations in this article in my Observable collection. If you’d like, find me on Linkedin. Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. To what extent are countries adopting data policies and systems for the public good? From Urban Collisions to Global Connections: Unveiling the Full Spectrum of Geo-Visual Storytelling with Observable… Tutorial on how to use WebSockets to build real-time APIs in Go A tutorial stripping down low-level code that you can edit and run in your browser… Image from Unsplash AWS has a variety of services in ML/AI, Robotics, and IoT that… Lack of experience, rushed deadlines, or missed code reviews are just a few factors that… Photo by Mark Harpur on Unsplash There are adequate choices on the tools and workflows… Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://bsky.app/profile/towardsdatascience.com",
    "title": "@towardsdatascience.com on Bluesky",
    "content": "This is a heavily interactive web application, and JavaScript is required. Simple HTML interfaces are possible, but that is not what this is.\n    Learn more about Bluesky at bsky.social and atproto.com.\n    \nProfile\nTowards Data Science\ntowardsdatascience.com\ndid:plc:zcumilxztfgl3var46mgznnt\nThe world's leading publication for data science and artificial intelligence professionals.\n\nWebsite 🌐 towardsdatascience.com\nSubmit an Article ✍️ https://contributor.insightmediagroup.io\nSubscribe to our Newsletter 📩 https://bit.ly/TDS-Newsletter Learn more about Bluesky at bsky.social and atproto.com.\n    \nProfile\nTowards Data Science\ntowardsdatascience.com\ndid:plc:zcumilxztfgl3var46mgznnt\nThe world's leading publication for data science and artificial intelligence professionals.\n\nWebsite 🌐 towardsdatascience.com\nSubmit an Article ✍️ https://contributor.insightmediagroup.io\nSubscribe to our Newsletter 📩 https://bit.ly/TDS-Newsletter Towards Data Science towardsdatascience.com did:plc:zcumilxztfgl3var46mgznnt The world's leading publication for data science and artificial intelligence professionals.\n\nWebsite 🌐 towardsdatascience.com\nSubmit an Article ✍️ https://contributor.insightmediagroup.io\nSubscribe to our Newsletter 📩 https://bit.ly/TDS-Newsletter"
  },
  {
    "url": "https://towardsdatascience.com/about-towards-data-science-d691af11cc2f/",
    "title": "About Towards Data Science | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Our goal is to support the growth of data science and machine learning professionals Towards Data Science started in 2016 as a community-powered hub where data science and machine learning practitioners can share their knowledge and ideas with their peers – regardless of their location or background. This fundamental goal remains the same today. Over the years, we’ve grown into a publication with hundreds of active authors, a team of editors that ensure the quality of the articles we publish, and millions of readers and followers across our main site, newsletters, and social channels. We’re thrilled to be a leading hub for learning about data science, ML, AI, and adjacent topics, especially as developments in these fields affect an increasing number of people, communities, and societies around the world. We’re equally proud to be a welcoming and inclusive community, where authors and readers from all over the world, representing a wide range of opinions and experience levels, come together with a shared sense of mutual respect and a focus on professional and intellectual growth. In 2024, Insight Media Group acquired the Towards Data Science publication. The following year we launched our own self-hosted website and contributor platform, enabling us to host and pay contributors. We’ve evolved in many ways since our early days, and we’re sure that we’ll continue to grow alongside our community. What will never change is our mission to share the best writing we can find on the topics we cover. Thank you for joining us on this journey. For those of you who’d like to become more actively involved with our publication, we’re always happy to consider work from new authors who have insight and expertise to share around our core focus areas: data science, machine learning, AI, and related programming topics. You’ll find all the details and guidelines about submitting your work on the Write for Towards Data Science page. If you have any questions, feel free to reach out at [email protected]. If you’re interested in advertising opportunities, learn more here. For general questions and inquiries, you can contact us at [email protected]. Ludovic Benistant Publisher. Linkedin. [email protected] Ben Huberman Director of Content Operations. Linkedin. [email protected] Anne Bonner Editor. Linkedin. [email protected] Written By Share This Article Towards Data Science is a community publication. Submit your insights to reach our global audience and earn through the TDS Author Payment Program. Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://contact.towardsdatascience.com/advertise-with-towards-data-science",
    "title": "Advertise with Towards Data Science",
    "content": "The best way to reach the data science, AI, and ML community Since 2016, TDS has been a community-powered hub where data science practitioners can share knowledge and ideas with their peers. Over the years, we’ve grown into a trusted publication with a thriving ecosystem of experts, a team of editors that ensure the quality of the content we publish, and millions of readers and followers.Reach decision-makers, practitioners, and learners in AI, machine learning, data engineering and analytics with strategic advertising that places your brand at the center of meaningful conversations. Our tailored marketing solutions ensure your message resonates with the right audience—driving engagement, influence, and results through original articles, ebooks, native advertising, display media, newsletter placements, social media amplification and so much more. Don’t miss the opportunity to connect with today's leaders and the next generation of data experts! Copyright © 2025 Insight Media Group, LLC. All Rights Reserved."
  },
  {
    "url": "https://towardsdatascience.com/privacy-policy/",
    "title": "Privacy Policy | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Insight Media Group Privacy Policy Effective Date: February 3, 2025 This Privacy Policy describes how we, Insight Media Group, LLC (referred to as “we” “our” or “us”), collect, use, and share your personal information. This Privacy Policy applies to any publication we offer as well as to information that we collect when you visit our websites (which include, but are not limited to: https://roadmap.sh/, https://towardsdatascience.com/, and www.thenewstack.io), interact with the features of our websites (including downloading eBooks, listening to content, submit contributions, sign up to attend events, fill out surveys or sign up for our newsletter), or when you interact with us through our email, advertising, or social media campaigns (collectively, our “Services”). By accessing or using our Services, you agree to this Privacy Policy. This Privacy Policy may change from time to time, please see Changes to this Privacy Policy below for more information. This Privacy Policy does not apply to employees or job applicants. Our Services are not intended for children under the age of 16. We do not knowingly collect personal information from children under 16.  If we learn that we have collected personal information from individuals under the age of 16, we will delete that information. Information We Collect We may collect the following types of personal information in the following ways: We collect the following categories of personal information and share personal information with the following categories of third parties: *Third parties to whom we sell or share your information, which is described further in the Right to Opt-Out of the Sale or Sharing of Personal Information to Third Parties subsection further below. Cookies & Automatic Tracking Technologies Like many websites and online Services, we use cookies, pixels, and other automatic tracking technologies to collect information about your use of our Services. Cookies are alphanumeric identifiers in the form of data files that are inserted and stored by your web browser on your computer’s hard drive. Through cookies or similar tracking technologies, we collect usage information like your interactions with our Services. We may associate this information with your IP address or other ID (e.g., device ID). Through automated tracking technology, we collect browser type and setting, time/date, language preferences, and device information, crash data, usage information, transaction information, links clicked, pages or content viewed, emails opened, and other similar kinds of information. We use this information to identify you and to analyze how you use our websites, to improve your experience, to remember your settings, to evaluate the performance of content, advertisements, or marketing campaigns, to tailor content, advertising or marketing to you, to evaluate or analyze trends, to help our advertising or affiliate program partners provide content or advertising that is relevant to you, to administer contests, sweepstakes, or promotions, for operational or security purposes such as to administer and deliver the websites or Services, or to improve our websites or Services. You can set your browser to refuse all or some browser cookies, or to alert you when cookies are being set. Social Media Through our Services, we may provide you with access to social media pages via icons on our websites, or you may interact with our social media pages. We also may use automatic tracking technology made available by third party social media platforms on our website. When you interact with us through social media, we receive the personal information that you share with us. If you click on a widget or social media feature, like the Twitter “tweet” button or Facebook “like” button, the third-party provider receives certain identifiers (such as device ID or IP address), internet or network activity, or other information you provide to us. They may receive this information from their own automatic tracking technologies or from our automatic tracking technologies. We use information collected from social media platform providers to allow you to use the features of the social media platform (e.g., to share content with your network), to track your engagement with our Site, our social media pages, or content (such as “likes”, “shares” etc.), to understand overall engagement, to communicate with you, to analyze trends and usage patterns, or to help us improve our website and the Services. We also use third-party social media tracking technologies, such as the LinkedIn and Meta pixel. These tracking technologies share information with the applicable social media platform provider, and they may use this information, and combine it with other information they collect about you (including to create profiles). As with other third-party websites, the information that you share with the social media platforms will be governed by the privacy policies and terms of service of the providers of the social media platform and not by the policies and procedures we describe here. How We Use the Information We Collect We use the personal information that we collect or receive: How We Share Your Personal Information We may share the personal information that we collect via the Services as follows: European Data Privacy Rights Data Subject Rights If you are a resident of the European Economic Area (“EEA”), the United Kingdom (“UK”), or Switzerland, you are entitled to certain rights. These rights include: To submit a request to exercise your rights, please contact us at [email protected]. If you submit a request related to the Services, we will direct you to submit a request to exercise your rights directly with our customer. We may have a reason under the law why we do not have to comply with your request or may comply with it in a more limited way than you anticipated. If we do, we will explain that to you in our response. We process personal information, or “Personal Data” as that term is defined in the EU General Data Protection Regulation, on the following legal bases: (1) with your consent; (2) as necessary to perform our agreement to provide Services; and (3) as necessary for our legitimate interests where those interests do not override your fundamental rights and freedom related to data privacy. We may also process personal information as necessary to comply with legal obligations. Users that reside in the EEA, UK, or Switzerland have the right to lodge a complaint about our data collection and processing actions with the supervisory authority concerned. Contact details for data protection authorities are available here. Cross-border Transfer of Data If you use our Services outside of the United States, you understand that we may collect, process, and store your information in the United States and other countries. The laws in the U.S. regarding information may be different from the laws of your state or country. Any such transfers will comply with safeguards as required by relevant law. To facilitate data transfers from the EU to other countries, we make use of the European Commission-approved standard contractual data protection clauses, the Data Privacy Framework, or other appropriate legal mechanisms to safeguard the transfer. Our standard contractual data protection clauses are available upon request via the email listed in the Contact Us section below. U.S. State Data Privacy Rights If you are a resident of a state that has passed data protection legislation, including California, Colorado, Connecticut, Delaware, Indiana, Montana, New Hampshire New Jersey, Oregon, Tennessee, Texas, Utah, Virginia, Minnesota or any other state that has passed similar legislation, you may have additional rights regarding our use of your personal information. The rights outlined in this section do not apply to information exempted under applicable state privacy law. Further, the rights described in this Section are not absolute, are subject to exceptions and limitations, and may not be afforded to residents of all states. In certain cases, we may decline requests to exercise these rights where permitted by law. Persons with disabilities may obtain this notice in alternative format upon request by contacting us at [email protected]. U.S. Privacy Rights To the extent you are provided additional privacy rights in the state you reside, you have the following rights with respect to the information that we collect (in each case, subject to applicable law): Right to Opt-Out of the Sale or Sharing of Personal Information to Third Parties You have the right to opt-out of our sale of your personal information or our sharing your personal information for behavioral advertising purposes. We use third-party analytics tools on our websites for cross-contextual behavioral tracking, please refer to the Information We Collect section above for more information. To exercise your right to opt-out of the sale of your personal information, please refer to our “Controlling Cookie Preferences” section.  If you have additional questions, please contact us using the information provided in the Contact Us section below. Exercising Your State Privacy Rights If you reside in a state that provides specific data privacy rights, you can exercise those rights by contacting us via phone or email as indicated in the Contact Us section below. Your rights may only be exercised by you or by your designated agent. You may submit a request to know twice within a 12-month period unless applicable data privacy law grants you additional rights. Your request must include enough information to allow us to reasonably verify that you are the person about whom we collected personal information or an authorized representative, which may include: (1) verifying your account information if you have an account with us; or (2) requesting two forms of identification that are reliable for verification purposes, unless the request includes sensitive information and, in which case, we may require additional verification. The information included in your request must allow us to properly understand, evaluate, and respond to it. We cannot respond to your request if we cannot verify your identity or authority to make the request and confirm that the personal information relates to you. If we cannot verify your identity or authority, we will not fulfill your request. We will only use personal information provided in the request to verify the requestor’s identity or authority to make it. You may submit a request through a designated agent. You must instruct that agent that they will need to state that they are acting on your behalf when making the request, have reasonably necessary documentation, and be prepared to provide the necessary personal information to properly verify your request. We will acknowledge receipt of your request. We will provide a substantive response within 45 calendar days or inform you of the reason and extension period (up to a total of 90 days) in writing. You may appeal our decision with respect to a request you have submitted by contacting us using the Contact Us section below. California Shine the Light Disclosure Under California Civil Code sections 1798.83- 1798.84, California residents are entitled to ask for a notice identifying the categories of personal customer data which we share with our affiliates and/or third parties for their own direct marketing purposes and providing contact information for such affiliates and/or third parties. If you are a California resident and would like a copy of this notice, please submit a written request to the address in the Contact Us section below. Nevada Resident Privacy Rights If you are a resident of Nevada, you have the right to opt-out of the sale of certain information to third parties who intend to license or sell that information. If we sell your information, you can exercise this right by contacting us by submitting a communication as directed in the Contact Us section below. If the request is via email, please include the subject line “Nevada Do Not Sell Request” and providing us with your name and the email address. Data Retention We retain your personal information for as long as we have an ongoing legitimate business need to do so (for example, to provide you with a service you have requested or to comply with applicable legal, tax, or accounting requirements). The criteria used to determine appropriate retention period for personal information include: Security We take security of your information seriously and take precautions, including technical, administrative, and physical measures, to safeguard your information collected through the Services. However, no method of online data transfer, processing or storage is 100% secure, and we do not guarantee the security of your personal information. Links The Services may contain links to third party sites and Services. We do not endorse and are not responsible for the privacy practices or the content of these third-party sites or Services. We exercise no control over how your information is stored, maintained, or displayed by third parties or on third-party sites. Your Choices We strive to provide you with choices regarding the personal information you provide to us. We have created mechanisms to provide you with the following control over your information: Changes to this Privacy Policy We may change this Privacy Policy at any time. If we change this Privacy Policy, we will notify you of the changes by posting them on this Privacy Policy under the Change Log section, by providing a pop-up notification, or by providing you with notice of the modification by email. We will indicate when such changes are effective by updating the effective date at the top of this Privacy Policy. By continuing to access or use the Services after we have posted a modification or have provided you with notice of a modification, you indicate your agreement to the modified Privacy Policy. If the modified Privacy Policy is not acceptable to you, please do not use the Services. Contact Us To contact us you may email us at [email protected] . You may also submit a request to the following address or call us at: For questions about our privacy practices, contact us via: Mail: Insight Media Group, LLC 548 Market St, PMB 42061 San Francisco, CA 94104 Email: [email protected] Phone Number: (844) 503-3213 Change Log Privacy Policy implemented as of February 3, 2025 Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  },
  {
    "url": "https://towardsdatascience.com/website-terms-of-use/",
    "title": "Website Terms of Use | Towards Data Science",
    "content": "Publish AI, ML & data-science insights to a global community of data professionals. Last Modified: February 7, 2025 Acceptance of the Terms of Use These terms of use are entered into by and between you and Insight Media Group, LLC (“TDS,” “we,” or “us” or “our”). The following terms and conditions, together with any documents they expressly incorporate by reference (collectively, “Terms of Use“), govern your access to and use of https://towardsdatascience.com, including any content, functionality, and services offered on or through https://towardsdatascience.com (the “Website“), whether as a guest or a registered user. Please read these Terms of Use carefully before you start to use the Website. By using the Website or by clicking to accept or agree to the Terms of Use when this option is made available to you, you accept and agree to be bound and abide by these Terms of Use  and our Privacy Policy, found at https://towardsdatascience.com/privacy-policy/, and incorporated herein by reference. In the event of a conflict between these Terms of Use and the Privacy Policy, the Privacy Policy shall govern. If you do not want to agree to these Terms of Use or the Privacy Policy, you must not access or use the Website. This Website is offered and available to users who are 13 years of age or older. If you are under the age of 13, you may not access or use the Website. Changes to the Terms of Use TDS may revise and update these Terms of Use from time to time in our sole discretion. All changes are effective immediately when we post them and apply to all access to and use of this Website thereafter. Your continued use of the Website following the posting of revised Terms of Use means that you accept and agree to the changes. You are expected to check this page from time to time so you are aware of any changes, as they are binding on you. Accessing the Website and Account Security TDS reserves the right to withdraw or amend the Website, and any service or material we provide on the Website, in our sole discretion without notice. TDS will not be liable, if for any reason, all or any part of this Website is unavailable at any time or for any period. From time to time, TDS may restrict user access, including registered user access, to some parts of this Website or the entire Website. You are responsible for both: To access this Website or some of the resources it offers, you may be asked to provide certain registration details or other information. It is a condition of your use of this Website that all the information you provide on this Website is correct, current, and complete. You agree that all information you provide to register with this Website or otherwise, including, but not limited to, through the use of any interactive features on the Website, is governed by our Privacy Policy at https://towardsdatascience.com/privacy-policy/, and you consent to all actions we take with respect to your information consistent with our Privacy Policy. If you choose, or are provided with, a username, password, or any other piece of information as part of our security procedures, you must treat such information as confidential, and you must not disclose it to any other person or entity. You also acknowledge that your account is personal to you and you agree not to provide any other person with access to this Website or portions of it using your username, password, or other security information. You agree to notify TDS immediately of any unauthorized access to or use of your username or password or any other breach of security. You also agree to ensure that you exit from your account at the end of each session. You should use particular caution when accessing your account from a public or shared computer so that others are not able to view or record your password or other personal information. TDS has the right to disable any username, password, or other identifier, whether chosen by you or provided by us, at any time in our sole discretion for any or no reason, including if, in our opinion, you have violated any provision of these Terms of Use. Intellectual Property Rights The Website, the articles, and its entire contents, features, and functionality (including but not limited to all information, software, text, displays, images, video, and audio, and the design, selection, and arrangement thereof) are owned by TDS, its licensors, or other providers of such material and are protected by United States and international copyright, trademark, patent, trade secret, and other intellectual property or proprietary rights laws. These Terms of Use permit you to use the Website for your personal, non-commercial use only. You must not reproduce, distribute, modify, create derivative works of, publicly display, publicly perform, republish, download, store, or transmit any of the material on this Website. If you print, copy, modify, download, or otherwise use or provide any other person with access to any part of this Website in breach of these Terms of Use, your right to use the Website will immediately be revoked and you must, at TDS’s option, return or destroy any copies of the materials you have made. No right, title, or interest in or to the Website or any content on the Website is transferred to you, and all rights not expressly granted are reserved by TDS. Any use of the Website not expressly permitted by these Terms of Use is a breach of these Terms of Use and may violate copyright, trademark, and other laws. Trademarks The Company name, the terms Towards Data Science, and all related names, logos, product and service names, designs, and slogans are trademarks of the Insight Media Group, LLC, TDS or its affiliates or licensors. You must not use such marks without the prior written permission of the TDS. All other names, logos, product and service names, designs, and slogans on this Website are the trademarks of their respective owners. Prohibited Uses You may use this Website only for lawful purposes and in accordance with these Terms of Use. You agree not to use this Website: Additionally, you agree not to: Comments and Messages This Website may allow you to leave comments or send message other visitors or the public (collectively, “Interactive Services“) that allow users to post, submit, publish, display, or transmit to other users or other persons (collectively, “Posts“) on or through this Website (excluding content that is submitted to TDS which is governed by the TDS Author Terms). All Posts must comply with these Terms of Use. Any Post you post to the Website will be considered non-confidential and non-proprietary. By providing any Posts, you grant Insight Media Group, LLC and our affiliates and service providers, and each of their and our respective licensees, successors, and assigns the right to use, reproduce, modify, perform, display, distribute, and otherwise disclose to third parties any such material for any purpose. You understand and acknowledge that you are responsible for any Posts you submit or contribute, and you, not TDS, have full responsibility for such content, including its legality, reliability, accuracy, and appropriateness. TDS is not responsible or liable to any third party for the content or accuracy of any Posts posted by you or any other user of the Website. Monitoring and Enforcement; Termination TDS has the right to: Without limiting the foregoing, TDS has the right to cooperate fully with any law enforcement authorities or court order requesting or directing us to disclose the identity or other information of anyone posting any materials on or through the Website. YOU WAIVE AND HOLD HARMLESS TDS AND ITS AFFILIATES, LICENSEES, AND SERVICE PROVIDERS FROM ANY CLAIMS RESULTING FROM ANY ACTION TAKEN BY ANY OF THE FOREGOING PARTIES DURING, OR TAKEN AS A CONSEQUENCE OF, INVESTIGATIONS BY EITHER TDS OR LAW ENFORCEMENT AUTHORITIES. However, TDS does not undertake to review all material before it is posted on this Website and cannot ensure prompt removal of objectionable material after it has been posted. Accordingly, we assume no liability for any action or inaction regarding transmissions, communications, or content provided by any user or third party. TDS has no liability or responsibility to anyone for performance or nonperformance of the activities described in this section. Content Standards These Content Standards apply to any and all Posts and use of Interactive Services. Posts must in their entirety comply with all applicable federal, state, local, and international laws and regulations. Without limiting the foregoing, Posts must not: Copyright Infringement In accordance with the Digital Millennium Copyright Act (“DMCA”) and other applicable law, TDS has adopted a policy of terminating, in appropriate circumstances, any user who is deemed to be a repeat infringer. TDS may also, in our sole discretion, limit access to the Website or Interactive Services if you infringe any intellectual property rights of others, whether or not you are considered a repeat infringement. If you believe that any content made available on the Website infringes upon any copyright which you own or control, you may file a notification of such infringement with our designated copyright agent as set forth below. ‍Towards Data Science 548 Market Street, PMB 50938 San Francisco, CA, US E-Mail Address: [email protected]. Your written notice must: (a) contain your physical or electronic signature; (b) identify the copyrighted work alleged to have been infringed; (c) identify the allegedly infringing material in a sufficiently precise manner to allow us to locate that material; (d) contain adequate information by which we can contact you (including postal address, telephone number, and email address); (e) contain a statement that you have a good faith belief that use of the copyrighted material is not authorized by the copyright owner, the copyright owner’s agent, or the law; (f) contain a statement that the information in the written notice is accurate; and (g) contain a statement, under penalty of perjury, that you are authorized to act on behalf of the copyright owner. Please do not send notices or inquiries unrelated to alleged copyright infringement to our designated copyright agent. Please see 17 U.S.C. §512(c)(3) for the requirements of a proper notification. If you believe in good faith that someone has wrongfully filed a notice of copyright infringement against you, the DMCA permits you to send us a counter-notice. Notices and counter-notices must meet the current statutory requirements imposed by the DMCA. If you knowingly misrepresent in your notification that the material or activity is infringing, you will be liable for any damages, including costs and attorneys’ fees, incurred by us or the alleged infringer as the result of our relying upon such misrepresentation in removing or disabling access to the material or activity claimed to be infringing. Reliance on Information Posted The information presented on or through this Website is made available solely for general information purposes. TDS does not warrant the accuracy, completeness, or usefulness of this information. Any reliance you place on such information is strictly at your own risk. TDS disclaims all liability and responsibility arising from any reliance placed on such materials by you or any other visitor to this Website, or by anyone who may be informed of any of its contents. This Website includes content provided by third parties, including materials provided by other users, bloggers, and third-party licensors, syndicators, aggregators, and/or reporting services. All statements and/or opinions expressed in these materials, and all articles and responses to questions and other content, other than the content provided by TDS, are solely the opinions and the responsibility of the person or entity providing those materials. These materials do not necessarily reflect the opinion of TDS. We are not responsible, or liable to you or any third party, for the content or accuracy of any materials provided by any third parties. Changes to the Website TDS may update the content on this Website from time to time, but its content is not necessarily complete or up-to-date. Any of the material on this Website may be out of date at any given time, and TDS is under no obligation to update such material. Information About You and Your Visits to the Website All information TDS collects on this Website is subject to our Privacy Policy https://towardsdatascience.com/privacy-policy/. By using this Website, you consent to all actions taken by TDS with respect to your information in compliance with the Privacy Policy. Linking to the Website and Social Media Features You may link to the TDS homepage, provided you do so in a way that is fair and legal and does not damage our reputation or take advantage of it, but you must not establish a link in such a way as to suggest any form of association, approval, or endorsement on our part without our express written consent. This Website may provide certain social media features that enable you to: You may use these features solely as they are provided by us and solely with respect to the content they are displayed with, and otherwise in accordance with any additional terms and conditions we provide with respect to such features. Subject to the foregoing, you must not: The website from which you are linking, or on which you make certain content accessible, must comply in all respects with the Content Standards set out in these Terms of Use. You agree to cooperate with TDS in causing any unauthorized framing or linking immediately to stop. TDS reserves the right to withdraw linking permission without notice. TDS may disable all or any social media features and any links at any time without notice in our discretion. Links from the Website If the Website contains links to other sites and resources provided by third parties, these links are provided for your convenience only. This includes links contained in advertisements, including banner advertisements and sponsored links. TDS has no control over the contents of those sites or resources and accept no responsibility for them or for any loss or damage that may arise from your use of them. If you decide to access any of the third-party websites linked to this Website, you do so entirely at your own risk and subject to the terms and conditions of use for such websites. Disclaimer of Warranties TO THE FULLEST EXTENT PROVIDED BY LAW, TDS WILL NOT BE LIABLE FOR ANY LOSS OR DAMAGE CAUSED BY YOUR USE OF THE WEBSITE OR ANY SERVICES OR ITEMS OBTAINED THROUGH THE WEBSITE OR YOUR DOWNLOADING OF ANY MATERIAL POSTED ON IT, OR ON ANY WEBSITE LINKED TO IT. YOUR USE OF THIS WEBSITE, ITS CONTENT, AND ANY SERVICES OR ITEMS OBTAINED THROUGH THIS WEBSITE IS AT YOUR OWN RISK. THIS WEBSITE, ITS CONTENT, AND ANY SERVICES OR ITEMS OBTAINED THROUGH THE WEBSITE ARE PROVIDED ON AN “AS IS” AND “AS AVAILABLE” BASIS, WITHOUT ANY WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED OR OTHERWISE, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT, AND FITNESS FOR PARTICULAR PURPOSE. NEITHER TDS NOR ANY PERSON ASSOCIATED WITH TDS MAKES ANY WARRANTY OR REPRESENTATION WITH RESPECT TO THE COMPLETENESS, SECURITY, RELIABILITY, QUALITY, ACCURACY, OR AVAILABILITY OF THIS WEBSITE. WITHOUT LIMITING THE FOREGOING, NEITHER TDS NOR ANYONE ASSOCIATED WITH TDS REPRESENTS OR WARRANTS THAT THIS WEBSITE, ITS CONTENT, OR ANY SERVICES OR ITEMS OBTAINED THROUGH THIS WEBSITE WILL BE ACCURATE, RELIABLE, ERROR-FREE, OR UNINTERRUPTED, THAT DEFECTS WILL BE CORRECTED, THAT OUR SITE OR THE SERVER THAT MAKES IT AVAILABLE ARE FREE OF VIRUSES OR OTHER HARMFUL COMPONENTS, OR THAT THIS WEBSITE OR ANY SERVICES OR ITEMS OBTAINED THROUGH THIS WEBSITE WILL OTHERWISE MEET YOUR NEEDS OR EXPECTATIONS. THE FOREGOING DOES NOT AFFECT ANY WARRANTIES THAT CANNOT BE EXCLUDED OR LIMITED UNDER APPLICABLE LAW. Limitation on Liability TO THE FULLEST EXTENT PROVIDED BY LAW, IN NO EVENT WILL TDS, ITS AFFILIATES, OR THEIR LICENSORS, SERVICE PROVIDERS, EMPLOYEES, AGENTS, OFFICERS, OR DIRECTORS BE LIABLE FOR DAMAGES OF ANY KIND, UNDER ANY LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH YOUR USE, OR INABILITY TO USE, THIS WEBSITE, ANY WEBSITES LINKED TO IT, ANY CONTENT ON THIS WEBSITE OR SUCH OTHER WEBSITES, INCLUDING ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR PUNITIVE DAMAGES, INCLUDING BUT NOT LIMITED TO, PERSONAL INJURY, PAIN AND SUFFERING, EMOTIONAL DISTRESS, LOSS OF REVENUE, LOSS OF PROFITS, LOSS OF BUSINESS OR ANTICIPATED SAVINGS, LOSS OF USE, LOSS OF GOODWILL, LOSS OF DATA, AND WHETHER CAUSED BY TORT (INCLUDING NEGLIGENCE), BREACH OF CONTRACT, OR OTHERWISE, EVEN IF FORESEEABLE. THE FOREGOING DOES NOT AFFECT ANY LIABILITY THAT CANNOT BE EXCLUDED OR LIMITED UNDER APPLICABLE LAW. Indemnification You agree to defend, indemnify, and hold harmless TDS, its affiliates, licensors, and service providers, and its and their respective officers, directors, employees, contractors, agents, licensors, suppliers, successors, and assigns from and against any claims, liabilities, damages, judgments, awards, losses, costs, expenses, or fees (including reasonable attorneys’ fees) arising out of or relating to your violation of these Terms of Use or your use of this Website, including, but not limited to, your Posts, any use of this Website’s content, services, and products other than as expressly authorized in these Terms of Use, or your use of any information obtained from this Website. Governing Law and Jurisdiction All matters relating to this Website and these Terms of Use, and any dispute or claim arising therefrom or related thereto (in each case, including non-contractual disputes or claims), shall be governed by and construed in accordance with the internal laws of the State of New York without giving effect to any choice or conflict of law provision or rule (whether of the State of New York or any other jurisdiction). Any legal suit, action, or proceeding arising out of, or related to, these Terms of Use or this Website shall be instituted exclusively in the federal courts of the United States or the courts of the State of New York, although TDS  retains the right to bring any suit, action, or proceeding against you for breach of these Terms of Use in your country of residence or any other relevant country. You waive any and all objections to the exercise of jurisdiction over you by such courts and to venue in such courts. Arbitration At TDS’s sole discretion, it may require you to submit any disputes arising from these Terms of Use or use of this Website, including disputes arising from or concerning their interpretation, violation, invalidity, non-performance, or termination, to final and binding arbitration under the Rules of Arbitration of the American Arbitration Association applying New Yokr law. Limitation on Time to File Claims ANY CAUSE OF ACTION OR CLAIM YOU MAY HAVE ARISING OUT OF OR RELATING TO THESE TERMS OF USE OR THIS WEBSITE MUST BE COMMENCED WITHIN ONE (1) YEAR AFTER THE CAUSE OF ACTION ACCRUES; OTHERWISE, SUCH CAUSE OF ACTION OR CLAIM IS PERMANENTLY BARRED. Waiver and Severability No waiver by TDS of any term or condition set out in these Terms of Use shall be deemed a further or continuing waiver of such term or condition or a waiver of any other term or condition, and any failure of TDS to assert a right or provision under these Terms of Use shall not constitute a waiver of such right or provision. If any provision of these Terms of Use is held by a court or other tribunal of competent jurisdiction to be invalid, illegal, or unenforceable for any reason, such provision shall be eliminated or limited to the minimum extent such that the remaining provisions of the Terms of Use will continue in full force and effect. Entire Agreement The Terms of Use, and our Privacy Policy constitute the sole and entire agreement between you and TDS regarding this Website and supersede all prior and contemporaneous understandings, agreements, representations, and warranties, both written and oral, regarding this Website. Your Comments and Concerns This website is operated by Insight Media Group, LLC. All notices of copyright infringement claims should be emailed to us at [email protected]. Contact Us Towards Data Science 548 Market Street PMB 50938 San Francisco, CA, US Google Voice: 707-653-5505 Toll-free: (844) 503-3215 Your home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals."
  }
]